[
    {
        "id": "7d50627a.c0305c",
        "type": "tab",
        "label": "TEMPLATE",
        "disabled": false,
        "info": ""
    },
    {
        "id": "64a77286.f2929c",
        "type": "tab",
        "label": "Settings flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1241644c.fa076c",
        "type": "tab",
        "label": "Monitoring Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5d59b9ac.ec0a48",
        "type": "tab",
        "label": "Login",
        "disabled": false,
        "info": ""
    },
    {
        "id": "10e8f1e2.a444de",
        "type": "tab",
        "label": "Resource Handling",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8b3f1f72.5182c",
        "type": "tab",
        "label": "v2 Metadata",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d564f4b.93d0e08",
        "type": "tab",
        "label": "v2 Service Document",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d5cfaaa7.77a3a8",
        "type": "tab",
        "label": "v2 ALL SL Resources",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2a9473e4.f1606c",
        "type": "tab",
        "label": "v2 Save Changes",
        "disabled": false,
        "info": ""
    },
    {
        "id": "42e768745f2b135b",
        "type": "tab",
        "label": "Logout",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7385682192eae7a5",
        "type": "tab",
        "label": "Custom Attributes",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6a7a3582c19005df",
        "type": "tab",
        "label": "User Management",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0331e70144eb556f",
        "type": "tab",
        "label": "get Search tree",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "461250bf7f60a857",
        "type": "tab",
        "label": "GET SearchFieldsData",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c0effdf177c49a23",
        "type": "tab",
        "label": "GET GetPossibleValues",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cd9e3458cc689864",
        "type": "tab",
        "label": "GET SearchItemResults",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e541e876c940baae",
        "type": "tab",
        "label": "GET SearchItemResultsDetailByItemCode",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eb304ea81c03dcf6",
        "type": "tab",
        "label": "get Companies",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4fec2bca85620dbf",
        "type": "tab",
        "label": "GET SearchItemResultsWithKeywords",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f408caca973204a5",
        "type": "tab",
        "label": "GET ClientList",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f8f36fd1bdd8ebf4",
        "type": "tab",
        "label": "Client List Details",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e4fe51cffe55d142",
        "type": "tab",
        "label": "Value Helps",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b4c909891809f71f",
        "type": "tab",
        "label": "Client Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5a9685c3252b1c35",
        "type": "tab",
        "label": "batchCall",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f2739e90.9459f",
        "type": "tab",
        "label": "Metadata Import/Export",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a48c03e025f12cb7",
        "type": "tab",
        "label": "ENT_PORTAL_PARAMS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "df177455398999d0",
        "type": "tab",
        "label": "Shopping cart",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "126e836d1563dc86",
        "type": "tab",
        "label": "Validation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8c51ee3b7ae835de",
        "type": "tab",
        "label": "Sales Quotation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "addd85c3d5ea4e16",
        "type": "tab",
        "label": "Sales Order",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "08524c2b396022f3",
        "type": "tab",
        "label": "GET VAT RATE BY CODE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5e32f6c26e2f5357",
        "type": "tab",
        "label": "[CockPit] Metadata Ui",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e6958271.bfc86",
        "type": "subflow",
        "name": "login common params check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 180,
                "wires": [
                    {
                        "id": "fd71715a.79511"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 480,
                "y": 160,
                "wires": [
                    {
                        "id": "fd71715a.79511",
                        "port": 0
                    }
                ]
            },
            {
                "x": 480,
                "y": 200,
                "wires": [
                    {
                        "id": "fd71715a.79511",
                        "port": 1
                    }
                ]
            },
            {
                "x": 480,
                "y": 240,
                "wires": [
                    {
                        "id": "fd71715a.79511",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "525de41e.afaaec",
        "type": "subflow",
        "name": "logging & response",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 180,
                "wires": [
                    {
                        "id": "c378e56c.1b7208"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d72448b3.2a62c8",
        "type": "subflow",
        "name": "GET SL Params",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 200,
                "wires": [
                    {
                        "id": "70bc2da1.4d5b34"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 180,
                "wires": [
                    {
                        "id": "7a8b292.18babd8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 700,
                "y": 220,
                "wires": [
                    {
                        "id": "7a8b292.18babd8",
                        "port": 1
                    },
                    {
                        "id": "70bc2da1.4d5b34",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "4217f61f.7e7488",
        "type": "subflow",
        "name": "log files init",
        "info": "Input parameters:\n- msg.flowInfo.**flowStartTimestamp**\n- msg.flowInfo.**flowName**\n\nOutput parameters:\n- msg.serviceLayer.**logPath**\n- msg.serviceLayer.**infoLogFile**\n- msg.serviceLayer.**errorLogFile**",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 180,
                "wires": [
                    {
                        "id": "2952a253.8b247e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 560,
                "y": 180,
                "wires": [
                    {
                        "id": "2952a253.8b247e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "8b68de83.9195b",
        "type": "subflow",
        "name": "Configuration",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "733abaeb.7d6d94"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 80,
                "wires": [
                    {
                        "id": "eb33d84c.17cae8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "configFilename",
                "type": "str",
                "value": "config_flow.json",
                "ui": {
                    "label": {
                        "en-US": "Config Filename"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "23d831bf.13758e",
        "type": "subflow",
        "name": "Iterate",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 219,
                "wires": [
                    {
                        "id": "1b9cbd08.0f8ab3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 454,
                "y": 174,
                "wires": [
                    {
                        "id": "1b9cbd08.0f8ab3",
                        "port": 0
                    }
                ]
            },
            {
                "x": 455,
                "y": 259,
                "wires": [
                    {
                        "id": "1b9cbd08.0f8ab3",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "inputVarName",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-arrow-circle-right",
                    "label": {
                        "en-US": "msg."
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "currentObjectName",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "1efaab79.726325",
        "type": "subflow",
        "name": "GET SL Params Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 200,
                "wires": [
                    {
                        "id": "c408819b.c6bdb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 180,
                "wires": [
                    {
                        "id": "28a1e738.2bfa48",
                        "port": 0
                    }
                ]
            },
            {
                "x": 480,
                "y": 220,
                "wires": [
                    {
                        "id": "c408819b.c6bdb",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "b2346476.0f6e88",
        "type": "subflow",
        "name": "login common params check (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "9f12c44e.b532a8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 980,
                "y": 220,
                "wires": [
                    {
                        "id": "a3433208.07e11",
                        "port": 0
                    }
                ]
            },
            {
                "x": 980,
                "y": 80,
                "wires": [
                    {
                        "id": "55010041.51eb2",
                        "port": 0
                    },
                    {
                        "id": "0ebd0aa8c3e8aaa6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "b4c30a5b.fcd4e8",
        "type": "subflow",
        "name": "GET SL Params (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 200,
                "wires": [
                    {
                        "id": "96d104f0.634cb8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 180,
                "wires": [
                    {
                        "id": "e433710d.c55ab",
                        "port": 0
                    }
                ]
            },
            {
                "x": 700,
                "y": 220,
                "wires": [
                    {
                        "id": "e433710d.c55ab",
                        "port": 1
                    },
                    {
                        "id": "96d104f0.634cb8",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "b155d125.5d094",
        "type": "subflow",
        "name": "logging & response (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 180,
                "wires": [
                    {
                        "id": "19bdd713.bd2199"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "322da763fc08e6b1",
        "type": "subflow",
        "name": "session check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "a8212c35dcc689d2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 60,
                "wires": [
                    {
                        "id": "0ace5bb4bc290b37",
                        "port": 0
                    }
                ]
            },
            {
                "x": 700,
                "y": 140,
                "wires": [
                    {
                        "id": "7c497196ea3ed0a2",
                        "port": 0
                    },
                    {
                        "id": "5a1dc48be5cb06ba",
                        "port": 0
                    },
                    {
                        "id": "fe78e97491595305",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9f6ec0ec.1500d",
        "type": "subflow",
        "name": "Configuration",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "241bf61a.a6f7aa"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 80,
                "wires": [
                    {
                        "id": "a7923943.665b98",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "configFilename",
                "type": "str",
                "value": "config_flow.json",
                "ui": {
                    "label": {
                        "en-US": "Config Filename"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "cc9afb6d.1e98a8",
        "type": "subflow",
        "name": "ConvertFieldIdToCampoOitm",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 160,
                "wires": [
                    {
                        "id": "fc7b380c439b835b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 820,
                "y": 160,
                "wires": [
                    {
                        "id": "6407d314.4cee3c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "1e460b6845924ff6",
        "type": "subflow",
        "name": "Set Database",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 200,
                "wires": [
                    {
                        "id": "baa82335c883ec1b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 560,
                "y": 200,
                "wires": [
                    {
                        "id": "baa82335c883ec1b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "d38eb387.6bd28",
        "type": "config-log",
        "logname": "DN - log config",
        "logdir": "D:\\Projects\\ENT_GGR_PurchaseDeliveryNotes\\API\\NodeRED\\ENT_GGR_PurchaseDeliveryNotes\\log_flows\\",
        "stamp": "local",
        "logstyle": "plain",
        "logrotate": false,
        "logcompress": false,
        "logrotatecount": "5",
        "logsize": "1000"
    },
    {
        "id": "f266b3eb.ef643",
        "type": "config-log",
        "logname": "DN - log config",
        "logdir": "D:\\Projects\\ENT_GGR_PurchaseDeliveryNotes\\API\\NodeRED\\ENT_GGR_PurchaseDeliveryNotes\\log_flows\\",
        "stamp": "local",
        "logstyle": "plain",
        "logrotate": false,
        "logcompress": false,
        "logrotatecount": "5",
        "logsize": "1000"
    },
    {
        "id": "b298e45c.688258",
        "type": "HanaClientConfig",
        "configSetup": "config-file",
        "configFileName": "\\config_flow.json",
        "server": " ",
        "port": " ",
        "database": " ",
        "userName": " ",
        "password": " "
    },
    {
        "id": "596459b.d78c4a8",
        "type": "b1-service-layer-config",
        "configSetup": "config-file",
        "configFileName": "config_flow.json",
        "serviceLayerUrl": "-",
        "companyName": "-",
        "userName": "-",
        "password": "-",
        "maxPageSize": "10",
        "logFilePath": ""
    },
    {
        "id": "fd71715a.79511",
        "type": "function",
        "z": "e6958271.bfc86",
        "name": "check params",
        "func": "const { keyUI, database, userName, password, b1SessionId } = msg.req.query;\nif (b1SessionId) {\n    return [null, msg, null];\n} else {\n    //Vlad - disabled control on keyUI\n    /*if (keyUI !== 'MmhtLQ82DaJ58rHG') { \n        msg.payload = 'User not authenticated.';\n        return [null, null, msg];\n    }*/\n    if (!database) {\n        msg.payload = 'No database connection parameter.';\n        return [null, null, msg];\n    }\n//    if (!keyUI || !userName || !password) {\n    if ( !userName || !password) {\n        msg.payload = 'User not authenticated.';\n        return [null, null, msg];\n    }\n    \n    msg.configOverride = msg.req.query;\n    return [msg, null, null];\n}",
        "outputs": 3,
        "noerr": 0,
        "x": 340,
        "y": 180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "978a2747.b47c48",
        "type": "flogger",
        "z": "525de41e.afaaec",
        "name": "ERROR log",
        "logfile": "",
        "inputchoice": "object",
        "inputobject": "toLog",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "ERROR",
        "logconfig": "d38eb387.6bd28",
        "sendpane": true,
        "x": 550,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2e35148a.6eba7c",
        "type": "flogger",
        "z": "525de41e.afaaec",
        "name": "INFO log",
        "logfile": "",
        "inputchoice": "object",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "d38eb387.6bd28",
        "sendpane": true,
        "x": 360,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "58a2bfc2.e2fef",
        "type": "function",
        "z": "525de41e.afaaec",
        "name": "log settings",
        "func": "msg.loglevel = 'INFO';\nmsg.logfile = flow.get('infoFilename');\nmsg.logfile = msg.serviceLayer.infoLogFile;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 240,
        "wires": [
            [
                "754e85bf.7ae3bc"
            ]
        ]
    },
    {
        "id": "c378e56c.1b7208",
        "type": "function",
        "z": "525de41e.afaaec",
        "name": "log settings",
        "func": "msg.loglevel = 'ERROR';\nmsg.logfile = flow.get('errorFilename');\nmsg.logfile = msg.serviceLayer.errorLogFile;\nmsg.toLog = msg.error.message;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 180,
        "wires": [
            [
                "58a2bfc2.e2fef"
            ]
        ]
    },
    {
        "id": "23c2f371.0e050c",
        "type": "flogger",
        "z": "525de41e.afaaec",
        "name": "ERROR log",
        "logfile": "",
        "inputchoice": "object",
        "inputobject": "toLogExtra",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "ERROR",
        "logconfig": "d38eb387.6bd28",
        "sendpane": true,
        "x": 370,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "89f43ad3.12c4f8",
        "type": "flogger",
        "z": "525de41e.afaaec",
        "name": "INFO log",
        "logfile": "",
        "inputchoice": "object",
        "inputobject": "toLog",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "d38eb387.6bd28",
        "sendpane": true,
        "x": 520,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "754e85bf.7ae3bc",
        "type": "function",
        "z": "525de41e.afaaec",
        "name": "set loglevel null",
        "func": "msg.loglevel = null;\nmsg.toLogExtra = null;\n// output payload should be msg.toLog\nmsg.payload = JSON.stringify(msg.toLog);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 240,
        "wires": [
            [
                "66629f36.4a599"
            ]
        ]
    },
    {
        "id": "66629f36.4a599",
        "type": "http response",
        "z": "525de41e.afaaec",
        "name": "Response ERROR",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 240,
        "wires": []
    },
    {
        "id": "7a8b292.18babd8",
        "type": "function",
        "z": "d72448b3.2a62c8",
        "name": "format SAP params",
        "func": "const { b1SLerr } = msg;\nif (b1SLerr) {\n    return [null, msg];\n} else {\n    const params = msg.payload;\n    const formatParamsSAP = {};\n    msg.flowInfo.paramsSAP = {};\n    params.forEach(el => {\n        formatParamsSAP[el.Code] = el.U_Valore;\n    });\n    msg.flowInfo.paramsSAP = formatParamsSAP;\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 550,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "70bc2da1.4d5b34",
        "type": "b1-service-layer-request",
        "z": "d72448b3.2a62c8",
        "server": "596459b.d78c4a8",
        "name": "SL - Get Params",
        "serviceLayerMethod": "",
        "httpMethod": "GET",
        "slResponseObject": "paramsSAP",
        "x": 330,
        "y": 200,
        "wires": [
            [
                "7a8b292.18babd8"
            ],
            []
        ]
    },
    {
        "id": "2952a253.8b247e",
        "type": "function",
        "z": "4217f61f.7e7488",
        "name": "log prep",
        "func": "const today = msg.flowInfo.flowStartTimestamp;\nconst day = '' + today.getDate();\nconst formatDay = day.length === 1 ? `0${day}` : day;\nconst month = '' + (today.getMonth() + 1);\nconst formatMonth = month.length === 1 ? `0${month}` : month;\nconst yearFormat = today.getFullYear();\nconst hours = today.getHours();\nconst minutes = today.getMinutes();\n\nmsg.loglevel = 'INFO';\nmsg.toLogExtra = '';\nmsg.serviceLayer = {};\n\nconst { flowName } = msg.flowInfo;\nconst errFilename  = `error_flow-${flowName}-${yearFormat}-${formatMonth}-${formatDay}_${hours}-${minutes}.txt`;\nconst infoFilename = `log_flow-${flowName}-${yearFormat}-${formatMonth}-${formatDay}_${hours}-${minutes}.txt`;\n\nconst { userDir, sep } = global.get('redSettings');\nmsg.serviceLayer.logPath = `${userDir}\\\\log_flows`;\nmsg.serviceLayer.infoLogFile = infoFilename;\nmsg.serviceLayer.errorLogFile = errFilename;\nflow.set('infoFilename', infoFilename);\nflow.set('errorFilename', errFilename);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "2043f41e.53a34c",
        "type": "file in",
        "z": "8b68de83.9195b",
        "name": "Read flow config",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 350,
        "y": 80,
        "wires": [
            [
                "ed713595.475088"
            ]
        ]
    },
    {
        "id": "ed713595.475088",
        "type": "json",
        "z": "8b68de83.9195b",
        "name": "Convert to JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 570,
        "y": 80,
        "wires": [
            [
                "eb33d84c.17cae8"
            ]
        ]
    },
    {
        "id": "eb33d84c.17cae8",
        "type": "function",
        "z": "8b68de83.9195b",
        "name": "Init",
        "func": "if (msg.flowInfo === undefined) \n    msg.flowInfo = {};\nmsg.flowInfo.config = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "733abaeb.7d6d94",
        "type": "function",
        "z": "8b68de83.9195b",
        "name": "Init",
        "func": "const filePath = global.get(\"redSettings\").userDir;\n\nconst fileName = env.get(\"configFilename\");\nmsg.filename = filePath + fileName;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 80,
        "wires": [
            [
                "2043f41e.53a34c"
            ]
        ]
    },
    {
        "id": "1b9cbd08.0f8ab3",
        "type": "function",
        "z": "23d831bf.13758e",
        "name": "Iterate",
        "func": "var arrayVarName = \"iterationInfo\";\nvar inputVarName = \"payload\";\n//var tempArrayVarName = env.get(\"arrayVarName\");\nvar tempInputVarName = env.get(\"inputVarName\");\nvar currentObjectName = env.get(\"currentObjectName\");\n// TO DO \n// aggiungere un ulteriore proprieta' che indica da dove devo copiare i dati, \n// esempio payload dovro' copiare i dati da payload in DocumentLines \n//         msg.arraInfo[nomevariabileTo] = msg[nomevariabileFrom]\n// nell'oggetto msg.iterationInfo andremo a creare i vari oggetti utilizzati dal nodo\n// esempio :\n// msg.iterationInfo.current riga che contiene i dati attualmente iterati , esempio currentDocumentLine\n// msg.iterationInfo._current array ad uso interno\n// msg.iterationInfo.     , esempio DocumentLines (tutto l'array)\n// \nif (currentObjectName !=='')\n    arrayVarName = '_' + currentObjectName + '_internal_DoNotUse';\nif (tempInputVarName !=='')    \n    inputVarName = tempInputVarName;    \n\nvar nextObj, out;\n//var itt = msg.iterationInfo;\nvar itt = msg[arrayVarName];\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array    \n    //if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {    \n    if( Object.prototype.toString.call(msg[inputVarName]) !== '[object Array]' ) {       \n        //msg.payload = [msg.payload];       \n        msg[inputVarName] = [msg[inputVarName]];   \n        \n    }    \n    //msg.iterationInfo = itt = {};    \n    msg[arrayVarName] = itt = {};    \n    itt.index = -1;    \n    //itt.inArray = msg.payload;    \n    itt.inArray = msg[inputVarName];    \n    itt.outArray = [];\n    //Otherwise just push the input to the output array\n    } else {    \n    //itt.outArray.push(msg.payload)    \n    itt.outArray.push(msg[inputVarName])}\n    //Goto next object\n    itt.index ++;\n    //If there are stil objects left to iterate goto the next one in the original array\n    if (itt.index < itt.inArray.length) {    \n        nextObj = msg;    \n        //msg.payload = itt.inArray[itt.index];    \n        msg[currentObjectName] = itt.inArray[itt.index];\n        //otherwise pass the out array as the payload\n    } else {    \n        out = msg;    \n        //msg.payload = itt.outArray;    \n        msg[inputVarName] = itt.outArray;    \n        //delete msg.iterationInfo;    \n        delete msg[arrayVarName];\n    }\nreturn [nextObj, out];",
        "outputs": "2",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 347,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "28a1e738.2bfa48",
        "type": "function",
        "z": "1efaab79.726325",
        "name": "format SAP params",
        "func": "const { paramsSAP } = msg.flowInfo;\nconst formatParamsSAP = {};\nparamsSAP.forEach(el => formatParamsSAP[el[\"Code\"]] = el[\"U_Valore\"]);\nmsg.flowInfo.paramsSAP = formatParamsSAP;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c408819b.c6bdb",
        "type": "b1-service-layer-request",
        "z": "1efaab79.726325",
        "server": "596459b.d78c4a8",
        "name": "SL - Get Params",
        "serviceLayerMethod": "",
        "httpMethod": "GET",
        "slResponseObject": "paramsSAP",
        "x": 290,
        "y": 200,
        "wires": [
            [
                "28a1e738.2bfa48"
            ],
            []
        ]
    },
    {
        "id": "ea408894.d271b8",
        "type": "json",
        "z": "b2346476.0f6e88",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 110,
        "y": 200,
        "wires": [
            [
                "ea4096a.da3e968"
            ]
        ]
    },
    {
        "id": "9f12c44e.b532a8",
        "type": "file in",
        "z": "b2346476.0f6e88",
        "name": "",
        "filename": "config_flow.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "ea408894.d271b8"
            ]
        ]
    },
    {
        "id": "55010041.51eb2",
        "type": "function",
        "z": "b2346476.0f6e88",
        "name": "set autologin data",
        "func": "const { companyName, userName, password } = msg.config_flow_json['b1-sl-config'];\n\nmsg.autologin = {\n    database: companyName,\n    userName,\n    password\n};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6669c21.0716d3c",
        "type": "link out",
        "z": "b2346476.0f6e88",
        "name": "",
        "links": [
            "a3433208.07e11"
        ],
        "x": 675,
        "y": 180,
        "wires": []
    },
    {
        "id": "a3433208.07e11",
        "type": "link in",
        "z": "b2346476.0f6e88",
        "name": "",
        "links": [
            "6669c21.0716d3c",
            "0f7d61665b113dc9",
            "377c9b81139dc739",
            "26e0115e0176da0f",
            "11cb865d8193182a"
        ],
        "x": 835,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "71b2a4e8.923e4c",
        "type": "debug",
        "z": "b2346476.0f6e88",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 280,
        "wires": []
    },
    {
        "id": "c74a0703.c6d608",
        "type": "login-user",
        "z": "b2346476.0f6e88",
        "name": "ldap-login",
        "url": "ldap://localhost:389",
        "baseDN": "ou=ourldap,dc=neots,dc=local",
        "x": 100,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "ea4096a.da3e968",
        "type": "function",
        "z": "b2346476.0f6e88",
        "name": "LoginPayload",
        "func": "msg.config_flow_json=msg.payload\nconst { username, password, database } = msg.req.body;\nconst authType = msg.config_flow_json['authentication'].authType;\n// msg.payload=msg.config_flow_json[\"ldap_authentication\"];\n\n// var header = msg.req.headers;\n// for(var key in header){\n//     if(key.toLowerCase()===\"login-email\"){\n//         return [null, null, msg];\n//     }\n// }\n// if (msg.req.body.loginEmail) {\n//     return [null, null, msg];\n// }\n// if(!username||!password){\n//     msg.payload = \"UserName and Password can't be Blank\"\n//     return [null,msg,null]\n// }\n// msg.payload.filter = msg.payload.filter.replace(\"$$username\",username);\n// msg.payload.username = msg.payload.username.replace(\"$$username\",username);\n// msg.payload.password = password\n// return [msg,null,null];\nswitch (authType) {\n    case \"LDAP\":\n        // const { username, password, dbname } = msg.req.body;\n        msg.payload = msg.config_flow_json[\"ldap_authentication\"];\n        if(!username||!password){\n            msg.payload = \"UserName and Password can't be Blank\"\n            return [null,msg,null]\n        }\n        if (!database){\n            msg.payload = \"Database can't be Blank\"\n            return [null, msg, null]\n        }\n        msg.payload.filter = msg.payload.filter.replace(\"$$username\",username);\n        msg.payload.username = msg.payload.username.replace(\"$$username\",username);\n        msg.payload.password = password\n        return [msg,null,null];\n        break;\n    case \"customSingleSignOn\":\n        var header = msg.req.headers;\n        for(var key in header){\n            if(key.toLowerCase()===\"login-email\"){\n                return [null, null, msg];\n            }\n        }\n        break;\n    case \"basicOHEM\":\n        // const { username, password } = msg.req.body;\n        // const { username, password, dbname } = msg.req.body;\n        if (!username || !password) {\n            msg.payload = \"UserName and Password can't be Blank\"\n            return [null, msg, null]\n        }\n        if (!database) {\n            msg.payload = \"Database can't be Blank\"\n            return [null, msg, null]\n        }\n        // msg.configOverride={};\n        msg.configOverrideHana={}\n        msg.configOverrideHana.database = database;\n        msg.flowInfo.sql = `SELECT \"OHEM\".\"U_ENT_PWD\"\nFROM \"OHEM\"  left join \"OSLP\"\non \"OHEM\".\"salesPrson\"=\"OSLP\".\"SlpCode\"\nwhere \"OHEM\".\"email\"='${msg.req.body.username}' and\n\"OSLP\".\"Active\"='Y' and \"OSLP\".\"Locked\"='N'`;\n//         msg.flowInfo.sql = `SELECT \"U_ENT_PWD\"\n// FROM \"OHEM\" where \"email\"='${msg.req.body.username}' `;\n        return [null,null,null,msg];\n    case \"b1slpassthrough\":\n        // const { username, password, dbname } = msg.req.body;\n        if (!username || !password) {\n            msg.payload = \"UserName and Password can't be Blank\"\n            return [null, msg, null]\n        }\n        if (!database) {\n            msg.payload = \"Database can't be Blank\"\n            return [null, msg, null]\n        }\n        return [null, null, null,null, msg];\n    default:\n        \n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 280,
        "wires": [
            [
                "983834be.a0c7d8",
                "ec13d6c8.bc1568"
            ],
            [
                "11cb865d8193182a"
            ],
            [
                "92fe8d0c50ba8eed"
            ],
            [
                "46898afb76dd8cb4"
            ],
            [
                "71f0119fdfe86311"
            ]
        ]
    },
    {
        "id": "93d83fff.ae038",
        "type": "function",
        "z": "b2346476.0f6e88",
        "name": "LoginCheck",
        "func": "if(msg.payload.find){\n    return [msg,null];\n}\nelse if(!msg.payload.login){\n    // var eMsg = msg.payload.message;\n    msg.payload =\"LDAP connection error\";\n    return [null, msg];\n}\nelse{\n    msg.payload =\"Invalid username/password\"\n    return [null,msg];\n}\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 160,
        "wires": [
            [
                "55010041.51eb2"
            ],
            [
                "6669c21.0716d3c"
            ]
        ]
    },
    {
        "id": "983834be.a0c7d8",
        "type": "debug",
        "z": "b2346476.0f6e88",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 370,
        "y": 160,
        "wires": []
    },
    {
        "id": "ec13d6c8.bc1568",
        "type": "find-user",
        "z": "b2346476.0f6e88",
        "name": "find",
        "url": "-",
        "baseDN": "-",
        "filter": "-",
        "attributes": "-",
        "x": 370,
        "y": 220,
        "wires": [
            [
                "93d83fff.ae038",
                "71b2a4e8.923e4c"
            ]
        ]
    },
    {
        "id": "46898afb76dd8cb4",
        "type": "HanaClient-request",
        "z": "b2346476.0f6e88",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 430,
        "y": 340,
        "wires": [
            [
                "2eb965c4f9c31ae6"
            ],
            [
                "0f7d61665b113dc9"
            ]
        ]
    },
    {
        "id": "0f7d61665b113dc9",
        "type": "link out",
        "z": "b2346476.0f6e88",
        "name": "",
        "mode": "link",
        "links": [
            "a3433208.07e11"
        ],
        "x": 595,
        "y": 380,
        "wires": []
    },
    {
        "id": "2eb965c4f9c31ae6",
        "type": "function",
        "z": "b2346476.0f6e88",
        "name": "",
        "func": "if(msg.payload && msg.payload.length===0){\n    msg.payload=\"User not found\";\n    return [null,msg];\n}\nif (msg.payload[0].U_ENT_PWD){\n    msg.file = msg.req.body.password;\n    msg.checksum = msg.payload[0].U_ENT_PWD;\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 340,
        "wires": [
            [
                "1efbd5e033b48103"
            ],
            [
                "377c9b81139dc739"
            ]
        ]
    },
    {
        "id": "1efbd5e033b48103",
        "type": "checksum",
        "z": "b2346476.0f6e88",
        "name": "",
        "file": "file",
        "fileType": "msg",
        "checksum": "checksum",
        "checksumType": "msg",
        "hashFunction": "md5",
        "hashFunctionType": "select",
        "isFile": false,
        "isFileChecksum": false,
        "x": 760,
        "y": 340,
        "wires": [
            [
                "14cb807b8e2212a6"
            ]
        ]
    },
    {
        "id": "14cb807b8e2212a6",
        "type": "function",
        "z": "b2346476.0f6e88",
        "name": "",
        "func": "if(msg.payload){\n   return [msg,null]; \n}\nelse{\n    msg.payload=\"Passwoard didn't match\"\n    return [null,msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "5b65c5a1fa7c3468"
            ],
            [
                "26e0115e0176da0f"
            ]
        ]
    },
    {
        "id": "377c9b81139dc739",
        "type": "link out",
        "z": "b2346476.0f6e88",
        "name": "",
        "mode": "link",
        "links": [
            "a3433208.07e11"
        ],
        "x": 755,
        "y": 380,
        "wires": []
    },
    {
        "id": "26e0115e0176da0f",
        "type": "link out",
        "z": "b2346476.0f6e88",
        "name": "",
        "mode": "link",
        "links": [
            "a3433208.07e11"
        ],
        "x": 985,
        "y": 380,
        "wires": []
    },
    {
        "id": "11cb865d8193182a",
        "type": "link out",
        "z": "b2346476.0f6e88",
        "name": "",
        "mode": "link",
        "links": [
            "a3433208.07e11"
        ],
        "x": 385,
        "y": 260,
        "wires": []
    },
    {
        "id": "92fe8d0c50ba8eed",
        "type": "link out",
        "z": "b2346476.0f6e88",
        "name": "",
        "mode": "link",
        "links": [
            "78c241095b60f9e1"
        ],
        "x": 385,
        "y": 300,
        "wires": []
    },
    {
        "id": "78c241095b60f9e1",
        "type": "link in",
        "z": "b2346476.0f6e88",
        "name": "",
        "links": [
            "92fe8d0c50ba8eed",
            "5b65c5a1fa7c3468"
        ],
        "x": 635,
        "y": 80,
        "wires": [
            [
                "55010041.51eb2"
            ]
        ]
    },
    {
        "id": "5b65c5a1fa7c3468",
        "type": "link out",
        "z": "b2346476.0f6e88",
        "name": "",
        "mode": "link",
        "links": [
            "78c241095b60f9e1"
        ],
        "x": 1015,
        "y": 320,
        "wires": []
    },
    {
        "id": "71f0119fdfe86311",
        "type": "link out",
        "z": "b2346476.0f6e88",
        "name": "",
        "mode": "link",
        "links": [
            "0ebd0aa8c3e8aaa6"
        ],
        "x": 325,
        "y": 340,
        "wires": []
    },
    {
        "id": "0ebd0aa8c3e8aaa6",
        "type": "link in",
        "z": "b2346476.0f6e88",
        "name": "",
        "links": [
            "71f0119fdfe86311"
        ],
        "x": 885,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e433710d.c55ab",
        "type": "function",
        "z": "b4c30a5b.fcd4e8",
        "name": "format SAP params",
        "func": "const { b1SLerr } = msg;\nif (b1SLerr) {\n    return [null, msg];\n} else {\n    const params = msg.payload;\n    const formatParamsSAP = {};\n    msg.flowInfo.paramsSAP = {};\n    params.forEach(el => {\n        formatParamsSAP[el.Code] = el.U_Valore;\n    });\n    msg.flowInfo.paramsSAP = formatParamsSAP;\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 180,
        "wires": [
            [
                "76025d03.52e5a4"
            ],
            []
        ]
    },
    {
        "id": "76025d03.52e5a4",
        "type": "debug",
        "z": "b4c30a5b.fcd4e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 120,
        "wires": []
    },
    {
        "id": "96d104f0.634cb8",
        "type": "b1-service-layer-request",
        "z": "b4c30a5b.fcd4e8",
        "server": "596459b.d78c4a8",
        "name": "SL - Get Params",
        "serviceLayerMethod": "",
        "httpMethod": "GET",
        "slResponseObject": "paramsSAP",
        "x": 330,
        "y": 200,
        "wires": [
            [
                "e433710d.c55ab"
            ],
            []
        ]
    },
    {
        "id": "6b45f2a.03bfe0c",
        "type": "flogger",
        "z": "b155d125.5d094",
        "name": "ERROR log",
        "logfile": "",
        "inputchoice": "object",
        "inputobject": "toLog",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "ERROR",
        "logconfig": "f266b3eb.ef643",
        "sendpane": true,
        "x": 550,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "867d63ee.1035d",
        "type": "flogger",
        "z": "b155d125.5d094",
        "name": "INFO log",
        "logfile": "",
        "inputchoice": "object",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "f266b3eb.ef643",
        "sendpane": true,
        "x": 360,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "16ab932d.af33bd",
        "type": "function",
        "z": "b155d125.5d094",
        "name": "log settings",
        "func": "msg.loglevel = 'INFO';\nmsg.logfile = flow.get('infoFilename');\nmsg.logfile = msg.serviceLayer.infoLogFile;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 240,
        "wires": [
            [
                "64dcc275.b4bd0c"
            ]
        ]
    },
    {
        "id": "19bdd713.bd2199",
        "type": "function",
        "z": "b155d125.5d094",
        "name": "log settings",
        "func": "msg.loglevel = 'ERROR';\nmsg.logfile = flow.get('errorFilename');\nmsg.logfile = msg.serviceLayer.errorLogFile;\nmsg.toLog = msg.error.message;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 180,
        "wires": [
            [
                "16ab932d.af33bd"
            ]
        ]
    },
    {
        "id": "c425d596.a30668",
        "type": "flogger",
        "z": "b155d125.5d094",
        "name": "ERROR log",
        "logfile": "",
        "inputchoice": "object",
        "inputobject": "toLogExtra",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "ERROR",
        "logconfig": "f266b3eb.ef643",
        "sendpane": true,
        "x": 370,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "45caf131.5f6fa",
        "type": "flogger",
        "z": "b155d125.5d094",
        "name": "INFO log",
        "logfile": "",
        "inputchoice": "object",
        "inputobject": "toLog",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "f266b3eb.ef643",
        "sendpane": true,
        "x": 520,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "64dcc275.b4bd0c",
        "type": "function",
        "z": "b155d125.5d094",
        "name": "set loglevel null",
        "func": "msg.loglevel = null;\nmsg.toLogExtra = null;\n// output payload should be msg.toLog\nmsg.payload = JSON.stringify(msg.toLog);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 240,
        "wires": [
            [
                "288b275c.9552d8"
            ]
        ]
    },
    {
        "id": "288b275c.9552d8",
        "type": "http response",
        "z": "b155d125.5d094",
        "name": "Response ERROR",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 240,
        "wires": []
    },
    {
        "id": "0ace5bb4bc290b37",
        "type": "function",
        "z": "322da763fc08e6b1",
        "name": "session check",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies; \nconst { flowStartTimestamp } = msg.flowInfo;\nmsg.serviceLayer = {};\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n}\n\nif (sessionInfo) {\n    const reqSession = sessionInfo.filter(isReqSession);\n    // const reqSession = [ sessionInfo[sessionInfo.length - 1] ];\n    node.warn(reqSession)\n    if (reqSession.length > 0) {\n        const reqSessionInfo = reqSession[0];\n        const reqDatabase = reqSessionInfo.database;\n        const reqUserName = reqSessionInfo.userName;\n        const reqb1SessionId = reqSessionInfo.b1SessionId;\n        const reqEntSessionTimeout = reqSessionInfo.entSessionTimeout;\n        const reqLastAccessTimestamp = reqSessionInfo.lastAccessTimestamp;\n        \n        const timeDifferenceMs = flowStartTimestamp - reqLastAccessTimestamp;\n        const clientTimeoutMs = parseInt(reqEntSessionTimeout) * 60 * 1000 ;\n        \n        if (clientTimeoutMs - timeDifferenceMs > 0) {\n            // node.warn(clientTimeoutMs - timeDifferenceMs)\n            msg.serviceLayer.sessionId = reqb1SessionId;\n            const sessionIndex = sessionInfo.findIndex(isReqSession); // sessionInfo.length - 1;\n            sessionInfo[sessionIndex].lastAccessTimestamp = flowStartTimestamp;\n            msg.reqSession = reqSession[0];  //sessionInfo[sessionIndex];\n            // msg.configOverride = msg.reqSession;\n            msg.payload = reqSession[0]; //[sessionIndex];\n            // msg.headers['session'] = reqSession[0] ? reqSession[0].toString(): \"\";\n            return [msg, null];\n        } else {\n            \n            const sessionIndex = sessionInfo.findIndex(isReqSession);\n            const b1Session=isReqSession.b1SessionId;\n            const isReqB1Session = (elem) => {\n                return (\n                    elem.b1SessionId === b1Session\n                )\n            }\n            sessionInfo.splice(sessionIndex,1);\n            var oSesIn=sessionInfo.filter(isReqB1Session);\n            if(oSesIn.length===0){\n                msg.b1SessionId=b1Session;\n            }\n            global.set('sessionInfo', sessionInfo);\n            // msg.statusCode = 401;\n            // msg.payload = { error: 'Session expired.' }\n            msg.configOverride = reqSession[0];\n            return [null, msg];\n        }\n    }\n}\n\nmsg.statusCode = 401;\nmsg.payload = { error: 'User not authenticated.' }\n// msg.cookies = { entSessionId: \"\" };\n// msg.res.clearCookie('entSessionId');\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 80,
        "wires": [
            [],
            [
                "5a1dc48be5cb06ba"
            ]
        ]
    },
    {
        "id": "fe78e97491595305",
        "type": "b1-service-layer-request",
        "z": "322da763fc08e6b1",
        "server": "596459b.d78c4a8",
        "name": "b1 session Logout",
        "serviceLayerMethod": "Logout",
        "httpMethod": "POST",
        "slResponseObject": "",
        "x": 390,
        "y": 160,
        "wires": [
            [
                "7c497196ea3ed0a2"
            ],
            [
                "a9b17a981ca1fcaa"
            ]
        ]
    },
    {
        "id": "5a1dc48be5cb06ba",
        "type": "function",
        "z": "322da763fc08e6b1",
        "name": "",
        "func": "if (msg.b1SessionId){\n    msg.serviceLayer.sessionId = msg.b1SessionId;\n    return [null,msg]\n}\n// const { entSessionId } = msg.req.cookies;\nmsg.statusCode = 401;\nmsg.payload = { error: 'Session expired.' }\n// var entSessionId =`; expires = Thu, 01 Jan 1970 00: 00: 00 UTC; path = /;`\n// msg.cookie={\n// entSessionId\n// }\n// msg.res.clearCookie('entSessionId');\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 140,
        "wires": [
            [],
            [
                "fe78e97491595305"
            ]
        ]
    },
    {
        "id": "7c497196ea3ed0a2",
        "type": "function",
        "z": "322da763fc08e6b1",
        "name": "",
        "func": "msg.statusCode = 401;\nmsg.payload = { error: 'Session expired.' }\n// msg.res.clearCookie('entSessionId');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a8212c35dcc689d2",
        "type": "function",
        "z": "322da763fc08e6b1",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = `${msg.req.method}Resource`;\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 80,
        "wires": [
            [
                "0ace5bb4bc290b37"
            ]
        ]
    },
    {
        "id": "a9b17a981ca1fcaa",
        "type": "debug",
        "z": "322da763fc08e6b1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 490,
        "y": 220,
        "wires": []
    },
    {
        "id": "89789e5e.94bfd",
        "type": "file in",
        "z": "9f6ec0ec.1500d",
        "name": "Read flow config",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "8f6c52dd.9a28"
            ]
        ]
    },
    {
        "id": "8f6c52dd.9a28",
        "type": "json",
        "z": "9f6ec0ec.1500d",
        "name": "Convert to JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 570,
        "y": 80,
        "wires": [
            [
                "a7923943.665b98"
            ]
        ]
    },
    {
        "id": "a7923943.665b98",
        "type": "function",
        "z": "9f6ec0ec.1500d",
        "name": "Init",
        "func": "if (msg.flowInfo === undefined) \n    msg.flowInfo = {};\nmsg.flowInfo.config = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "241bf61a.a6f7aa",
        "type": "function",
        "z": "9f6ec0ec.1500d",
        "name": "Init",
        "func": "const filePath = global.get(\"redSettings\").userDir;\n//const filePath =\"C:\\\\ENTITEC\\\\Bonomi_Pattini_API\\\\\"\nconst fileName = env.get(\"configFilename\");\nmsg.filename = filePath + fileName;//\"C:\\\\Entitec\\\\NodeRED\\\\Interfaccia_Polialc\\\\\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 80,
        "wires": [
            [
                "89789e5e.94bfd"
            ]
        ]
    },
    {
        "id": "6407d314.4cee3c",
        "type": "function",
        "z": "cc9afb6d.1e98a8",
        "name": "ConvertToArray",
        "func": "var json = msg.payload\n\nconst paramToCampoOitm = {}\njson.forEach((record)=>{\n    paramToCampoOitm[record.NomeParametro]={}\n    paramToCampoOitm[record.NomeParametro][\"CampoOITM\"] = record.CampoOITM\n    paramToCampoOitm[record.NomeParametro][\"Etichetta\"] = record.Etichetta\n    paramToCampoOitm[record.NomeParametro][\"Ordinamento\"] = record.Ordinamento\n    paramToCampoOitm[record.NomeParametro][\"LookupQuery\"] = record.LookupQuery\n    paramToCampoOitm[record.NomeParametro][\"CampoPadre\"] = record.CampoPadre\n})\n//if (msg.flowInfo === undefined) msg.flowInfo={}\nmsg.flowInfo.paramToCampoOitm = {}\nmsg.flowInfo.paramToCampoOitm =paramToCampoOitm\nnode.warn(msg.flowInfo)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 160,
        "wires": [
            [
                "2dbeb354.23ca6c"
            ]
        ]
    },
    {
        "id": "3972601.edeb4a",
        "type": "function",
        "z": "cc9afb6d.1e98a8",
        "name": "Sql",
        "func": "//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\n\nvar sql = `SELECT ` +\n`T1.\\\"FieldID\\\"` +\n`,T1.\\\"AliasID\\\" as \\\"NomeParametro\\\"` +\n`,T2.\\\"U_FOITM\\\" as \\\"CampoOITM\\\"` +\n`,T2.\\\"U_LBLFILTER\\\" AS \\\"Etichetta\\\"` +\n`,T2.\\\"U_ORDER\\\" as \\\"Ordinamento\\\"` +\n`,T2.\\\"U_LookUpQry\\\" as \\\"LookupQuery\\\"` +\n`,IFNULL(T2.\\\"U_FFOITM\\\",'') as \\\"CampoPadre\\\"` +\n`, TO_BOOLEAN(CASE WHEN IFNULL(` +\n`(select Count(*) as c from  \\\"@VAR_MAP2OITM\\\" as T3` +\n` where \\\"U_FFOITM\\\" = substring(T1.\\\"AliasID\\\",3) group by T1.\\\"AliasID\\\"),0) =0 then 0 else 1 end) as IsPadre` +\n`,T1.\\\"TypeID\\\"` +\n`,'N' as \\\"CampoStandard\\\", 'Y' as \\\"RicercaAttiva\\\"` +\n`FROM  \\\"CUFD\\\" as \\\"T1\\\"` +\n`INNER JOIN  \\\"@VAR_MAP2OITM\\\" AS \\\"T2\\\" on T1.\\\"AliasID\\\" = T2.\\\"Name\\\"` +\n`WHERE T1.\\\"TableID\\\" = '@ARTICOLI' and T1.\\\"AliasID\\\" like 'p%'` +\n`ORDER BY T2.\\\"U_ORDER\\\";`\n\n/*\nmsg.topic = \"SQL\";\nmsg.payload = [\n    `SET SCHEMA ${database}`,\n    sql\n];*/\nmsg.flowInfo.sql = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 160,
        "wires": [
            [
                "46a2c4a35ab85a66"
            ]
        ]
    },
    {
        "id": "d18bcdbf.4def1",
        "type": "comment",
        "z": "cc9afb6d.1e98a8",
        "name": "I nodi non collegati sono in realta' Nodi usati nella vecchia versione. Da tenere fino al 31/07",
        "info": "",
        "x": 370,
        "y": 20,
        "wires": []
    },
    {
        "id": "1bb3b9d1.921ea6",
        "type": "debug",
        "z": "cc9afb6d.1e98a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 630,
        "y": 100,
        "wires": []
    },
    {
        "id": "2dbeb354.23ca6c",
        "type": "debug",
        "z": "cc9afb6d.1e98a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 100,
        "wires": []
    },
    {
        "id": "46a2c4a35ab85a66",
        "type": "HanaClient-request",
        "z": "cc9afb6d.1e98a8",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 510,
        "y": 200,
        "wires": [
            [
                "6407d314.4cee3c",
                "1bb3b9d1.921ea6"
            ],
            []
        ]
    },
    {
        "id": "fc7b380c439b835b",
        "type": "subflow:1e460b6845924ff6",
        "z": "cc9afb6d.1e98a8",
        "name": "",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "3972601.edeb4a"
            ]
        ]
    },
    {
        "id": "baa82335c883ec1b",
        "type": "function",
        "z": "1e460b6845924ff6",
        "name": "",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\nmsg.configOverrideHana = reqSession[0].configOverrideHana;\nmsg.configOverride = reqSession[0].configOverride;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "363200c8.f0586",
        "type": "http in",
        "z": "7d50627a.c0305c",
        "name": "Template",
        "url": "/template",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "a75222fe.b67e8"
            ]
        ]
    },
    {
        "id": "a9654420.8d7fc8",
        "type": "subflow:e6958271.bfc86",
        "z": "7d50627a.c0305c",
        "name": "",
        "env": [],
        "x": 690,
        "y": 100,
        "wires": [
            [
                "b7183b37.fc3b88"
            ],
            [
                "2d5b9331.76dbbc"
            ],
            []
        ]
    },
    {
        "id": "8d168e24.f5f4",
        "type": "http response",
        "z": "7d50627a.c0305c",
        "name": "Template OK",
        "statusCode": "200",
        "headers": {},
        "x": 210,
        "y": 480,
        "wires": []
    },
    {
        "id": "eb08f99f.0b3a08",
        "type": "comment",
        "z": "7d50627a.c0305c",
        "name": "9. Error Handling",
        "info": "",
        "x": 120,
        "y": 660,
        "wires": []
    },
    {
        "id": "2c4f5c95.75e0d4",
        "type": "catch",
        "z": "7d50627a.c0305c",
        "name": "catch errors",
        "scope": null,
        "uncaught": false,
        "x": 130,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "a75222fe.b67e8",
        "type": "function",
        "z": "7d50627a.c0305c",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'Template';\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 100,
        "wires": [
            [
                "b6fd0d9c.1a42c"
            ]
        ]
    },
    {
        "id": "d2f461ac.858f2",
        "type": "function",
        "z": "7d50627a.c0305c",
        "name": "SL Prep",
        "func": "msg.serviceLayer.method = 'U_ENT_PORTAL_PARAMS';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "cc467173.f3cb1",
        "type": "debug",
        "z": "7d50627a.c0305c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 220,
        "wires": []
    },
    {
        "id": "e087f5fc.8b4c98",
        "type": "debug",
        "z": "7d50627a.c0305c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 340,
        "wires": []
    },
    {
        "id": "b7183b37.fc3b88",
        "type": "link out",
        "z": "7d50627a.c0305c",
        "name": "",
        "links": [
            "adb5ec58.7f3d"
        ],
        "x": 875,
        "y": 80,
        "wires": []
    },
    {
        "id": "991feb9d.66fd78",
        "type": "comment",
        "z": "7d50627a.c0305c",
        "name": "1. Input  & Validation",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "18bc3e6e.5f3782",
        "type": "comment",
        "z": "7d50627a.c0305c",
        "name": "2. Flow Data Initialization",
        "info": "",
        "x": 150,
        "y": 220,
        "wires": []
    },
    {
        "id": "adb5ec58.7f3d",
        "type": "link in",
        "z": "7d50627a.c0305c",
        "name": "",
        "links": [
            "b7183b37.fc3b88"
        ],
        "x": 75,
        "y": 280,
        "wires": [
            [
                "d2f461ac.858f2"
            ]
        ]
    },
    {
        "id": "2d5b9331.76dbbc",
        "type": "function",
        "z": "7d50627a.c0305c",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.payload;\n\nmsg.statusCode = 401;\nnode.warn(msg)\nthrow new Error(`User not authenticated.`);",
        "outputs": 0,
        "noerr": 0,
        "x": 920,
        "y": 120,
        "wires": []
    },
    {
        "id": "cb45aa97.8be558",
        "type": "function",
        "z": "7d50627a.c0305c",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(`Technical error - GET SL params.`);",
        "outputs": 0,
        "noerr": 0,
        "x": 560,
        "y": 300,
        "wires": []
    },
    {
        "id": "566f9761.8d4c58",
        "type": "comment",
        "z": "7d50627a.c0305c",
        "name": "3. Business Logic",
        "info": "",
        "x": 120,
        "y": 420,
        "wires": []
    },
    {
        "id": "8ecfd428.3c7ec8",
        "type": "link in",
        "z": "7d50627a.c0305c",
        "name": "",
        "links": [
            "c4152239.a604f"
        ],
        "x": 75,
        "y": 480,
        "wires": [
            [
                "8d168e24.f5f4"
            ]
        ]
    },
    {
        "id": "c4152239.a604f",
        "type": "link out",
        "z": "7d50627a.c0305c",
        "name": "",
        "links": [
            "8ecfd428.3c7ec8"
        ],
        "x": 515,
        "y": 260,
        "wires": []
    },
    {
        "id": "b6fd0d9c.1a42c",
        "type": "subflow:4217f61f.7e7488",
        "z": "7d50627a.c0305c",
        "name": "",
        "env": [],
        "x": 450,
        "y": 100,
        "wires": [
            [
                "a9654420.8d7fc8"
            ]
        ]
    },
    {
        "id": "bb8e1bd4.d94bb8",
        "type": "settings-config",
        "z": "64a77286.f2929c",
        "name": "",
        "x": 170,
        "y": 100,
        "wires": []
    },
    {
        "id": "9c3355fc.770d98",
        "type": "http in",
        "z": "1241644c.fa076c",
        "name": "Monitoring",
        "url": "/api/Monitoring",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "e7d2fb2d.d62e58"
            ]
        ]
    },
    {
        "id": "ed3e96c1.51e5b8",
        "type": "http response",
        "z": "1241644c.fa076c",
        "name": "Mintoring OK",
        "statusCode": "200",
        "headers": {},
        "x": 500,
        "y": 120,
        "wires": []
    },
    {
        "id": "e7d2fb2d.d62e58",
        "type": "function",
        "z": "1241644c.fa076c",
        "name": "get sessions",
        "func": "msg.payload = global.get('sessionInfo');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 120,
        "wires": [
            [
                "ed3e96c1.51e5b8"
            ]
        ]
    },
    {
        "id": "a72a47d7.53df68",
        "type": "http in",
        "z": "5d59b9ac.ec0a48",
        "name": "Login",
        "url": "/api/Login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "f74b3b49.d1d468"
            ]
        ]
    },
    {
        "id": "2492d957.436966",
        "type": "http response",
        "z": "5d59b9ac.ec0a48",
        "name": "Login OK",
        "statusCode": "",
        "headers": {},
        "x": 700,
        "y": 700,
        "wires": []
    },
    {
        "id": "7b3a6bf1.8a2ed4",
        "type": "comment",
        "z": "5d59b9ac.ec0a48",
        "name": "9. Error Handling",
        "info": "",
        "x": 120,
        "y": 760,
        "wires": []
    },
    {
        "id": "a94bc1ee.1d6d4",
        "type": "catch",
        "z": "5d59b9ac.ec0a48",
        "name": "catch errors",
        "scope": null,
        "uncaught": false,
        "x": 130,
        "y": 820,
        "wires": [
            [
                "97fa508b.7f2cb"
            ]
        ]
    },
    {
        "id": "97fa508b.7f2cb",
        "type": "subflow:b155d125.5d094",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "env": [],
        "x": 330,
        "y": 820,
        "wires": []
    },
    {
        "id": "c455cdf6.0432",
        "type": "subflow:b4c30a5b.fcd4e8",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "env": [],
        "x": 390,
        "y": 340,
        "wires": [
            [
                "2ada204f.18041",
                "d141ea3c.166068"
            ],
            [
                "ac8680db.40934",
                "fb1c8d9caf78d09f"
            ]
        ]
    },
    {
        "id": "f74b3b49.d1d468",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'Login';\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 100,
        "wires": [
            [
                "e1a83ab9.471608"
            ]
        ]
    },
    {
        "id": "cbb687f1.851b68",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "SL Prep",
        "func": "msg.serviceLayer.method = 'U_ENT_PORTAL_PARAMS';\nmsg.configOverride = msg.autologin || msg.req.body;\nif (msg.configOverride && msg.configOverride.username){\n    msg.configOverride.userName=msg.configOverride.username;\n}\nif(msg.configOverride.language && msg.configOverride.language.includes(\"en\")){\n    msg.configOverride.language='3';\n}\nelse{\n    msg.configOverride.language = '13';\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 380,
        "wires": [
            [
                "c455cdf6.0432"
            ]
        ]
    },
    {
        "id": "3a0e680e.ad8788",
        "type": "comment",
        "z": "5d59b9ac.ec0a48",
        "name": "1. Input  & Validation",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "2aeb33b7.7c5dfc",
        "type": "comment",
        "z": "5d59b9ac.ec0a48",
        "name": "3. Flow Data Initialization",
        "info": "",
        "x": 150,
        "y": 320,
        "wires": []
    },
    {
        "id": "9095ab01.515bd8",
        "type": "link in",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "bfcdae3c.c4d05",
            "2197f3cc.d5fdcc"
        ],
        "x": 75,
        "y": 380,
        "wires": [
            [
                "cbb687f1.851b68"
            ]
        ]
    },
    {
        "id": "5165c7d6.e49f28",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.payload;\n\nmsg.statusCode = 401;\nnode.warn(msg)\nthrow new Error(msg.toLogExtra);",
        "outputs": 0,
        "noerr": 0,
        "x": 880,
        "y": 60,
        "wires": []
    },
    {
        "id": "ac8680db.40934",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(`Technical error - GET SL params.: ` + msg.b1SLerr);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 400,
        "wires": []
    },
    {
        "id": "9a1d52d0.62b8e",
        "type": "comment",
        "z": "5d59b9ac.ec0a48",
        "name": "5. Business Logic",
        "info": "",
        "x": 120,
        "y": 620,
        "wires": []
    },
    {
        "id": "97e61b43.63be58",
        "type": "link in",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "9d8b1a7a.035048",
            "66de9e81.ad49",
            "dcb7aa6d.df1d98"
        ],
        "x": 75,
        "y": 680,
        "wires": [
            [
                "3ece024d.fbe01e"
            ]
        ]
    },
    {
        "id": "2ada204f.18041",
        "type": "link out",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "1efa8d39.dc9563",
            "f85059947097a308"
        ],
        "x": 585,
        "y": 320,
        "wires": []
    },
    {
        "id": "e1a83ab9.471608",
        "type": "subflow:4217f61f.7e7488",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "env": [],
        "x": 430,
        "y": 100,
        "wires": [
            [
                "d6bf6359.5943e"
            ]
        ]
    },
    {
        "id": "1029595.e0d32a7",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "session check",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst MetaCompanies = global.get('Companies');\nlet { database, userName, password } = msg.req.body;\nconst { flowStartTimestamp } = msg.flowInfo;\n\nif  (msg.autologin) {\n    database = msg.autologin.database;\n    userName = msg.autologin.userName;\n    password = msg.autologin.password;\n}\n\nconst isReqSession = (elem) => {\n    return (\n        elem.database === database &&\n        elem.userName === userName\n    )\n}\nconst isCompany = (elem) => {\n    return (\n        elem.companyName === database \n    )\n}\nnode.warn(sessionInfo)\nconst metaCheck = MetaCompanies.filter(isCompany);\nnode.warn(metaCheck)\nnode.warn(MetaCompanies)\nnode.warn(msg.req.body)\nif(metaCheck && metaCheck.length>0){\n    // metaCheck[0].Status=\"NotUpdated\";\n    if(metaCheck[0].Status===\"NotUpdated\"){\n        msg.statusCode = 400;\n        msg.payload=\"Schema: \"+database+\" is not Update.\\nPlease contact Administrator\"\n        return [null,null,msg];\n    }\n}\nif (sessionInfo) {\n    const reqSession = sessionInfo.filter(isReqSession);\n    node.warn(reqSession)\n    if (reqSession.length > 0) {\n        node.warn(reqSession)\n        const reqSessionInfo = reqSession[0];\n        if (reqSessionInfo.customAttributes.Email !== msg.req.body.username){\n            node.warn(msg)\n            // go add session info\n            return [null, msg];\n        }\n        const reqDatabase = reqSessionInfo.database;\n        const reqUserName = reqSessionInfo.userName;\n        const reqb1SessionId = reqSessionInfo.b1SessionId;\n        const reqEntSessionTimeout = reqSessionInfo.entSessionTimeout;\n        const reqLastAccessTimestamp = reqSessionInfo.lastAccessTimestamp;\n        \n        const timeDifferenceMs = flowStartTimestamp - reqLastAccessTimestamp;\n        const clientTimeoutMs = parseInt(reqEntSessionTimeout) * 60 * 1000;\n        \n        if (clientTimeoutMs - timeDifferenceMs > 0) {\n            msg.serviceLayer.sessionId = reqb1SessionId;\n            const sessionIndex = sessionInfo.findIndex(isReqSession);\n            sessionInfo[sessionIndex].lastAccessTimestamp = flowStartTimestamp;\n            msg.reqSession = sessionInfo[sessionIndex];\n            \n            msg.currentSession = msg.reqSession;\n            return [msg, null];\n        }\n    }\n}\nnode.warn(msg)\n// go add session info\nreturn [null, msg];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 240,
        "wires": [
            [
                "9d8b1a7a.035048"
            ],
            [
                "2197f3cc.d5fdcc"
            ],
            [
                "b0cd2e97ee7cb02b"
            ]
        ]
    },
    {
        "id": "f8bc6630.34b628",
        "type": "comment",
        "z": "5d59b9ac.ec0a48",
        "name": "2. Session Data Check",
        "info": "",
        "x": 140,
        "y": 180,
        "wires": []
    },
    {
        "id": "59e74141.59b4c",
        "type": "link in",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "6a06ebd8.a338a4",
            "1a0d3e26.31e462"
        ],
        "x": 75,
        "y": 240,
        "wires": [
            [
                "1029595.e0d32a7"
            ]
        ]
    },
    {
        "id": "9d8b1a7a.035048",
        "type": "link out",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "97e61b43.63be58"
        ],
        "x": 355,
        "y": 220,
        "wires": []
    },
    {
        "id": "2197f3cc.d5fdcc",
        "type": "link out",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "9095ab01.515bd8"
        ],
        "x": 395,
        "y": 240,
        "wires": []
    },
    {
        "id": "7f090386.ac5f5c",
        "type": "comment",
        "z": "5d59b9ac.ec0a48",
        "name": "4. Session SET Data",
        "info": "",
        "x": 130,
        "y": 480,
        "wires": []
    },
    {
        "id": "2e8ec6e0.f1a52a",
        "type": "link in",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "d254061d.da8918",
            "0fa06d94e8612003"
        ],
        "x": 75,
        "y": 540,
        "wires": [
            [
                "ef49601a.7228b"
            ]
        ]
    },
    {
        "id": "c4e4f32b.01581",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "set session data",
        "func": "const { sessionId, sessionTimeout } = msg.serviceLayer;\nconst { ENT_SESSION_TIMEOUT, ENT_PWD_EXP_INTERVAL_DAYS, \"B1S-CaseInsensitive-YN\": B1S_CaseInsensitive_YN } = msg.flowInfo.paramsSAP;\nconst { flowStartTimestamp } = msg.flowInfo;\nconst { database, userName, password } = msg.configOverride;\nconst { generatedSessionId } = msg;\nconst { host } = msg.req.headers;\nconst customAttributes = msg.customAttributes;\nconst { authType }=msg.config_flow_json.authentication;\n// const { authType }=\"OHEM\";\n// var uName = msg.req.body.username ? msg.req.body.username : msg.req.body.loginEmail;\ncustomAttributes.Email = msg.req.body.username ? msg.req.body.username : msg.req.body.loginEmail;\nvar configOverride={};\nconfigOverride.userName = authType ===\"b1slpassthrough\"?msg.req.body.username:null;\nconfigOverride.password = authType === \"b1slpassthrough\" ?msg.req.body.password:null;\nconfigOverride.database = msg.req.body.database;\n// configOverride.language = msg.req.body.language;\nif (msg.req.body.language.includes(\"en\") || msg.req.body.language=='3') {\n    configOverride.language = '3';\n}\nelse {\n    configOverride.language = '13';\n}\nvar configOverrideHana={};\nconfigOverrideHana.database = msg.req.body.database;\nconst newSession = {\n    lastAccessTimestamp: flowStartTimestamp,\n    b1SessionId: sessionId,\n    b1SessionTimeout: sessionTimeout,\n    entSessionTimeout: ENT_SESSION_TIMEOUT,\n    pwdChangeDays: parseInt(ENT_PWD_EXP_INTERVAL_DAYS),\n    // pwdChangeDays: 0,\n    entSessionId: generatedSessionId,\n    B1S_CaseInsensitive_YN,\n    customAttributes,\n    authType,\n    database,\n    userName,\n    password,\n    configOverride,\n    configOverrideHana\n};\nmsg.reqSession = newSession;\n\nconst sessions = global.get('sessionInfo') || [];\nglobal.set('sessionInfo', sessions.concat(newSession));\n\nmsg.currentSession = newSession;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 540,
        "wires": [
            [
                "dcb7aa6d.df1d98"
            ]
        ]
    },
    {
        "id": "dcb7aa6d.df1d98",
        "type": "link out",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "97e61b43.63be58"
        ],
        "x": 595,
        "y": 520,
        "wires": []
    },
    {
        "id": "3ece024d.fbe01e",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "send session data payload",
        "func": "const { currentSession } = msg;\nvar {\n    entSessionTimeout,\n    pwdChangeDays,\n    entSessionId,\n    customAttributes,\n} = currentSession;\nvar userName = msg.req.body.username ? msg.req.body.username : msg.req.body.loginEmail;\n// var key = msg.req.body.username ? msg.req.body.username : msg.req.body.loginEmail;\nvar authType = msg.config_flow_json['authentication'].authType;\nif (authType === \"customSingleSignOn\") {\n    var header = msg.req.headers;\n    for (var k in header) {\n        if (k.toLowerCase() === \"login-email\") {\n            userName = header[k];\n        }\n    }\n}\n// authType = \"OHEM\";\n// const customAttributes = { \"EmpID \": msg.payload[0].empID, \"FirstName\": msg.payload[0].firstName, \"LastName\": msg.payload[0].lastName};\n// const customAttributes = msg.customAttributes;\nmsg.payload = {\n    userName,\n    entSessionTimeout,\n    // U_LastPwdChangeDate,\n    // pwdChangeDays,\n    entSessionId,\n    authType,\n    customAttributes\n};\n\n// msg.sendPayload=msg.payload;\n// msg.payload=null;\nmsg.cookies = {\n    entSessionId\n};\n// document.cookie = \"username=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\nmsg.statusCode = 200;\n// msg.flowInfo={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 680,
        "wires": [
            [
                "514b5605eef57dd8",
                "2492d957.436966"
            ]
        ]
    },
    {
        "id": "ef49601a.7228b",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "generate session ID",
        "func": "const numberId = Math.round(Math.random() * 10000);\nconst { flowStartTimestamp } = msg.flowInfo;\nconst day = flowStartTimestamp.getDate();\nconst dayFormat = day < 10 ? `0${day}` : day;\nconst month = (flowStartTimestamp.getMonth() + 1);\nconst monthFormat = month < 10 ? `0${month}` : month;\nconst yearFormat = flowStartTimestamp.getFullYear();\nconst timestamp = `${yearFormat}-${monthFormat}-${dayFormat}`;\nconst ENT_SESSION_TIMEOUT = msg.flowInfo.paramsSAP.ENT_SESSION_TIMEOUT;\n// var date = new Date();\n// date.setTime(date.getTime() + (parseInt(ENT_SESSION_TIMEOUT) * 60 * 60 * 1000));\n\nmsg.generatedSessionId = `ENT-${timestamp}-${numberId}`;\n// msg.generatedSessionId += `;expires=${date.toUTCString()}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 540,
        "wires": [
            [
                "c4e4f32b.01581"
            ]
        ]
    },
    {
        "id": "6882a372.a2d10c",
        "type": "comment",
        "z": "5d59b9ac.ec0a48",
        "name": "TODO: nod de build session data",
        "info": "",
        "x": 470,
        "y": 500,
        "wires": []
    },
    {
        "id": "602a61d0.63985",
        "type": "comment",
        "z": "5d59b9ac.ec0a48",
        "name": "TODO: de adaugat aici logica de set & send session data",
        "info": "",
        "x": 430,
        "y": 640,
        "wires": []
    },
    {
        "id": "1a0d3e26.31e462",
        "type": "link out",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "4ef6ceb0.022f7",
            "59e74141.59b4c"
        ],
        "x": 855,
        "y": 140,
        "wires": []
    },
    {
        "id": "d6bf6359.5943e",
        "type": "subflow:b2346476.0f6e88",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "env": [],
        "x": 670,
        "y": 100,
        "wires": [
            [
                "5165c7d6.e49f28"
            ],
            [
                "1a0d3e26.31e462"
            ]
        ]
    },
    {
        "id": "d141ea3c.166068",
        "type": "debug",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "514b5605eef57dd8",
        "type": "debug",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 450,
        "y": 740,
        "wires": []
    },
    {
        "id": "b4503db76853b42d",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "sql",
        "func": "// msg.configOverride={};\nvar key= msg.req.body.username ? msg.req.body.username : msg.req.body.loginEmail;\nconst authType = msg.config_flow_json['authentication'].authType;\nif (authType ===\"customSingleSignOn\"){\n    var header = msg.req.headers;\n    for (var k in header) {\n        if (k.toLowerCase() === \"login-email\") {\n            key = header[k];\n        }\n    }\n}\n\n// key = 'giuseppe.delaurentiis@neosperience.com';\n\nmsg.flowInfo.sql = `select * from OHEM where \"email\" = '${key}'`;\nif (authType ===\"b1slpassthrough\"){\n    msg.flowInfo.sql = `select * from OHEM T0 left join ousr T1\non T0.\"userId\"=T1.\"USERID\" where T1.\"USER_CODE\"= '${key}'`;\n}\nmsg.configOverrideHana = {};\nmsg.configOverrideHana.database =msg.req.body.database;\nmsg.configOverride.database =msg.req.body.database;\n\n// msg.flowInfo.sql = `select * from OHEM where \"email\" = \n// 'giuseppe.delaurentiis@neosperience.com'`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 920,
        "wires": [
            [
                "f6f1eb476dc02f88"
            ]
        ]
    },
    {
        "id": "f6f1eb476dc02f88",
        "type": "HanaClient-request",
        "z": "5d59b9ac.ec0a48",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 390,
        "y": 960,
        "wires": [
            [
                "b5c8fd5e2234e5ca"
            ],
            []
        ]
    },
    {
        "id": "f85059947097a308",
        "type": "link in",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "d254061d.da8918",
            "2ada204f.18041"
        ],
        "x": 35,
        "y": 940,
        "wires": [
            [
                "927efabfbdf49f3f"
            ]
        ]
    },
    {
        "id": "b5c8fd5e2234e5ca",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "func": "if(msg.payload.length!==0){\n    msg.flowInfo.sql = `select * from \"@NEO_LIC_MODS\" where \"U_NEO_LIC_USERCODE\" = '${msg.payload[0].empID}'`;\n    const customAttributes = {\n        \"EmpID\": msg.payload[0].empID, \n        \"FirstName\": msg.payload[0].firstName, \n        \"LastName\": msg.payload[0].lastName, \n        \"U_Name\": msg.payload[0].U_NAME,\n        \"U_Code\": msg.payload[0].USER_CODE,\n        \"salesPerson\": msg.payload[0].salesPrson };\n    msg.customAttributes = customAttributes;\n    // msg.payload = msg.sendPayload;\n    // const customAttributes = { \"EmpID \": msg.payload[0].empID, \"FirstName\": msg.payload[0].firstName, \"LastName\": msg.payload[0].lastName};\n    // msg.payload = msg.sendPayload;\n    // msg.payload.customAttributes = customAttributes;\n    return [msg,null];\n}\nvar key = msg.req.body.username ? msg.req.body.username : msg.req.body.loginEmail;\nconst authType = msg.config_flow_json['authentication'].authType;\nif (authType === \"customSingleSignOn\") {\n    var header = msg.req.headers;\n    for (var k in header) {\n        if (k.toLowerCase() === \"login-email\") {\n            key = header[k];\n        }\n    }\n}\n    msg.statusCode = 404;\n    msg.payload = 'User Not Found:'+key\n    return [null,msg];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 960,
        "wires": [
            [
                "0fa06d94e8612003",
                "73c1425aa0946963"
            ],
            [
                "2492d957.436966"
            ]
        ]
    },
    {
        "id": "927efabfbdf49f3f",
        "type": "subflow:8b68de83.9195b",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "env": [],
        "x": 150,
        "y": 980,
        "wires": [
            [
                "b4503db76853b42d"
            ]
        ]
    },
    {
        "id": "0fa06d94e8612003",
        "type": "link out",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "2e8ec6e0.f1a52a"
        ],
        "x": 705,
        "y": 960,
        "wires": []
    },
    {
        "id": "526a3946b792a341",
        "type": "HanaClient-request",
        "z": "5d59b9ac.ec0a48",
        "server": "b298e45c.688258",
        "sql": "select * from OHEM where \"email\" =   'giuseppe.delaurentiis@neosperience.com'",
        "x": 510,
        "y": 1060,
        "wires": [
            [
                "96e00c458080f060"
            ],
            [
                "2624ab867f8b78e8"
            ]
        ]
    },
    {
        "id": "8770ae14ce611a7a",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "func": "var visibleTiles='';\nif (msg.payload.length !== 0) {\n    for (let index = 0; index < msg.payload.length; index++) {\n        const element = msg.payload[index];\n        switch (element.U_NEO_LIC_MODULO) {\n            case \"ENT_WTA_RDA\":\n                visibleTiles+=',RDA,';\n                break;\n            case \"ENT_WTA_PM\":\n                visibleTiles += ',PLM,CONSOLIDATION,';\n                break;\n            case \"ENT_WTA_TS\":\n                visibleTiles += ',TIMESHEET,';\n                break;\n            case \"ENT_WTA_PLN\":\n                break;\n            case \"ENT_WTA_ATT\":\n                break;\n            default:\n        }\n        \n    }\n    msg.customAttributes.visibleTiles = visibleTiles;\n}\nelse{\n    msg.statusCode = 404;\n    msg.payload = 'ERROR - NO LICENSE assigned to the User. Please contact Administrator';\n    return [null,msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1040,
        "wires": [
            [
                "0fa06d94e8612003"
            ],
            [
                "2492d957.436966"
            ]
        ]
    },
    {
        "id": "fb1c8d9caf78d09f",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "func": "msg.statusCode = 400;\nif (msg.req.body.language==='13'){\n    msg.payload =\"Utente / password errati.Si prega riverificare.\";\n}\nelse{\n    msg.payload = \"UserName or Password is not Correct\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 360,
        "wires": [
            [
                "2c221fa675eb7eb0"
            ]
        ]
    },
    {
        "id": "2c221fa675eb7eb0",
        "type": "http response",
        "z": "5d59b9ac.ec0a48",
        "name": "Login error",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 360,
        "wires": []
    },
    {
        "id": "73c1425aa0946963",
        "type": "function",
        "z": "5d59b9ac.ec0a48",
        "name": "lastlogin Update",
        "func": "var key = msg.req.body.username ? msg.req.body.username : msg.req.body.loginEmail;\nmsg.configOverrideHana = {};\nmsg.configOverrideHana.database = msg.req.body.database;\nmsg.configOverride.database = msg.req.body.database;\nvar d=new Date();\n\nvar loginDate = d.toISOString().split(\"T\")[0] + \" \" + d.toISOString().split(\"T\")[1].split(\".\")[0];\nmsg.flowInfo.sql = `UPDATE OHEM\nSET \"U_ENT_LastLogin\" = '${loginDate.slice(0, 16)}'\nWHERE \"empID\"='${msg.customAttributes.EmpID}'`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1040,
        "wires": [
            [
                "526a3946b792a341"
            ]
        ]
    },
    {
        "id": "96e00c458080f060",
        "type": "debug",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 630,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2624ab867f8b78e8",
        "type": "debug",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 630,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b0cd2e97ee7cb02b",
        "type": "link out",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "mode": "link",
        "links": [
            "e73f4709ca1db2d1"
        ],
        "x": 345,
        "y": 280,
        "wires": []
    },
    {
        "id": "e73f4709ca1db2d1",
        "type": "link in",
        "z": "5d59b9ac.ec0a48",
        "name": "",
        "links": [
            "b0cd2e97ee7cb02b"
        ],
        "x": 765,
        "y": 320,
        "wires": [
            [
                "2c221fa675eb7eb0"
            ]
        ]
    },
    {
        "id": "a14c1ff.a0d88e",
        "type": "http in",
        "z": "10e8f1e2.a444de",
        "name": "GET - Resource",
        "url": "/api/resource/*",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "750e22ba.395e5c",
                "f79b739f.ac8d6"
            ]
        ]
    },
    {
        "id": "e1182381.8881f",
        "type": "function",
        "z": "10e8f1e2.a444de",
        "name": "session check",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies; \nconst { flowStartTimestamp } = msg.flowInfo;\nmsg.serviceLayer = {};\n\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n}\n\nif (sessionInfo) {\n    const reqSession = sessionInfo.filter(isReqSession);\n    // const reqSession = [ sessionInfo[sessionInfo.length - 1] ];\n    // node.warn(reqSession)\n    if (reqSession.length > 0) {\n        const reqSessionInfo = reqSession[0];\n        const reqDatabase = reqSessionInfo.database;\n        const reqUserName = reqSessionInfo.userName;\n        const reqb1SessionId = reqSessionInfo.b1SessionId;\n        const reqEntSessionTimeout = reqSessionInfo.entSessionTimeout;\n        const reqLastAccessTimestamp = reqSessionInfo.lastAccessTimestamp;\n        \n        const timeDifferenceMs = flowStartTimestamp - reqLastAccessTimestamp;\n        const clientTimeoutMs = parseInt(reqEntSessionTimeout) * 60 * 1000;\n        \n        if (clientTimeoutMs - timeDifferenceMs > 0) {\n            // node.warn(clientTimeoutMs - timeDifferenceMs)\n            msg.serviceLayer.sessionId = reqb1SessionId;\n            const sessionIndex = sessionInfo.findIndex(isReqSession); // sessionInfo.length - 1;\n            sessionInfo[sessionIndex].lastAccessTimestamp = flowStartTimestamp;\n            msg.reqSession = reqSession[0];  //sessionInfo[sessionIndex];\n            \n            msg.payload = reqSession[0]; //[sessionIndex];\n            return [msg, null];\n        } else {\n            msg.statusCode = 401;\n            msg.payload = { error: 'Session expired.' }\n            return [null, msg];\n        }\n    }\n}\n\nmsg.statusCode = 401;\nmsg.payload = { error: 'User not authenticated.' }\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 400,
        "wires": [
            [
                "eb8ae610.16b718",
                "a077bdf3.37ec4"
            ],
            [
                "a077bdf3.37ec4",
                "882b06c4.dd6968"
            ]
        ]
    },
    {
        "id": "d9515864.e24de8",
        "type": "function",
        "z": "10e8f1e2.a444de",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'GetResource';\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 40,
        "wires": [
            [
                "f79b739f.ac8d6"
            ]
        ]
    },
    {
        "id": "f79b739f.ac8d6",
        "type": "link out",
        "z": "10e8f1e2.a444de",
        "name": "",
        "links": [
            "dcd6e1e4.5ce3a"
        ],
        "x": 435,
        "y": 80,
        "wires": []
    },
    {
        "id": "dcd6e1e4.5ce3a",
        "type": "link in",
        "z": "10e8f1e2.a444de",
        "name": "",
        "links": [
            "f79b739f.ac8d6",
            "e4390a2.cc62ff8",
            "da81beb8.c8ab5",
            "cfa96b17.877958",
            "238755a645e151a1"
        ],
        "x": 75,
        "y": 400,
        "wires": [
            [
                "9c5d1401ef17cc80"
            ]
        ]
    },
    {
        "id": "1ae7a864.397768",
        "type": "comment",
        "z": "10e8f1e2.a444de",
        "name": "1. check input data",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "43fc0b0c.564714",
        "type": "comment",
        "z": "10e8f1e2.a444de",
        "name": "2. check session data",
        "info": "",
        "x": 120,
        "y": 340,
        "wires": []
    },
    {
        "id": "a077bdf3.37ec4",
        "type": "link out",
        "z": "10e8f1e2.a444de",
        "name": "",
        "links": [
            "89e4729e.444cd"
        ],
        "x": 335,
        "y": 420,
        "wires": []
    },
    {
        "id": "eb8ae610.16b718",
        "type": "link out",
        "z": "10e8f1e2.a444de",
        "name": "",
        "links": [
            "1716e529.1f5edb"
        ],
        "x": 335,
        "y": 380,
        "wires": []
    },
    {
        "id": "68877847.8b8548",
        "type": "comment",
        "z": "10e8f1e2.a444de",
        "name": "3. Prep SL, GET Data, send Res",
        "info": "",
        "x": 150,
        "y": 500,
        "wires": []
    },
    {
        "id": "1716e529.1f5edb",
        "type": "link in",
        "z": "10e8f1e2.a444de",
        "name": "",
        "links": [
            "eb8ae610.16b718"
        ],
        "x": 75,
        "y": 620,
        "wires": [
            [
                "6ecc6a7e.30cdf4",
                "b36d4f58b191aba9"
            ]
        ]
    },
    {
        "id": "47156a71.c27c34",
        "type": "function",
        "z": "10e8f1e2.a444de",
        "name": "prep SL",
        "func": "let slMethod = msg.req.url.split('resource/')[1];\n\n// msg.configOverride = msg.reqSession;\n\n\nif (msg.req.method === 'POST') {\n    if (slMethod.includes('batch')) {\n         msg.serviceLayer = {\n            requestBatchTitle: msg.req.query.batchTitle,\n            method: '$batch',\n            body: msg.req.body.toString()\n           \n        };\n        msg.serviceLayer.headers = {\n            'prefer':'odata.maxpagesize=5000'\n        };\n        msg.serviceLayer.headers[\"content-type\"] = msg.req.headers[\"content-type\"];\n        node.warn(msg.req.body.toString())\n        return [null, msg, null, null];\n    }\n}\n\nif (!msg.serviceLayer)\n    msg.serviceLayer = {};\nif (!msg.serviceLayer.headers)\n    msg.serviceLayer.headers = {};\nmsg.serviceLayer.headers[\"content-type\"] = msg.req.headers[\"content-type\"];\nmsg.serviceLayer.method = slMethod;\n\n\nif (Object.keys(msg.req.body).length > 0) {\n    msg.serviceLayer.body = msg.req.body;\n}\n\nif (msg.req.method === 'GET') {\n    msg.serviceLayer.headers[\"Prefer\"] = \"odata.maxpagesize=0\";\n    // 'application/xml'\n    msg.serviceLayer.headers[\"content-type\"] = msg.req.headers[\"content-type\"] ? msg.req.headers[\"content-type\"] : 'application/xml;odata=minimalmetadata;charset=utf-8';\n    return [msg, null, null, null, null];\n}\n\nif (msg.req.method === 'POST') {\n    if(msg.req.body.mailBody){\n        msg.mailBody = msg.req.body.mailBody.toString();\n        delete msg.req.body.mailBody;\n    }\n    return [null, msg, null, null, null];\n}\n\nif (msg.req.method === 'PATCH') {\n    msg.serviceLayer.headers[\"B1S-ReplaceCollectionsOnPatch\"]=true;\n    return [null, null, msg, null,null];\n}\n\nif (msg.req.method === 'DELETE') {\n    return [null, null, null, msg,null];\n}\nif (msg.req.method === 'PUT') {\n    return [null, null, null, null, msg];\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 620,
        "wires": [
            [
                "6e8f37ba.735f08",
                "1386abdef8c3a2cb"
            ],
            [
                "6e8f37ba.735f08",
                "91eebb536944acce"
            ],
            [
                "5b661f4b.1c2eb"
            ],
            [
                "cba6a948.fd5068"
            ],
            [
                "936962a5641202da"
            ]
        ]
    },
    {
        "id": "6ecc6a7e.30cdf4",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 190,
        "y": 680,
        "wires": []
    },
    {
        "id": "750e22ba.395e5c",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 60,
        "wires": []
    },
    {
        "id": "33f6e0b8.6b0d5",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 440,
        "wires": []
    },
    {
        "id": "9174d97f.d94078",
        "type": "function",
        "z": "10e8f1e2.a444de",
        "name": "prep Res",
        "func": "let resValue = null;\n\nif (Array.isArray(msg.payload)||Object.keys(msg.payload).length > 0) {\n    resValue = msg.payload;\n} else\nif (Object.keys(msg.payload).length === 0) {\n    resValue = [];\n}\n\nmsg.headers = {};\nmsg.Headers = {};\nmsg.oHeaders = {};\nmsg.headers['OData-Version'] = '4.0';\nmsg.Headers['OData-Version'] = '4.0';\nmsg.oHeaders['OData-Version'] = '4.0';\nmsg.headers['Cache-Control'] = 'no-cache, no-store, must-revalidate';\n\nif (msg.req.method === 'GET') {\n    if (msg.serviceLayer.method.includes('metadata')) {\n        msg.headers['Content-Type'] = 'application/xml;odata.metadata=minimal;charset=utf-8';\n        msg.payload = resValue;\n    }\n} else {\n    msg.payload = {\n        value: resValue\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 600,
        "wires": [
            [
                "88a28054.b92f7",
                "c71d03cb.605ae"
            ]
        ]
    },
    {
        "id": "88a28054.b92f7",
        "type": "http response",
        "z": "10e8f1e2.a444de",
        "name": "",
        "statusCode": "",
        "headers": {
            "OData-Version": "4.0"
        },
        "x": 810,
        "y": 620,
        "wires": []
    },
    {
        "id": "80df0f32.91d69",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 400,
        "wires": []
    },
    {
        "id": "47dc069f.fb3fb8",
        "type": "function",
        "z": "10e8f1e2.a444de",
        "name": "prep Err",
        "func": "msg.statusCode = 401;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 640,
        "wires": [
            [
                "88a28054.b92f7",
                "75629a75.340f04"
            ]
        ]
    },
    {
        "id": "89e4729e.444cd",
        "type": "link in",
        "z": "10e8f1e2.a444de",
        "name": "",
        "links": [
            "a077bdf3.37ec4"
        ],
        "x": 655,
        "y": 680,
        "wires": [
            [
                "88a28054.b92f7"
            ]
        ]
    },
    {
        "id": "45b0c717.cbf788",
        "type": "http in",
        "z": "10e8f1e2.a444de",
        "name": "POST - Resource",
        "url": "/api/resource/*",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "31312eec.7de3d2",
                "e4390a2.cc62ff8"
            ]
        ]
    },
    {
        "id": "1b1e2baf.7ad204",
        "type": "function",
        "z": "10e8f1e2.a444de",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'PostResource';\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 120,
        "wires": [
            [
                "e4390a2.cc62ff8"
            ]
        ]
    },
    {
        "id": "e4390a2.cc62ff8",
        "type": "link out",
        "z": "10e8f1e2.a444de",
        "name": "",
        "links": [
            "dcd6e1e4.5ce3a"
        ],
        "x": 435,
        "y": 140,
        "wires": []
    },
    {
        "id": "25f44062.2def4",
        "type": "http in",
        "z": "10e8f1e2.a444de",
        "name": "PUT - Resource",
        "url": "/api/resource/*",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "682196e2.859de8",
                "da81beb8.c8ab5"
            ]
        ]
    },
    {
        "id": "a3242b11.84b7d8",
        "type": "function",
        "z": "10e8f1e2.a444de",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'PostResource';\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "da81beb8.c8ab5"
            ]
        ]
    },
    {
        "id": "da81beb8.c8ab5",
        "type": "link out",
        "z": "10e8f1e2.a444de",
        "name": "",
        "links": [
            "dcd6e1e4.5ce3a"
        ],
        "x": 435,
        "y": 200,
        "wires": []
    },
    {
        "id": "cf4d356e.01eb08",
        "type": "http in",
        "z": "10e8f1e2.a444de",
        "name": "DELETE - Resource",
        "url": "/api/resource/*",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "29e66baf.d2bbb4",
                "cfa96b17.877958"
            ]
        ]
    },
    {
        "id": "8b4fed3d.7b888",
        "type": "function",
        "z": "10e8f1e2.a444de",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'PostResource';\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 220,
        "wires": [
            [
                "cfa96b17.877958"
            ]
        ]
    },
    {
        "id": "cfa96b17.877958",
        "type": "link out",
        "z": "10e8f1e2.a444de",
        "name": "",
        "links": [
            "dcd6e1e4.5ce3a"
        ],
        "x": 435,
        "y": 260,
        "wires": []
    },
    {
        "id": "31312eec.7de3d2",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 120,
        "wires": []
    },
    {
        "id": "29e66baf.d2bbb4",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 240,
        "wires": []
    },
    {
        "id": "682196e2.859de8",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 180,
        "wires": []
    },
    {
        "id": "ac350869.edaa18",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 520,
        "wires": []
    },
    {
        "id": "8335a523.fb3978",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 480,
        "wires": []
    },
    {
        "id": "46606cd3.7b4c04",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 800,
        "wires": []
    },
    {
        "id": "247195c3.240b7a",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 760,
        "wires": []
    },
    {
        "id": "40bc1646.1b0088",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 880,
        "wires": []
    },
    {
        "id": "aaa5af9d.25972",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 840,
        "wires": []
    },
    {
        "id": "882b06c4.dd6968",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 230,
        "y": 440,
        "wires": []
    },
    {
        "id": "c71d03cb.605ae",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 540,
        "wires": []
    },
    {
        "id": "75629a75.340f04",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 660,
        "wires": []
    },
    {
        "id": "6e8f37ba.735f08",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 350,
        "y": 500,
        "wires": []
    },
    {
        "id": "a696bd2a.7627a",
        "type": "b1-service-layer-request",
        "z": "10e8f1e2.a444de",
        "server": "596459b.d78c4a8",
        "name": "GET - Resource",
        "serviceLayerMethod": "",
        "httpMethod": "GET",
        "slResponseObject": "getResource",
        "x": 400,
        "y": 540,
        "wires": [
            [
                "80df0f32.91d69",
                "9174d97f.d94078"
            ],
            [
                "33f6e0b8.6b0d5",
                "47dc069f.fb3fb8"
            ]
        ]
    },
    {
        "id": "24351f15.332b5",
        "type": "b1-service-layer-request",
        "z": "10e8f1e2.a444de",
        "server": "596459b.d78c4a8",
        "name": "POST - Resource",
        "serviceLayerMethod": "",
        "httpMethod": "POST",
        "slResponseObject": "postResource",
        "x": 390,
        "y": 600,
        "wires": [
            [
                "8335a523.fb3978",
                "9174d97f.d94078"
            ],
            [
                "ac350869.edaa18",
                "47dc069f.fb3fb8"
            ]
        ]
    },
    {
        "id": "5b661f4b.1c2eb",
        "type": "b1-service-layer-request",
        "z": "10e8f1e2.a444de",
        "server": "596459b.d78c4a8",
        "name": "PATCH - Resource",
        "serviceLayerMethod": "",
        "httpMethod": "PATCH",
        "slResponseObject": "patchResource",
        "x": 390,
        "y": 640,
        "wires": [
            [
                "247195c3.240b7a",
                "9174d97f.d94078"
            ],
            [
                "46606cd3.7b4c04",
                "47dc069f.fb3fb8"
            ]
        ]
    },
    {
        "id": "cba6a948.fd5068",
        "type": "b1-service-layer-request",
        "z": "10e8f1e2.a444de",
        "server": "596459b.d78c4a8",
        "name": "DELETE - Resource",
        "serviceLayerMethod": "",
        "httpMethod": "DELETE",
        "slResponseObject": "deleteResource",
        "x": 400,
        "y": 700,
        "wires": [
            [
                "aaa5af9d.25972",
                "9174d97f.d94078"
            ],
            [
                "40bc1646.1b0088",
                "47dc069f.fb3fb8"
            ]
        ]
    },
    {
        "id": "936962a5641202da",
        "type": "b1-service-layer-request",
        "z": "10e8f1e2.a444de",
        "server": "596459b.d78c4a8",
        "name": "PUT- Resource",
        "serviceLayerMethod": "",
        "httpMethod": "PUT",
        "slResponseObject": "putResource",
        "x": 380,
        "y": 740,
        "wires": [
            [
                "9174d97f.d94078",
                "e3d7924583cb295c"
            ],
            [
                "47dc069f.fb3fb8",
                "c5398fb050b8873c"
            ]
        ]
    },
    {
        "id": "e3d7924583cb295c",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 560,
        "wires": []
    },
    {
        "id": "c5398fb050b8873c",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 920,
        "wires": []
    },
    {
        "id": "2b2ee0f9af42f40b",
        "type": "http in",
        "z": "10e8f1e2.a444de",
        "name": "PATCH - Resource",
        "url": "/api/resource/*",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "ab30d374cf52a0ae",
                "238755a645e151a1"
            ]
        ]
    },
    {
        "id": "2a369c85167011d2",
        "type": "function",
        "z": "10e8f1e2.a444de",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'PostResource';\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 280,
        "wires": [
            [
                "238755a645e151a1"
            ]
        ]
    },
    {
        "id": "238755a645e151a1",
        "type": "link out",
        "z": "10e8f1e2.a444de",
        "name": "",
        "links": [
            "dcd6e1e4.5ce3a"
        ],
        "x": 435,
        "y": 300,
        "wires": []
    },
    {
        "id": "ab30d374cf52a0ae",
        "type": "debug",
        "z": "10e8f1e2.a444de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 280,
        "wires": []
    },
    {
        "id": "9c5d1401ef17cc80",
        "type": "subflow:322da763fc08e6b1",
        "z": "10e8f1e2.a444de",
        "name": "",
        "env": [],
        "x": 200,
        "y": 360,
        "wires": [
            [
                "eb8ae610.16b718"
            ],
            [
                "a077bdf3.37ec4",
                "882b06c4.dd6968"
            ]
        ]
    },
    {
        "id": "91eebb536944acce",
        "type": "function",
        "z": "10e8f1e2.a444de",
        "name": "before POST",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\nif (msg.serviceLayer.method ===\"PurchaseRequests\"){\n    msg.serviceLayer.body.Requester =reqSession[0].customAttributes.EmpID.toString();\n    msg.serviceLayer.body.RequesterName = reqSession[0].customAttributes.LastName + \",\" + reqSession[0].customAttributes.FirstName;\n    msg.serviceLayer.body.RequesterEmail = reqSession[0].customAttributes.Email\n    msg.serviceLayer.body.ReqType=171;\n}\nif (msg.serviceLayer.method ===\"NEO_JBS_TIMESHEET\"){\n    msg.serviceLayer.body.U_NEO_JBS_USERID =reqSession[0].customAttributes.EmpID;\n}\nif (msg.serviceLayer.method === \"Quotations\" || msg.serviceLayer.method === \"Orders\"){\n    msg.serviceLayer.body.SalesPersonCode = reqSession[0].customAttributes.salesPerson;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 820,
        "wires": [
            [
                "24351f15.332b5"
            ]
        ]
    },
    {
        "id": "b36d4f58b191aba9",
        "type": "subflow:1e460b6845924ff6",
        "z": "10e8f1e2.a444de",
        "name": "",
        "x": 90,
        "y": 560,
        "wires": [
            [
                "47156a71.c27c34"
            ]
        ]
    },
    {
        "id": "1386abdef8c3a2cb",
        "type": "function",
        "z": "10e8f1e2.a444de",
        "name": "before Get",
        "func": "if (msg.serviceLayer.method.includes('BusinessPartners(') && !msg.serviceLayer.method.includes('?')){\n    msg.serviceLayer.method +='?$select=CardName,CardCode,CurrentAccountBalance,FederalTaxID,AdditionalID,OpenDeliveryNotesBalance,OpenOrdersBalance,Industry,OwnerCode,U_front_office,SalesPersonCode,PayTermsGrpCode,U_Fido_Interno,U_AC_Fido_Assic,PeymentMethodCode,BPAddresses,ContactEmployees,Properties1,Properties2,Properties3,Properties4,Properties5,Properties6,Properties7,Properties8,Properties9,Properties10,Properties11,Properties12,Properties13,Properties14,Properties15,Properties16,Properties17,Properties18,Properties19,Properties20,Properties21,Properties22,Properties23,Properties24,Properties25,Properties26,Properties27,Properties28,Properties29,Properties30,Properties31,Properties32,Properties33,Properties34,Properties35,Properties36,Properties37,Properties38,Properties39,Properties40,Properties41,Properties42,Properties43,Properties44,Properties45,Properties46,Properties47,Properties48,Properties49,Properties50,Properties51,Properties52,Properties53,Properties54,Properties55,Properties56,Properties57,Properties58,Properties59,Properties60,Properties61,Properties62,Properties63,Properties64';\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 880,
        "wires": [
            [
                "a696bd2a.7627a"
            ]
        ]
    },
    {
        "id": "736debde.a63374",
        "type": "comment",
        "z": "8b3f1f72.5182c",
        "name": "1. Input  & Validation",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "e5a2f628.0b32a8",
        "type": "http in",
        "z": "8b3f1f72.5182c",
        "name": "metadata",
        "url": "/api/odatav2/$metadata",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 840,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7c441206.249dbc",
        "type": "function",
        "z": "8b3f1f72.5182c",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'Metadata';\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "33a8336.b51d6cc"
            ]
        ]
    },
    {
        "id": "33a8336.b51d6cc",
        "type": "subflow:4217f61f.7e7488",
        "z": "8b3f1f72.5182c",
        "name": "",
        "env": [],
        "x": 490,
        "y": 100,
        "wires": [
            [
                "712c861d.332498"
            ]
        ]
    },
    {
        "id": "712c861d.332498",
        "type": "link out",
        "z": "8b3f1f72.5182c",
        "name": "",
        "links": [
            "c6559d47.32d88"
        ],
        "x": 615,
        "y": 100,
        "wires": []
    },
    {
        "id": "719be007.aa1c9",
        "type": "comment",
        "z": "8b3f1f72.5182c",
        "name": "9. Error Handling",
        "info": "",
        "x": 120,
        "y": 480,
        "wires": []
    },
    {
        "id": "f68ff9ec.7aaf68",
        "type": "catch",
        "z": "8b3f1f72.5182c",
        "name": "catch errors",
        "scope": null,
        "uncaught": false,
        "x": 130,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "6f8f71d1.c6c7a",
        "type": "debug",
        "z": "8b3f1f72.5182c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 80,
        "wires": []
    },
    {
        "id": "1148b711.7f9ea9",
        "type": "comment",
        "z": "8b3f1f72.5182c",
        "name": "2. Get connection data",
        "info": "",
        "x": 140,
        "y": 180,
        "wires": []
    },
    {
        "id": "11efe.8dcd91027",
        "type": "link in",
        "z": "8b3f1f72.5182c",
        "name": "",
        "links": [],
        "x": 75,
        "y": 240,
        "wires": [
            [
                "65eee774.267b88"
            ]
        ]
    },
    {
        "id": "15270409.c8237c",
        "type": "comment",
        "z": "8b3f1f72.5182c",
        "name": "4. Business Logic (V4 to V2)",
        "info": "",
        "x": 160,
        "y": 300,
        "wires": []
    },
    {
        "id": "b476a3d.b7ad46",
        "type": "http response",
        "z": "8b3f1f72.5182c",
        "name": "Metadata OK",
        "statusCode": "200",
        "headers": {},
        "x": 410,
        "y": 360,
        "wires": []
    },
    {
        "id": "6e6e52e0.adf96c",
        "type": "http response",
        "z": "8b3f1f72.5182c",
        "name": "Metadata KO",
        "statusCode": "",
        "headers": {},
        "x": 210,
        "y": 420,
        "wires": []
    },
    {
        "id": "c6559d47.32d88",
        "type": "link in",
        "z": "8b3f1f72.5182c",
        "name": "",
        "links": [
            "721dc947.30c818",
            "712c861d.332498"
        ],
        "x": 75,
        "y": 360,
        "wires": [
            [
                "be3185ef.b56ac8"
            ]
        ]
    },
    {
        "id": "975a6e7f.2c917",
        "type": "link in",
        "z": "8b3f1f72.5182c",
        "name": "",
        "links": [
            "602f1893.e73918",
            "1ace4669.89faaa",
            "f74949c1.1d0a68"
        ],
        "x": 75,
        "y": 420,
        "wires": [
            [
                "6e6e52e0.adf96c"
            ]
        ]
    },
    {
        "id": "65eee774.267b88",
        "type": "function",
        "z": "8b3f1f72.5182c",
        "name": "SL Prep",
        "func": "let method = `$metadata`;\nmsg.serviceLayer.method = method;\nmsg.configOverride = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 240,
        "wires": [
            [
                "707be043.d720b"
            ]
        ]
    },
    {
        "id": "1ace4669.89faaa",
        "type": "link out",
        "z": "8b3f1f72.5182c",
        "name": "",
        "links": [
            "975a6e7f.2c917"
        ],
        "x": 535,
        "y": 260,
        "wires": []
    },
    {
        "id": "c2ad873d.206928",
        "type": "debug",
        "z": "8b3f1f72.5182c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "8b25e81f.a96c88",
        "type": "debug",
        "z": "8b3f1f72.5182c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 300,
        "wires": []
    },
    {
        "id": "be3185ef.b56ac8",
        "type": "function",
        "z": "8b3f1f72.5182c",
        "name": "set return data",
        "func": "msg.payload=`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<edmx:Edmx xmlns:edmx=\"http://schemas.microsoft.com/ado/2007/06/edmx\"\nxmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\" xmlns:sap=\"http://www.sap.com/Protocols/SAPData\" Version=\"1.0\">\n<edmx:DataServices m:DataServiceVersion=\"2.0\">\n    <Schema xmlns=\"http://schemas.microsoft.com/ado/2008/09/edm\" Namespace=\"SAPB1\" xml:lang=\"en\" sap:schema-version=\"1\">\n        <EntityType Name=\"Document\">\n            <Key>\n                <PropertyRef Name=\"DocEntry\"/>\n            </Key>\n            <Property Name=\"DocEntry\" Type=\"Edm.Int32\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"DocNum\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"DocDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Doc Date\"/>\n            <Property Name=\"DocDueDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\"/>\n            <Property Name=\"CardCode\" Type=\"Edm.String\" sap:unicode=\"false\" sap:value-list=\"standard\" sap:filter-restriction=\"single-value\"/>\n            <Property Name=\"CardName\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"Address\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"NumAtCard\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"DocTotal\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"AttachmentEntry\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"DocCurrency\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"DocRate\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Reference1\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"Reference2\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"Comments\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"JournalMemo\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"PaymentGroupCode\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"SalesPersonCode\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"TransportationCode\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ImportFileNum\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ContactPersonCode\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Series\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"TaxDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Tax Date\"/>\n            <Property Name=\"ShipToCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"Indicator\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"FederalTaxID\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"DiscountPercent\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"PaymentReference\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"CreationDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\"/>\n            <Property Name=\"UpdateDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\"/>\n            <Property Name=\"FinancialPeriod\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"TransNum\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"VatSum\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"VatSumSys\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"VatSumFc\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"DocTotalFc\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"DocTotalSys\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Form1099\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Box1099\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"RequriedDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\"/>\n            <Property Name=\"CancelDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\"/>\n            <Property Name=\"Segment\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"PaymentMethod\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"PaymentBlockEntry\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"CentralBankIndicator\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"Project\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ExemptionValidityDateFrom\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\"/>\n            <Property Name=\"ExemptionValidityDateTo\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\"/>\n            <Property Name=\"ExternalCorrectedDocNum\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"InternalCorrectedDocNum\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"NextCorrectingDocument\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"TaxExemptionLetterNum\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"WTApplied\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"WTAppliedFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"AgentCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"WTAppliedSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TotalEqualizationTax\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TotalEqualizationTaxFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TotalEqualizationTaxSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"NumberOfInstallments\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"WTNonSubjectAmount\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"WTNonSubjectAmountSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"WTNonSubjectAmountFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"WTExemptedAmount\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"WTExemptedAmountSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"WTExemptedAmountFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"BaseAmount\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"BaseAmountSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"BaseAmountFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"WTAmount\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"WTAmountSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"WTAmountFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"VatDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"DocumentsOwner\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"FolioPrefixString\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"FolioNumber\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"BPChannelCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"BPChannelContact\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Address2\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"PeriodIndicator\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"PayToCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ManualNumber\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"PayToBankCountry\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_ENT_EMF_Warehouse_T\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"PayToBankCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"PayToBankAccountNo\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"PayToBankBranch\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"BPL_IDAssignedToInvoice\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"DownPayment\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"LanguageCode\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"TrackingNumber\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"PickRemark\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ClosingDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"SequenceCode\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"SequenceSerial\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"SeriesString\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"SubSeriesString\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"SequenceModel\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"TotalDiscount\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"DownPaymentAmount\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"DownPaymentPercentage\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"DownPaymentAmountSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"DownPaymentAmountFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"VatPercent\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"ServiceGrossProfitPercent\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"OpeningRemarks\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ClosingRemarks\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"RoundingDiffAmount\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"RoundingDiffAmountFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"RoundingDiffAmountSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"SignatureInputMessage\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"SignatureDigest\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"CertificationNumber\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"PrivateKeyVersion\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ControlAccount\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"GTSChecker\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"GTSPayee\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ExtraMonth\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ExtraDays\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"CashDiscountDateOffset\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ETaxWebSite\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ETaxNumber\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"NTSApprovedNumber\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"EDocSeries\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"EDocNum\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"EDocExportFormat\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"EDocErrorCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"EDocErrorMessage\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"GroupSeries\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"GroupNumber\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"POSEquipmentNumber\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"POSManufacturerSerialNumber\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"POSCashierNumber\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"SpecifiedClosingDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"TotalDiscountFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TotalDiscountSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"BPLName\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"VATRegNum\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"AnnualInvoiceDeclarationReference\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Supplier\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"Releaser\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Receiver\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"BlanketAgreementNumber\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"AssetValueDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"Requester\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"RequesterName\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"RequesterBranch\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"RequesterDepartment\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"RequesterEmail\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ReqType\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"AuthorizationCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"StartDeliveryDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"EndDeliveryDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"VehiclePlate\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ATDocumentType\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ElecCommMessage\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"FiscalDocNum\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"POSDailySummaryNo\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"POSReceiptNo\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"PointOfIssueCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"FolioNumberFrom\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"FolioNumberTo\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"RelatedType\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"RelatedEntry\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"SAPPassport\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"DocumentTaxID\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"DateOfReportingControlStatementVAT\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\"\n            sap:label=\"Time Stamp\"/>\n            <Property Name=\"ReportingSectionControlStatementVAT\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"POS_CashRegister\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"DownPaymentTrasactionID\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"OriginalRefNo\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"OriginalRefDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"OriginalCreditOrDebitNo\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"OriginalCreditOrDebitDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\"\n            sap:label=\"Time Stamp\"/>\n            <Property Name=\"ECommerceOperator\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ECommerceGSTIN\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"TaxInvoiceNo\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"TaxInvoiceDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"ShipFrom\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"IssuingReason\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Cig\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Cup\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"PaidToDate\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"PaidToDateFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"PaidToDateSys\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_SBOA_ORIGIN\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_SBOA_ID\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_SBOA_ANNO\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CAU\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_IS_CART\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_MAGA_DFLT\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_MODCONS\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_VETT1\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_GIRO\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_ZONECONS\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_NUMORD_WEB\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_USER_WEB\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_TPDOC\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_DAA\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CODSPED\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_COMMENTO_WEB\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_ZONAC_VET\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_PRIORITA_BP\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_TIPO_CONS\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_DISTANZA\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_VOLUME\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_OE_GN_TEMPLATENAME\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_OE_GN_EXORDERID\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_OE_GN_EXREFUNDID\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_OE_GN_EXDELIVERYID\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_OE_GN_EXSALESQUOTEID\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_OE_GN_TPA\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_OE_GN_TPCP\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_OE_GN_EXOPPORTUNITYID\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_NO_FATT\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_RIF_RESO_ID_B2B\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CRIT_SPESE\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CRIT_SPIMB\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_MOD_ADDEBITO\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"SOIWizardId\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_ENT_EMFCtrlFF_YesNo_T\" Type=\"Edm.String\" sap:unicode=\"false\" sap:value-list=\"fixed-values\"/>\n            <Property Name=\"U_ENT_EMF_FF_Assoc_YesNo_T\" Type=\"Edm.String\" sap:unicode=\"false\" sap:value-list=\"fixed-values\"/>\n            <Property Name=\"U_ENT_EMF_FF_DocEntry_T\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_ENT_EMF_FF_LineNum_T\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"EditableHeader\" Type=\"Edm.Boolean\" sap:unicode=\"false\"/>\n            <Property Name=\"DocumentLines\" Type=\"Collection(SAPB1.DocumentLine)\"/>\n            <Property Name=\"U_ENT_EMF_FF_DocDate_T\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\"\n            sap:label=\"U_ENT_EMF_FF_DocDate_T\"/>\n            <NavigationProperty Name=\"To_BusinessPartners\" Relationship=\"SAPB1.Asso_DocBP\" FromRole=\"FromRole_Asso_DocBP\" ToRole=\"ToRole_Asso_DocBP\"/>\n        </EntityType>\n        <EntityType Name=\"Item\">\n                <Key>\n                    <PropertyRef Name=\"ItemCode\"/>\n                </Key>\n                <Property Name=\"ItemCode\" Nullable=\"false\" Type=\"Edm.String\"/>\n                <Property Name=\"ItemName\" Type=\"Edm.String\"/>\n                <Property Name=\"ForeignName\" Type=\"Edm.String\"/>\n                <Property Name=\"ItemsGroupCode\" Type=\"Edm.Int32\"/>\n                <Property Name=\"CustomsGroupCode\" Type=\"Edm.Int32\"/>\n                <Property Name=\"SalesVATGroup\" Type=\"Edm.String\"/>\n                <Property Name=\"BarCode\" Type=\"Edm.String\"/>\n                <Property Name=\"VatLiable\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"PurchaseItem\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"SalesItem\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"InventoryItem\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"IncomeAccount\" Type=\"Edm.String\"/>\n                <Property Name=\"ExemptIncomeAccount\" Type=\"Edm.String\"/>\n                <Property Name=\"ExpanseAccount\" Type=\"Edm.String\"/>\n                <Property Name=\"Mainsupplier\" Type=\"Edm.String\"/>\n                <Property Name=\"SupplierCatalogNo\" Type=\"Edm.String\"/>\n                <Property Name=\"DesiredInventory\" Type=\"Edm.Double\"/>\n                <Property Name=\"MinInventory\" Type=\"Edm.Double\"/>\n                <Property Name=\"Picture\" Type=\"Edm.String\"/>\n                <Property Name=\"User_Text\" Type=\"Edm.String\"/>\n                <Property Name=\"SerialNum\" Type=\"Edm.String\"/>\n                <Property Name=\"CommissionPercent\" Type=\"Edm.Double\"/>\n                <Property Name=\"CommissionSum\" Type=\"Edm.Double\"/>\n                <Property Name=\"CommissionGroup\" Type=\"Edm.Int32\"/>\n                <Property Name=\"TreeType\" Type=\"SAPB1.BoItemTreeTypes\"/>\n                <Property Name=\"AssetItem\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"DataExportCode\" Type=\"Edm.String\"/>\n                <Property Name=\"Manufacturer\" Type=\"Edm.Int32\"/>\n                <Property Name=\"QuantityOnStock\" Type=\"Edm.Double\"/>\n                <Property Name=\"QuantityOrderedFromVendors\" Type=\"Edm.Double\"/>\n                <Property Name=\"QuantityOrderedByCustomers\" Type=\"Edm.Double\"/>\n                <Property Name=\"ManageSerialNumbers\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"ManageBatchNumbers\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Valid\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"ValidFrom\" Type=\"Edm.DateTimeOffset\"/>\n                <Property Name=\"ValidTo\" Type=\"Edm.DateTimeOffset\"/>\n                <Property Name=\"ValidRemarks\" Type=\"Edm.String\"/>\n                <Property Name=\"Frozen\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"FrozenFrom\" Type=\"Edm.DateTimeOffset\"/>\n                <Property Name=\"FrozenTo\" Type=\"Edm.DateTimeOffset\"/>\n                <Property Name=\"FrozenRemarks\" Type=\"Edm.String\"/>\n                <Property Name=\"SalesUnit\" Type=\"Edm.String\"/>\n                <Property Name=\"SalesItemsPerUnit\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesPackagingUnit\" Type=\"Edm.String\"/>\n                <Property Name=\"SalesQtyPerPackUnit\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesUnitLength\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesLengthUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"SalesUnitWidth\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesWidthUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"SalesUnitHeight\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesHeightUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"SalesUnitVolume\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesVolumeUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"SalesUnitWeight\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesWeightUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"PurchaseUnit\" Type=\"Edm.String\"/>\n                <Property Name=\"PurchaseItemsPerUnit\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchasePackagingUnit\" Type=\"Edm.String\"/>\n                <Property Name=\"PurchaseQtyPerPackUnit\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseUnitLength\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseLengthUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"PurchaseUnitWidth\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseWidthUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"PurchaseUnitHeight\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseHeightUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"PurchaseUnitVolume\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseVolumeUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"PurchaseUnitWeight\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseWeightUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"PurchaseVATGroup\" Type=\"Edm.String\"/>\n                <Property Name=\"SalesFactor1\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesFactor2\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesFactor3\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesFactor4\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseFactor1\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseFactor2\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseFactor3\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseFactor4\" Type=\"Edm.Double\"/>\n                <Property Name=\"MovingAveragePrice\" Type=\"Edm.Double\"/>\n                <Property Name=\"ForeignRevenuesAccount\" Type=\"Edm.String\"/>\n                <Property Name=\"ECRevenuesAccount\" Type=\"Edm.String\"/>\n                <Property Name=\"ForeignExpensesAccount\" Type=\"Edm.String\"/>\n                <Property Name=\"ECExpensesAccount\" Type=\"Edm.String\"/>\n                <Property Name=\"AvgStdPrice\" Type=\"Edm.Double\"/>\n                <Property Name=\"DefaultWarehouse\" Type=\"Edm.String\"/>\n                <Property Name=\"ShipType\" Type=\"Edm.Int32\"/>\n                <Property Name=\"GLMethod\" Type=\"SAPB1.BoGLMethods\"/>\n                <Property Name=\"TaxType\" Type=\"SAPB1.BoTaxTypes\"/>\n                <Property Name=\"MaxInventory\" Type=\"Edm.Double\"/>\n                <Property Name=\"ManageStockByWarehouse\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"PurchaseHeightUnit1\" Type=\"Edm.Int32\"/>\n                <Property Name=\"PurchaseUnitHeight1\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseLengthUnit1\" Type=\"Edm.Int32\"/>\n                <Property Name=\"PurchaseUnitLength1\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseWeightUnit1\" Type=\"Edm.Int32\"/>\n                <Property Name=\"PurchaseUnitWeight1\" Type=\"Edm.Double\"/>\n                <Property Name=\"PurchaseWidthUnit1\" Type=\"Edm.Int32\"/>\n                <Property Name=\"PurchaseUnitWidth1\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesHeightUnit1\" Type=\"Edm.Int32\"/>\n                <Property Name=\"SalesUnitHeight1\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesLengthUnit1\" Type=\"Edm.Int32\"/>\n                <Property Name=\"SalesUnitLength1\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesWeightUnit1\" Type=\"Edm.Int32\"/>\n                <Property Name=\"SalesUnitWeight1\" Type=\"Edm.Double\"/>\n                <Property Name=\"SalesWidthUnit1\" Type=\"Edm.Int32\"/>\n                <Property Name=\"SalesUnitWidth1\" Type=\"Edm.Double\"/>\n                <Property Name=\"ForceSelectionOfSerialNumber\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"ManageSerialNumbersOnReleaseOnly\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"WTLiable\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"CostAccountingMethod\" Type=\"SAPB1.BoInventorySystem\"/>\n                <Property Name=\"SWW\" Type=\"Edm.String\"/>\n                <Property Name=\"WarrantyTemplate\" Type=\"Edm.String\"/>\n                <Property Name=\"IndirectTax\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"ArTaxCode\" Type=\"Edm.String\"/>\n                <Property Name=\"ApTaxCode\" Type=\"Edm.String\"/>\n                <Property Name=\"BaseUnitName\" Type=\"Edm.String\"/>\n                <Property Name=\"ItemCountryOrg\" Type=\"Edm.String\"/>\n                <Property Name=\"IssueMethod\" Type=\"SAPB1.BoIssueMethod\"/>\n                <Property Name=\"SRIAndBatchManageMethod\" Type=\"SAPB1.BoManageMethod\"/>\n                <Property Name=\"IsPhantom\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"InventoryUOM\" Type=\"Edm.String\"/>\n                <Property Name=\"PlanningSystem\" Type=\"SAPB1.BoPlanningSystem\"/>\n                <Property Name=\"ProcurementMethod\" Type=\"SAPB1.BoProcurementMethod\"/>\n                <Property Name=\"ComponentWarehouse\" Type=\"SAPB1.BoMRPComponentWarehouse\"/>\n                <Property Name=\"OrderIntervals\" Type=\"Edm.Int32\"/>\n                <Property Name=\"OrderMultiple\" Type=\"Edm.Double\"/>\n                <Property Name=\"LeadTime\" Type=\"Edm.Int32\"/>\n                <Property Name=\"MinOrderQuantity\" Type=\"Edm.Double\"/>\n                <Property Name=\"ItemType\" Type=\"SAPB1.ItemTypeEnum\"/>\n                <Property Name=\"ItemClass\" Type=\"SAPB1.ItemClassEnum\"/>\n                <Property Name=\"OutgoingServiceCode\" Type=\"Edm.Int32\"/>\n                <Property Name=\"IncomingServiceCode\" Type=\"Edm.Int32\"/>\n                <Property Name=\"ServiceGroup\" Type=\"Edm.Int32\"/>\n                <Property Name=\"NCMCode\" Type=\"Edm.Int32\"/>\n                <Property Name=\"MaterialType\" Type=\"SAPB1.BoMaterialTypes\"/>\n                <Property Name=\"MaterialGroup\" Type=\"Edm.Int32\"/>\n                <Property Name=\"ProductSource\" Type=\"Edm.String\"/>\n                <Property Name=\"Properties1\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties2\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties3\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties4\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties5\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties6\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties7\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties8\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties9\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties10\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties11\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties12\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties13\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties14\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties15\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties16\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties17\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties18\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties19\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties20\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties21\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties22\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties23\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties24\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties25\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties26\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties27\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties28\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties29\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties30\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties31\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties32\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties33\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties34\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties35\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties36\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties37\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties38\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties39\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties40\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties41\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties42\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties43\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties44\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties45\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties46\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties47\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties48\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties49\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties50\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties51\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties52\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties53\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties54\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties55\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties56\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties57\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties58\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties59\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties60\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties61\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties62\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties63\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Properties64\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"AutoCreateSerialNumbersOnRelease\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"DNFEntry\" Type=\"Edm.Int32\"/>\n                <Property Name=\"GTSItemSpec\" Type=\"Edm.String\"/>\n                <Property Name=\"GTSItemTaxCategory\" Type=\"Edm.String\"/>\n                <Property Name=\"FuelID\" Type=\"Edm.Int32\"/>\n                <Property Name=\"BeverageTableCode\" Type=\"Edm.String\"/>\n                <Property Name=\"BeverageGroupCode\" Type=\"Edm.String\"/>\n                <Property Name=\"BeverageCommercialBrandCode\" Type=\"Edm.Int32\"/>\n                <Property Name=\"Series\" Type=\"Edm.Int32\"/>\n                <Property Name=\"ToleranceDays\" Type=\"Edm.Int32\"/>\n                <Property Name=\"TypeOfAdvancedRules\" Type=\"SAPB1.TypeOfAdvancedRulesEnum\"/>\n                <Property Name=\"IssuePrimarilyBy\" Type=\"SAPB1.IssuePrimarilyByEnum\"/>\n                <Property Name=\"NoDiscounts\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"AssetClass\" Type=\"Edm.String\"/>\n                <Property Name=\"AssetGroup\" Type=\"Edm.String\"/>\n                <Property Name=\"InventoryNumber\" Type=\"Edm.String\"/>\n                <Property Name=\"Technician\" Type=\"Edm.Int32\"/>\n                <Property Name=\"Employee\" Type=\"Edm.Int32\"/>\n                <Property Name=\"Location\" Type=\"Edm.Int32\"/>\n                <Property Name=\"AssetStatus\" Type=\"SAPB1.AssetStatusEnum\"/>\n                <Property Name=\"CapitalizationDate\" Type=\"Edm.DateTimeOffset\"/>\n                <Property Name=\"StatisticalAsset\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"Cession\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"DeactivateAfterUsefulLife\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"ManageByQuantity\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"UoMGroupEntry\" Type=\"Edm.Int32\"/>\n                <Property Name=\"InventoryUoMEntry\" Type=\"Edm.Int32\"/>\n                <Property Name=\"DefaultSalesUoMEntry\" Type=\"Edm.Int32\"/>\n                <Property Name=\"DefaultPurchasingUoMEntry\" Type=\"Edm.Int32\"/>\n                <Property Name=\"DepreciationGroup\" Type=\"Edm.String\"/>\n                <Property Name=\"AssetSerialNumber\" Type=\"Edm.String\"/>\n                <Property Name=\"InventoryWeight\" Type=\"Edm.Double\"/>\n                <Property Name=\"InventoryWeightUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"InventoryWeight1\" Type=\"Edm.Double\"/>\n                <Property Name=\"InventoryWeightUnit1\" Type=\"Edm.Int32\"/>\n                <Property Name=\"DefaultCountingUnit\" Type=\"Edm.String\"/>\n                <Property Name=\"CountingItemsPerUnit\" Type=\"Edm.Double\"/>\n                <Property Name=\"DefaultCountingUoMEntry\" Type=\"Edm.Int32\"/>\n                <Property Name=\"Excisable\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"ChapterID\" Type=\"Edm.Int32\"/>\n                <Property Name=\"ScsCode\" Type=\"Edm.String\"/>\n                <Property Name=\"SpProdType\" Type=\"SAPB1.SpecialProductTypeEnum\"/>\n                <Property Name=\"ProdStdCost\" Type=\"Edm.Double\"/>\n                <Property Name=\"InCostRollup\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"VirtualAssetItem\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"EnforceAssetSerialNumbers\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"AttachmentEntry\" Type=\"Edm.Int32\"/>\n                <Property Name=\"LinkedResource\" Type=\"Edm.String\"/>\n                <Property Name=\"UpdateDate\" Type=\"Edm.DateTimeOffset\"/>\n                <Property Name=\"UpdateTime\" Type=\"Edm.TimeOfDay\"/>\n                <Property Name=\"GSTRelevnt\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"SACEntry\" Type=\"Edm.Int32\"/>\n                <Property Name=\"GSTTaxCategory\" Type=\"SAPB1.GSTTaxCategoryEnum\"/>\n                <Property Name=\"ServiceCategoryEntry\" Type=\"Edm.Int32\"/>\n                <Property Name=\"CapitalGoodsOnHoldPercent\" Type=\"Edm.Double\"/>\n                <Property Name=\"CapitalGoodsOnHoldLimit\" Type=\"Edm.Double\"/>\n                <Property Name=\"AssessableValue\" Type=\"Edm.Double\"/>\n                <Property Name=\"AssVal4WTR\" Type=\"Edm.Double\"/>\n                <Property Name=\"SOIExcisable\" Type=\"SAPB1.SOIExcisableTypeEnum\"/>\n                <Property Name=\"TNVED\" Type=\"Edm.String\"/>\n                <Property Name=\"ImportedItem\" Type=\"SAPB1.BoYesNoEnum\"/>\n                <Property Name=\"PricingUnit\" Type=\"Edm.Int32\"/>\n                <Property Name=\"CreateDate\" Type=\"Edm.DateTimeOffset\"/>\n                <Property Name=\"CreateTime\" Type=\"Edm.TimeOfDay\"/>\n                <Property Name=\"NVECode\" Type=\"Edm.String\"/>\n                <Property Name=\"CtrSealQty\" Type=\"Edm.Double\"/>\n                <Property Name=\"CESTCode\" Type=\"Edm.Int32\"/>\n                <Property Name=\"LegalText\" Type=\"Edm.String\"/>\n                <Property Name=\"DataVersion\" Type=\"Edm.Int32\"/>\n                <Property Name=\"CreateQRCodeFrom\" Type=\"Edm.String\"/>\n                <Property Name=\"U_BOY_TB_0\" Nullable=\"false\" Type=\"Edm.String\"/>\n                <Property Name=\"ItemPrices\" Type=\"Collection(SAPB1.ItemPrice)\"/>\n                <Property Name=\"ItemWarehouseInfoCollection\" Type=\"Collection(SAPB1.ItemWarehouseInfo)\"/>\n                <Property Name=\"ItemPreferredVendors\" Type=\"Collection(SAPB1.ItemPreferredVendor)\"/>\n                <Property Name=\"ItemLocalizationInfos\" Type=\"Collection(SAPB1.ItemLocalizationInfo)\"/>\n                <Property Name=\"ItemProjects\" Type=\"Collection(SAPB1.ItemProject)\"/>\n                <Property Name=\"ItemDistributionRules\" Type=\"Collection(SAPB1.ItemDistributionRule)\"/>\n                <Property Name=\"ItemAttributeGroups\" Type=\"Collection(SAPB1.ItemAttributeGroups)\"/>\n                <Property Name=\"ItemDepreciationParameters\" Type=\"Collection(SAPB1.ItemDepreciationParameter)\"/>\n                <Property Name=\"ItemPeriodControls\" Type=\"Collection(SAPB1.ItemPeriodControl)\"/>\n                <Property Name=\"ItemUnitOfMeasurementCollection\" Type=\"Collection(SAPB1.ItemUnitOfMeasurement)\"/>\n                <Property Name=\"ItemBarCodeCollection\" Type=\"Collection(SAPB1.ItemBarCode)\"/>\n                <Property Name=\"ItemIntrastatExtension\" Type=\"SAPB1.ItemIntrastatExtension\"/>\n            </EntityType>\n        <EntityType Name=\"DocumentLine\" sap:content-version=\"1\">\n            <Key>\n                <PropertyRef Name=\"LineNum\"/>\n                <PropertyRef Name=\"DocEntry\"/>\n            </Key>\n            <Property Name=\"LineNum\" Type=\"Edm.Int32\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"ItemCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ItemDescription\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"Quantity\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"ShipDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"Price\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"PriceAfterVAT\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Currency\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"Rate\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"DiscountPercent\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"VendorNum\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"SerialNum\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"WarehouseCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"SalesPersonCode\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"CommisionPercent\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"AccountCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"SupplierCatNum\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"CostingCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ProjectCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"BarCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"VatGroup\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"Height1\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Hight1Unit\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Height2\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Height2Unit\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Lengh1\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Lengh1Unit\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Lengh2\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Lengh2Unit\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Weight1\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Weight1Unit\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Weight2\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Weight2Unit\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Factor1\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Factor2\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Factor3\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Factor4\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"BaseType\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"BaseEntry\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"BaseLine\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Volume\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"VolumeUnit\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Width1\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Width1Unit\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Width2\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Width2Unit\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Address\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"TaxCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"PickQuantity\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"PickListIdNumber\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"OriginalItem\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"FreeText\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ShippingMethod\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"POTargetNum\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"POTargetEntry\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"POTargetRowNum\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"CorrInvAmountToStock\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"CorrInvAmountToDiffAcct\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"AppliedTax\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"AppliedTaxFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"AppliedTaxSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"EqualizationTaxPercent\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TotalEqualizationTax\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TotalEqualizationTaxFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TotalEqualizationTaxSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"NetTaxAmount\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"NetTaxAmountFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"NetTaxAmountSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"MeasureUnit\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"UnitsOfMeasurment\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"LineTotal\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TaxPercentagePerRow\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TaxTotal\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"ExciseAmount\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TaxPerUnit\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TotalInclTax\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"CountryOrg\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"SWW\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"RowTotalFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"RowTotalSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"LastBuyInmPrice\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"LastBuyDistributeSumFc\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"LastBuyDistributeSumSc\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"LastBuyDistributeSum\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"StockDistributesumForeign\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"StockDistributesumSystem\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"StockDistributesum\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"StockInmPrice\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TaxBeforeDPM\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TaxBeforeDPMFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"TaxBeforeDPMSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"CFOPCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"CSTCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"Usage\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"VisualOrder\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"BaseOpenQuantity\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"UnitPrice\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"PackageQuantity\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Text\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"COGSCostingCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"COGSAccountCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ChangeAssemlyBoMWarehouse\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"GrossBuyPrice\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"GrossBase\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"GrossProfitTotalBasePrice\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"CostingCode2\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"CostingCode3\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"CostingCode4\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"CostingCode5\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ItemDetails\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"LocationCode\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ActualDeliveryDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"RemainingOpenQuantity\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"OpenAmount\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"OpenAmountFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"OpenAmountSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"ExLineNo\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"RequiredDate\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"RequiredQuantity\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"COGSCostingCode2\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"COGSCostingCode3\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"COGSCostingCode4\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"COGSCostingCode5\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"CSTforIPI\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"CSTforPIS\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"CSTforCOFINS\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"CreditOriginCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"AgreementNo\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"AgreementRowNumber\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ActualBaseEntry\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ActualBaseLine\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"DocEntry\" Type=\"Edm.Int32\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"Surpluses\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"DefectAndBreakup\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"Shortages\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"RetirementQuantity\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"RetirementAPC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"ExpenseType\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ReceiptNumber\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"FederalTaxID\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ReturnCost\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"LineVendor\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"StgSeqNum\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"StgEntry\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"StgDesc\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"UoMEntry\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"UoMCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"InventoryQuantity\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"RemainingOpenInventoryQuantity\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"ParentLineNum\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"Incoterms\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"TransportMode\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"SACEntry\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"HSNEntry\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"GrossPrice\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"GrossTotal\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"GrossTotalFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"GrossTotalSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"NCMCode\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ShipToCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ShipToDescription\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ShipFromCode\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ShipFromDescription\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_B1SYS_Discount\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_B1SYS_Discount_FC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_B1SYS_Discount_SC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_B1SYS_DiscountVat\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_B1SYS_DiscountVtFC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_B1SYS_DiscountVtSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_RIFP\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_SEL_ART\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_PAR\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_OTRAN_F\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_ODATA_OF\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"U_PONE_ONUM_OF\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_DT_DOF\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n            <Property Name=\"U_PONE_NUM_DOF\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CODART_EX\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_ARTFOR\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_TypeIN\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_TypeOUT\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_TIPO_OPERATORE\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_COD_PROMO_B2O\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CHIUDI_BCK\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_PRE\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_SC1\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_SC2\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_SC3\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_STRSC\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_PRVCA\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_PRVT\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CLS\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_SUBC\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CAT_SCO_A\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CAT_SCO_V\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_LISTNUM\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_PRICERES\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_GRSCO\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_FSCSCO\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CODINT\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_SPECPRICE\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_FAM\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_FAM_A\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_FAM_V\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CAT_SCO\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_RIF_PADRE\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CATEGORIA\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_PRZLIS\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_TIPORIGA\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_EDTSC\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_EDTPRZ\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_PRVRESULT\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CAPOAREA\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_TECNICO\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_ABBUONO\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_EXSC\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_TERRID\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"U_OE_GN_EXLINEITEMID\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_CAT_TRASP\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_IS_NETTO\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\"/>\n            <Property Name=\"U_PONE_COSTO\" Type=\"Edm.Double\" sap:unicode=\"false\"/>\n            <Property Name=\"U_ENT_EMFCtrlFF_YesNo_R\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ReturnAction\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ReturnReason\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ENT_EMFCtrlFF_YesNo_R\" Type=\"Edm.String\" sap:unicode=\"false\"/>\n            <Property Name=\"ENT_EMF_FF_DocEntry_R\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ENT_EMF_FF_LineNum_R\" Type=\"Edm.Int32\" sap:unicode=\"false\"/>\n            <Property Name=\"ENT_EMF_FF_DocDate_R\" Type=\"Edm.DateTime\" Precision=\"0\" sap:unicode=\"false\" sap:display-format=\"Date\" sap:label=\"Time Stamp\"/>\n        </EntityType>\n        <EntityType Name=\"BusinessPartner\" sap:content-version=\"1\">\n            <Key>\n                <PropertyRef Name=\"CardCode\"/>\n            </Key>\n            <Property Name=\"CardCode\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\" sap:label=\"Codice Fornitore\"/>\n            <Property Name=\"CardName\" Type=\"Edm.String\" sap:unicode=\"false\" sap:label=\"Ragione Sociale\"/>\n        </EntityType>\n        <EntityType Name=\"Resources\" sap:content-version=\"1\">\n            <Key>\n                <PropertyRef Name=\"Code\"/>\n            </Key>\n            <Property Name=\"Code\" Type=\"Edm.String\" Nullable=\"false\" sap:unicode=\"false\" />\n            <Property Name=\"Name\" Type=\"Edm.String\" sap:unicode=\"false\" />\n        </EntityType>\n        \n        <EntityContainer Name=\"SAPB1_Entities\" m:IsDefaultEntityContainer=\"true\" sap:supported-formats=\"atom json xlsx\">\n            <EntitySet EntityType=\"SAPB1.Document\" Name=\"PurchaseRequests\"/>\n            <EntitySet Name=\"DocumentLines\" EntityType=\"SAPB1.DocumentLine\" sap:content-version=\"1\"/>\n            <EntitySet Name=\"BusinessPartners\" EntityType=\"SAPB1.BusinessPartner\" sap:content-version=\"1\"/>\n            <EntitySet EntityType=\"SAPB1.Item\" Name=\"Items\"/>\n        </EntityContainer>\n        <atom:link xmlns:atom=\"http://www.w3.org/2005/Atom\" rel=\"self\" href=\"http://hanademo.ddns.net:50104/b1s/v2/sml.svc/$metadata\"/>\n        <atom:link xmlns:atom=\"http://www.w3.org/2005/Atom\" rel=\"latest-version\" href=\"http://hanademo.ddns.net:50104/b1s/v2/sml.svc/$metadata\"/>\n    </Schema>\n</edmx:DataServices>\n</edmx:Edmx>`;\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/xml';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 360,
        "wires": [
            [
                "b476a3d.b7ad46"
            ]
        ]
    },
    {
        "id": "f5431580.b98288",
        "type": "function",
        "z": "8b3f1f72.5182c",
        "name": "url check for $metadata",
        "func": "const isMetadata = ( msg.req.url.indexOf(\"$metadata\") > -1 );\n\nif (isMetadata)\n    return [null, msg];\nelse\n    return [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 890,
        "y": 40,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "65e6c8a5.274f68",
        "type": "link in",
        "z": "8b3f1f72.5182c",
        "name": "",
        "links": [
            "de3c7668.3cdfe8",
            "87f89bfd.1fa878",
            "32e012f2.623b8e",
            "9caf87a0.dafcc8",
            "c95da4da.a23d48"
        ],
        "x": 195,
        "y": 100,
        "wires": [
            [
                "7c441206.249dbc"
            ]
        ]
    },
    {
        "id": "46126473.1fe38c",
        "type": "link out",
        "z": "8b3f1f72.5182c",
        "name": "",
        "links": [],
        "x": 535,
        "y": 220,
        "wires": []
    },
    {
        "id": "707be043.d720b",
        "type": "b1-service-layer-request",
        "z": "8b3f1f72.5182c",
        "server": "596459b.d78c4a8",
        "name": "SL - Get Metadata",
        "serviceLayerMethod": "",
        "httpMethod": "GET",
        "slResponseObject": "flowData",
        "x": 390,
        "y": 240,
        "wires": [
            [
                "46126473.1fe38c",
                "c2ad873d.206928"
            ],
            [
                "1ace4669.89faaa",
                "8b25e81f.a96c88"
            ]
        ]
    },
    {
        "id": "95b85fb3.31a34",
        "type": "comment",
        "z": "d564f4b.93d0e08",
        "name": "1. Input  & Validation",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "6fe6d0ab.71a73",
        "type": "http in",
        "z": "d564f4b.93d0e08",
        "name": "Service Document",
        "url": "/api/odatav2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 850,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "1bb149c4.c3c686",
        "type": "function",
        "z": "d564f4b.93d0e08",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'ServiceDocument';\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 100,
        "wires": [
            [
                "bf0f2796.f1fa78"
            ]
        ]
    },
    {
        "id": "bf0f2796.f1fa78",
        "type": "subflow:4217f61f.7e7488",
        "z": "d564f4b.93d0e08",
        "name": "",
        "env": [],
        "x": 510,
        "y": 100,
        "wires": [
            [
                "e79dee86.60075"
            ]
        ]
    },
    {
        "id": "e79dee86.60075",
        "type": "link out",
        "z": "d564f4b.93d0e08",
        "name": "",
        "links": [
            "6ae0a2ae.8a292c"
        ],
        "x": 635,
        "y": 100,
        "wires": []
    },
    {
        "id": "3408d6da.005e9a",
        "type": "comment",
        "z": "d564f4b.93d0e08",
        "name": "9. Error Handling",
        "info": "",
        "x": 100,
        "y": 480,
        "wires": []
    },
    {
        "id": "e41c4c6f.2e1f9",
        "type": "catch",
        "z": "d564f4b.93d0e08",
        "name": "catch errors",
        "scope": null,
        "uncaught": false,
        "x": 110,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "d8067410.4d06a8",
        "type": "comment",
        "z": "d564f4b.93d0e08",
        "name": "2. Get connection data",
        "info": "",
        "x": 120,
        "y": 180,
        "wires": []
    },
    {
        "id": "6ae0a2ae.8a292c",
        "type": "link in",
        "z": "d564f4b.93d0e08",
        "name": "",
        "links": [
            "e79dee86.60075"
        ],
        "x": 55,
        "y": 240,
        "wires": [
            [
                "7292119a.e838"
            ]
        ]
    },
    {
        "id": "c9802cf7.03c61",
        "type": "comment",
        "z": "d564f4b.93d0e08",
        "name": "4. Business Logic (V4 to V2)",
        "info": "",
        "x": 140,
        "y": 300,
        "wires": []
    },
    {
        "id": "43fbcbc1.f22c64",
        "type": "http response",
        "z": "d564f4b.93d0e08",
        "name": "Service Document OK",
        "statusCode": "200",
        "headers": {},
        "x": 420,
        "y": 360,
        "wires": []
    },
    {
        "id": "fce12aed.3830b8",
        "type": "http response",
        "z": "d564f4b.93d0e08",
        "name": "Service Document KO",
        "statusCode": "",
        "headers": {},
        "x": 220,
        "y": 420,
        "wires": []
    },
    {
        "id": "e58c60b5.482ff",
        "type": "link in",
        "z": "d564f4b.93d0e08",
        "name": "",
        "links": [
            "721dc947.30c818",
            "cac45b7.f4b0ea8"
        ],
        "x": 55,
        "y": 360,
        "wires": [
            [
                "f22f41bd.1b18f"
            ]
        ]
    },
    {
        "id": "ec9c29eb.f64248",
        "type": "link in",
        "z": "d564f4b.93d0e08",
        "name": "",
        "links": [
            "602f1893.e73918",
            "a5be9108.79673"
        ],
        "x": 55,
        "y": 420,
        "wires": [
            [
                "fce12aed.3830b8"
            ]
        ]
    },
    {
        "id": "7292119a.e838",
        "type": "function",
        "z": "d564f4b.93d0e08",
        "name": "SL Prep - unused",
        "func": "let method = `$metadata`;\nmsg.serviceLayer.method = method;\nmsg.configOverride = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 240,
        "wires": [
            [
                "79587663236b572e"
            ]
        ]
    },
    {
        "id": "a5be9108.79673",
        "type": "link out",
        "z": "d564f4b.93d0e08",
        "name": "",
        "links": [
            "ec9c29eb.f64248"
        ],
        "x": 655,
        "y": 260,
        "wires": []
    },
    {
        "id": "cac45b7.f4b0ea8",
        "type": "link out",
        "z": "d564f4b.93d0e08",
        "name": "",
        "links": [
            "e58c60b5.482ff"
        ],
        "x": 655,
        "y": 220,
        "wires": []
    },
    {
        "id": "7a5a39a7.1718e8",
        "type": "debug",
        "z": "d564f4b.93d0e08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 690,
        "y": 180,
        "wires": []
    },
    {
        "id": "56f3ca40.b42694",
        "type": "debug",
        "z": "d564f4b.93d0e08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 690,
        "y": 300,
        "wires": []
    },
    {
        "id": "f22f41bd.1b18f",
        "type": "function",
        "z": "d564f4b.93d0e08",
        "name": "set return data",
        "func": "msg.payload=\n`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<app:service xml:lang=\"en\"\n           \txml:base=\"http://localhost:60954/api/odatav2/\"\n           \txmlns:app=\"http://www.w3.org/2007/app\"\n           \txmlns:atom=\"http://www.w3.org/2005/Atom\"\n           \txmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\"\n           \txmlns:sap=\"http://www.sap.com/Protocols/SAPData\">\n\t<app:workspace>\n\t\t<atom:title type=\"text\">Data</atom:title>\n\t\t<app:collection sap:content-version=\"1\"\n              \t\t\thref=\"PurchaseDeliveryNotes\">\n\t\t\t<atom:title type=\"text\">PurchaseDeliveryNotes</atom:title>\n\t\t\t<sap:member-title>Document</sap:member-title>\n\t\t</app:collection>\n\t\t<app:collection sap:content-version=\"1\"\n              \t\t\thref=\"PurchaseInvoices\">\n\t\t\t<atom:title type=\"text\">PurchaseInvoices</atom:title>\n\t\t\t<sap:member-title>Document</sap:member-title>\n\t\t</app:collection>\n\t\t<app:collection sap:content-version=\"1\"\n              \t\t\thref=\"DocumentLines\">\n\t\t\t<atom:title type=\"text\">DocumentLines</atom:title>\n\t\t\t<sap:member-title>DocumentLine</sap:member-title>\n\t\t</app:collection>\n\t\t<app:collection sap:content-version=\"1\"\n              \t\t\thref=\"BusinessPartners\">\n\t\t\t<atom:title type=\"text\">BusinessPartners</atom:title>\n\t\t\t<sap:member-title>BusinessPartner</sap:member-title>\n\t\t</app:collection>\n\t\t<app:collection sap:content-version=\"1\"\n              \t\t\thref=\"Warehouses\">\n\t\t\t<atom:title type=\"text\">Warehouses</atom:title>\n\t\t\t<sap:member-title>Warehouse</sap:member-title>\n\t\t</app:collection>\n\t\t<app:collection sap:content-version=\"1\"\n              \t\t\thref=\"U_ENT_VALUES_YESNO\">\n\t\t\t<atom:title type=\"text\">U_ENT_VALUES_YESNO</atom:title>\n\t\t\t<sap:member-title>U_ENT_VALUES_YESNO</sap:member-title>\n\t\t</app:collection>\n\t</app:workspace>\n\t<atom:link rel=\"self\"\n         \t\thref=\"http://localhost:60954/api/odatav2/\"/>\n\t<atom:link rel=\"latest-version\"\n         \t\thref=\"http://localhost:60954/api/odatav2/\"/>\n</app:service>`;\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/xml';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 360,
        "wires": [
            [
                "43fbcbc1.f22c64"
            ]
        ]
    },
    {
        "id": "6f5cea46.adeed4",
        "type": "link in",
        "z": "d564f4b.93d0e08",
        "name": "",
        "links": [
            "29b4a125.b2cf8e",
            "3c497eaa.6653f2",
            "84cae324.fb015",
            "cace3157.67934",
            "bd2a1a41.37d478"
        ],
        "x": 215,
        "y": 100,
        "wires": [
            [
                "1bb149c4.c3c686"
            ]
        ]
    },
    {
        "id": "c6e35c28.62208",
        "type": "b1-service-layer-request",
        "z": "d564f4b.93d0e08",
        "server": "596459b.d78c4a8",
        "name": "SL - Get Metadata - unused",
        "serviceLayerMethod": "",
        "httpMethod": "GET",
        "slResponseObject": "flowData",
        "x": 480,
        "y": 260,
        "wires": [
            [
                "cac45b7.f4b0ea8",
                "7a5a39a7.1718e8"
            ],
            [
                "a5be9108.79673",
                "56f3ca40.b42694"
            ]
        ]
    },
    {
        "id": "79587663236b572e",
        "type": "subflow:1e460b6845924ff6",
        "z": "d564f4b.93d0e08",
        "name": "",
        "x": 350,
        "y": 180,
        "wires": [
            [
                "c6e35c28.62208"
            ]
        ]
    },
    {
        "id": "da8d0d89.ab9f4",
        "type": "http in",
        "z": "d5cfaaa7.77a3a8",
        "name": "Any Service Layer Resource",
        "url": "/api/odatav2/*",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "cd19816a.62ed6",
                "3adb34f.df280cc"
            ]
        ],
        "info": "## All Service Layer - object requests for forwarding"
    },
    {
        "id": "e6e10488.836d68",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'GET-EntityData';\n\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 40,
        "wires": [
            [
                "5ee94207.538bcc"
            ]
        ]
    },
    {
        "id": "b039c518.fb6a58",
        "type": "comment",
        "z": "d5cfaaa7.77a3a8",
        "name": "1. Input  & Validation",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "ed899376.b569b",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.payload;\n\nmsg.statusCode = 401;\nnode.warn(msg)\nthrow new Error(`User not authenticated.`);",
        "outputs": 0,
        "noerr": 0,
        "x": 1150,
        "y": 180,
        "wires": []
    },
    {
        "id": "5ee94207.538bcc",
        "type": "subflow:4217f61f.7e7488",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "env": [],
        "x": 790,
        "y": 160,
        "wires": [
            [
                "b72a306d.f1701",
                "119217e4.cd33d8"
            ]
        ]
    },
    {
        "id": "93d5d641.d6e748",
        "type": "comment",
        "z": "d5cfaaa7.77a3a8",
        "name": "9. Error Handling",
        "info": "",
        "x": 120,
        "y": 880,
        "wires": []
    },
    {
        "id": "73a8d37d.b49a2c",
        "type": "catch",
        "z": "d5cfaaa7.77a3a8",
        "name": "catch errors",
        "scope": null,
        "uncaught": false,
        "x": 130,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "119217e4.cd33d8",
        "type": "link out",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "870a23.a93bd5e",
            "6591753f.408c1c",
            "695d1afa.3873e4"
        ],
        "x": 1105,
        "y": 140,
        "wires": []
    },
    {
        "id": "becae935.715038",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "req params check",
        "func": "const { cookies } = msg.req;\n// node.warn(cookie)\nif (!cookies || !cookies.entSessionId) {\n    msg.payload =  'User not authenticated';\n    return [null, msg];\n}\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "x": 970,
        "y": 100,
        "wires": [
            [
                "119217e4.cd33d8"
            ],
            [
                "ed899376.b569b"
            ]
        ]
    },
    {
        "id": "f4324e5.04ba6b",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "session check",
        "func": "const sessionInfo = global.get('sessionInfo');\n// const entsession = msg.req.headers.cookie;\nconst { entSessionId } = msg.req.cookies; \nconst { flowStartTimestamp } = msg.flowInfo;\n\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n}\n\nif (sessionInfo) {\n    const reqSession = sessionInfo.filter(isReqSession);\n    // const reqSession = [ sessionInfo[sessionInfo.length - 1] ];\n    if (reqSession.length > 0) {\n        const reqSessionInfo = reqSession[0];\n        const reqDatabase = reqSessionInfo.database;\n        const reqUserName = reqSessionInfo.userName;\n        const reqb1SessionId = reqSessionInfo.b1SessionId;\n        const reqEntSessionTimeout = reqSessionInfo.entSessionTimeout;\n        const reqLastAccessTimestamp = reqSessionInfo.lastAccessTimestamp;\n        \n        const timeDifferenceMs = flowStartTimestamp - reqLastAccessTimestamp;\n        const clientTimeoutMs = parseInt(reqEntSessionTimeout) * 60 * 1000;\n        \n        if (clientTimeoutMs - timeDifferenceMs > 0) {\n            node.warn(clientTimeoutMs - timeDifferenceMs)\n            msg.serviceLayer.sessionId = reqb1SessionId;\n            const sessionIndex = sessionInfo.findIndex(isReqSession); //sessionInfo.length - 1;\n            sessionInfo[sessionIndex].lastAccessTimestamp = flowStartTimestamp;\n            msg.reqSession = reqSession[0];  //sessionInfo[sessionIndex];\n            \n            msg.payload = reqSession[0]; //sessionInfo[sessionIndex];\n            return [msg, null];\n        } else {\n            msg.statusCode = 401;\n            msg.payload = 'Session expired.'\n            return [null, msg];\n        }\n    }\n}\n\nmsg.statusCode = 401;\nmsg.payload = 'User not authenticated.'\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 140,
        "y": 320,
        "wires": [
            [
                "1ff809da.ca7726",
                "34beae1a.e87a52"
            ],
            [
                "f38a4ddb.4795",
                "13ec55da.c0efaa"
            ]
        ]
    },
    {
        "id": "1e90c75f.1413c9",
        "type": "comment",
        "z": "d5cfaaa7.77a3a8",
        "name": "2. Session Data Check",
        "info": "",
        "x": 140,
        "y": 200,
        "wires": []
    },
    {
        "id": "870a23.a93bd5e",
        "type": "link in",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "6a06ebd8.a338a4",
            "119217e4.cd33d8",
            "95174511.73b948",
            "4bb39e27.d7d5b"
        ],
        "x": 75,
        "y": 260,
        "wires": [
            [
                "fd4e4d4cd0970208"
            ]
        ]
    },
    {
        "id": "f38a4ddb.4795",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 370,
        "y": 320,
        "wires": []
    },
    {
        "id": "1ff809da.ca7726",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 370,
        "y": 200,
        "wires": []
    },
    {
        "id": "f208c43d.03e338",
        "type": "http response",
        "z": "d5cfaaa7.77a3a8",
        "name": "PDN OK",
        "statusCode": "200",
        "headers": {},
        "x": 860,
        "y": 740,
        "wires": []
    },
    {
        "id": "cbb8ea4c.c4e9e8",
        "type": "http response",
        "z": "d5cfaaa7.77a3a8",
        "name": "PDN KO",
        "statusCode": "",
        "headers": {},
        "x": 180,
        "y": 800,
        "wires": []
    },
    {
        "id": "34beae1a.e87a52",
        "type": "link out",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "805bc6e9.58a618",
            "bcead10c.5d4e2"
        ],
        "x": 405,
        "y": 240,
        "wires": []
    },
    {
        "id": "13ec55da.c0efaa",
        "type": "link out",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "c5c60bc5.640148"
        ],
        "x": 335,
        "y": 280,
        "wires": []
    },
    {
        "id": "c5c60bc5.640148",
        "type": "link in",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "13ec55da.c0efaa",
            "f859fd37.4128c",
            "f1ef0e69.e542e"
        ],
        "x": 75,
        "y": 800,
        "wires": [
            [
                "cbb8ea4c.c4e9e8"
            ]
        ]
    },
    {
        "id": "31f137d0.8414a8",
        "type": "comment",
        "z": "d5cfaaa7.77a3a8",
        "name": "3. Build request & Get Flow Data",
        "info": "",
        "x": 170,
        "y": 380,
        "wires": []
    },
    {
        "id": "805bc6e9.58a618",
        "type": "link in",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "34beae1a.e87a52",
            "796c0b1e.bdd4f4",
            "6ec1f9e2.453b58"
        ],
        "x": 75,
        "y": 440,
        "wires": [
            [
                "c0e88426.e0c438"
            ]
        ]
    },
    {
        "id": "72cee787.55cdb8",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "SL Prep",
        "func": "const resource = msg.req.params[0];\nconst { slMethodFields } = msg;\nlet slMethod = `${resource}`;\n\nObject.keys(slMethodFields).forEach((key, index) => {\n    index === 0 ?\n        slMethod = `${slMethod}?${key}=${slMethodFields[key]}` :\n        slMethod = `${slMethod}&${key}=${slMethodFields[key]}`;\n});\n\n// if (resource.includes('Purchase') && !slMethod.includes('count')) {\n//     slMethod = slMethod.includes('?') ?\n//         `${slMethod}&$orderby=DocNum asc` :\n//         `${slMethod}?$orderby=DocNum asc`;\n// }\n\nmsg.serviceLayer.method = slMethod;\nmsg.serviceLayer.sessionId = msg.reqSession.b1SessionId;\nmsg.configOverride = msg.reqSession;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 440,
        "wires": [
            [
                "e99c3e30.53cbc",
                "950ea82d602508d1"
            ]
        ]
    },
    {
        "id": "c787c46a.5db0d8",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 380,
        "wires": []
    },
    {
        "id": "7a490d9e.86a0b4",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 500,
        "wires": []
    },
    {
        "id": "79f9d75.9a75528",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(`Technical error - GET SL params.`);",
        "outputs": 0,
        "noerr": 0,
        "x": 840,
        "y": 460,
        "wires": []
    },
    {
        "id": "e7a1e335.06f88",
        "type": "link out",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "35cae4c2.3c846c"
        ],
        "x": 795,
        "y": 420,
        "wires": []
    },
    {
        "id": "e741df24.ea92a",
        "type": "comment",
        "z": "d5cfaaa7.77a3a8",
        "name": "5. Business Logic (V4 to V2)",
        "info": "",
        "x": 160,
        "y": 680,
        "wires": []
    },
    {
        "id": "f7bf7d04.f528b",
        "type": "link in",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "c98a81ad.e84af",
            "8577c475.41a4d8",
            "89995bf9.09bea8",
            "1de197a9.a72148",
            "fea0c132.6f998"
        ],
        "x": 75,
        "y": 740,
        "wires": [
            [
                "5178f428.6db52c"
            ]
        ]
    },
    {
        "id": "8fbec33e.f113f",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "v2 result translation",
        "func": "const v4Data = msg.payload;\nmsg.headers = {};\nmsg.headers['OData-Version'] = '2.0';\nmsg.headers['Content-Type'] = 'application/json;charset=utf-8';\nmsg.headers['Cache-Control'] = 'no-cache, no-store, must-revalidate';\n\nif (!v4Data.length) {\n    // ex: \"@odata.context\": \"https://hanab1hdev:50000/b1s/v2/$metadata#PurchaseDeliveryNotes\"\n    // this field belongs to v4 version -> adapt to v2\n    delete msg.payload['odata.metadata'];\n    \n    const singleResponseObject = {\n        d: v4Data\n    };\n    msg.payload = singleResponseObject;\n    return msg;\n}\n\nif (msg.req.params[0].includes('$count')) {\n    msg.headers['Content-Type'] = 'text/plain;charset=UTF-8';\n    const count = msg.payload;\n    return msg;\n} else {\n    let v2Data = null;\n    if (v4Data.length === 0) {\n        msg.payload = {\n            d: []\n        }\n    } else {\n        v2Data = {\n            d: {\n                \"__count\": `${v4Data.length}`,\n                results: v4Data\n            }\n        };\n        msg.payload = v2Data;\n    }\n    \n    \n    // msg.headers['OData-Version'] = '2.0';\n    // msg.headers['Content-Type'] = 'application/json;charset=utf-8';\n    // msg.headers['Cache-Control'] = 'no-cache, no-store';\n    // msg.headers['Transfer-Encoding'] = null;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 720,
        "wires": [
            [
                "f208c43d.03e338",
                "bce4d1f4.5c8f2"
            ]
        ]
    },
    {
        "id": "cd19816a.62ed6",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 110,
        "y": 140,
        "wires": []
    },
    {
        "id": "5178f428.6db52c",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "v2 epoch Date translation",
        "func": "const toEpochDate = (crtElem) => {\n    Object.keys(crtElem).forEach(key => {\n        if (key.includes('Date')) {\n            const epochDate = new Date(crtElem[key]).getTime();\n            crtElem[key] = `/Date(${epochDate})/`;\n        }\n    });\n    return crtElem;\n}\n\n// array response\nif (msg.req.params[0].includes('PurchaseDeliveryNotes') && msg.payload.length) {\n    // Transformation\n    node.warn(msg.payload)\n    const v4Data = msg.payload;\n    let v2DateTranslation = v4Data\n        .map(toEpochDate)\n        .map(el => { return {...el, DocumentLines: el.DocumentLines.map(toEpochDate) } });\n    if (msg.nonSLFields && msg.nonSLFields['$select']) {\n       if (msg.nonSLFields['$select'].includes('Invoices')) {\n            v2DateTranslation = v2DateTranslation\n                .map(el => { return {...el, Invoices: el.Invoices.map(toEpochDate) } });\n       }\n    }\n    \n    msg.payload = v2DateTranslation;\n    return [msg, null];\n}\n\nif (msg.payload.length) {\n    const v4Data = msg.payload;\n    let v2DateTranslation = v4Data\n        .map(toEpochDate);\n    msg.payload = v2DateTranslation;\n    return [msg, null];\n}\n\n// single object response\nconst payloadWithEpochDate = toEpochDate(msg.payload);\nif (payloadWithEpochDate.DocumentLines) {\n    payloadWithEpochDate.DocumentLines = payloadWithEpochDate.DocumentLines.map(toEpochDate);\n}\nmsg.payload = payloadWithEpochDate;\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 740,
        "wires": [
            [
                "a38a00d8.01e38"
            ],
            [
                "a38a00d8.01e38"
            ]
        ]
    },
    {
        "id": "e3f58151.2a73f",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "build invoices",
        "func": "const addInvoice = crtElem => {\n    const { DocumentLines } = crtElem;\n    if (DocumentLines) {\n        const invoiceFields = DocumentLines.map(el => {\n            const {\n                U_ENT_EMF_FF_DocEntry_R,\n                U_ENT_EMF_FF_LineNum_R,\n                U_ENT_EMF_FF_DocDate_R\n            } = el;\n            return {\n                ENT_EMF_FF_DocEntry_T: U_ENT_EMF_FF_DocEntry_R,\n                ENT_EMF_FF_LineNum_T: U_ENT_EMF_FF_LineNum_R,\n                ENT_EMF_FF_DocDate_T: U_ENT_EMF_FF_DocDate_R\n            };\n        });\n        \n        const uniqInvoiceFields = Array.from(new Set(invoiceFields.map(JSON.stringify))).map(JSON.parse);\n        crtElem.Invoices = uniqInvoiceFields;\n    }\n    return crtElem;\n}\n\nconst payloadValue = msg.payload;\nconst payloadWithInvoice = payloadValue.map(addInvoice);\nmsg.payload = payloadWithInvoice;\n\nconst { notSLFilterValues } = msg;\nif (notSLFilterValues && notSLFilterValues.length > 0) {\n    notSLFilterValues.forEach(notSlFilter => {\n        const nslCrumbs = notSlFilter.split(' ');\n        const nslColumn = nslCrumbs[0];\n    })\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "af2e5573.826728",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "header fields",
        "func": "// Translation functions\nconst addHeaderFields = (crtElem) => {\n    if (crtElem.DocumentLines) {\n        const yesNoValues = crtElem.DocumentLines.map(el => el.U_ENT_EMFCtrlFF_YesNo_R);\n        crtElem.ENT_EMFCtrlFF_YesNo_T = yesNoValues.includes('N') ? 'N' : 'Y';\n        \n        // const whsCodes = crtElem.DocumentLines.map(el => el.WarehouseCode);\n        // const uniqWhsCodes = [...new Set(whsCodes)];\n        // crtElem.WarehouseCode_T = uniqWhsCodes.length === 1 ? uniqWhsCodes[0] : null;\n        \n        const uniqDocEntries = [...new Set(crtElem.DocumentLines.map(el => el.U_ENT_EMF_FF_DocEntry_T))];\n        crtElem.EditableHeader = uniqDocEntries.length === 1;\n        \n        \n        crtElem.ENT_EMF_FF_LineNum_T = 0;\n        crtElem.ENT_EMF_FF_DocEntry_T = 72;\n        // crtElem.ENT_EMF_FF_DocDate_T = \"/Date(1594771200000)/\";\n    }\n\n    return crtElem;\n}\n\n// Transformation\nconst v4Data = msg.payload;\nconst v2AddedFields = v4Data.map(addHeaderFields);\nmsg.payload = v2AddedFields;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 860,
        "wires": [
            [
                "e3f58151.2a73f"
            ]
        ]
    },
    {
        "id": "3adb34f.df280cc",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "url request check",
        "func": "const isMetadata = msg.req.url.includes(\"metadata\"); // || msg.req.url.includes(\"login\");\nconst isCompaniesList = msg.req.url.includes(\"Companies\");\nconst isTaxId = msg.req.url.includes(\"GetTaxId\");\nconst { params } = msg.req;\n\nif (isMetadata)\n    return [null, msg, null, null, null];\n\nif (params[0].length === 0)\n    return [null, null, msg, null, null];\n    \nif (isCompaniesList) {\n    return [null, null, null, msg, null];\n}\n\nif (isTaxId) {\n    return [null, null, null, null, msg];\n}\n\n\nreturn [msg, null, null, null, null];",
        "outputs": 5,
        "noerr": 0,
        "x": 430,
        "y": 100,
        "wires": [
            [
                "e6e10488.836d68"
            ],
            [
                "de3c7668.3cdfe8"
            ],
            [
                "29b4a125.b2cf8e"
            ],
            [
                "deb07133.97e7"
            ],
            [
                "47880271.14fc8c"
            ]
        ]
    },
    {
        "id": "e99c3e30.53cbc",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 590,
        "y": 500,
        "wires": []
    },
    {
        "id": "de3c7668.3cdfe8",
        "type": "link out",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "a99b7c76.d7d03",
            "65e6c8a5.274f68"
        ],
        "x": 575,
        "y": 80,
        "wires": []
    },
    {
        "id": "29b4a125.b2cf8e",
        "type": "link out",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "6f5cea46.adeed4"
        ],
        "x": 575,
        "y": 120,
        "wires": []
    },
    {
        "id": "bce4d1f4.5c8f2",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 850,
        "y": 700,
        "wires": []
    },
    {
        "id": "c0e88426.e0c438",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "exclude nonSL fields",
        "func": "let slBuiltMethod = '';\nconst resource = msg.req.params[0];\nconst nonSLFields = {};\nconst slMethodFields = {};\nconst { query, url } = msg.req;\nconst fieldsToExclude = [\n    'EditableHeader',\n    'U_ENT_EMF_FF_LineNum_T',\n    'Invoices'\n];\nconst simplePredicates = [ '$top', '$skip', '$count', '$orderby' ];\nconst sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n\n// include DocLines if Invoices needed\nif (resource.includes('PurchaseRequests(') && query ) {\n    // if (query['$select']) {\n    //     msg.req.query['$select'] = query['$select'].concat(',DocumentLines,Supplier,DocNum,DocDueDate,DocumentStatus,DocEntry,RequesterName,DocDate,RequesterDepartment,Comments,DocTotalSys');\n    // }\n    // else{\n    //    msg.req.query['$select'] ='DocumentLines,DocNum,DocDueDate,Supplier,DocumentStatus,DocEntry,RequesterName,DocDate,RequesterDepartment,Comments,DocTotalSys';  \n    // }\n    if (query['$filter']) {\n        query['$filter'] = `${query['$filter']} and DocumentsOwner eq ${reqSession[0].customAttributes.EmpID}`;\n\n    } else {\n        query['$filter'] = `DocumentsOwner eq ${reqSession[0].customAttributes.EmpID}`;\n\n    }\n}\nelse if (resource.includes('PurchaseRequests') && query) {\n    if (query['$select']) {\n        msg.req.query['$select'] = query['$select'].concat(',DocNum,DocDueDate,Supplier,DocumentStatus,DocEntry,RequesterName,DocDate,RequesterDepartment,Comments,DocTotalSys,Project');\n    }\n    else {\n        msg.req.query['$select'] = 'DocNum,DocDueDate,DocumentStatus,DocEntry,RequesterName,Supplier,DocDate,RequesterDepartment,Comments,DocTotalSys,Project';\n    }\n    if (query['$filter']) {\n        query['$filter'] = `${query['$filter']} and DocumentsOwner eq ${reqSession[0].customAttributes.EmpID}`;\n\n    } else {\n        query['$filter'] = `DocumentsOwner eq ${reqSession[0].customAttributes.EmpID}`;\n\n    }\n    // if (query['$orderby']) {\n    //     msg.req.query['$orderby']=`DocDate desc`;\n    // }\n}\nif (resource.includes('Items') && query ) {\n    if (query['$select']) {\n        msg.req.query['$select'] = query['$select'].concat(',ItemCode,ItemName');\n    }\n    else{\n       msg.req.query['$select'] ='ItemCode,ItemName';  \n    }\n}\n\n\nif (resource.includes('BusinessPartners') && query) {\n    // if(query['$filter']) {\n    //     query['$filter'] = `${query['$filter']} and CardType eq 'S'`;\n       \n    // } else {\n    //     query['$filter'] = `CardType eq 'S'`;\n         \n    // }\n    if (query['$select']) {\n        msg.req.query['$select'] = query['$select'].concat(',CardCode,CardName');\n    }\n    else{\n      msg.req.query['$select'] ='CardCode,CardName'; \n    }\n}\n\nconst buildSLObject = (key, value, slObject) => {\n    if (key.includes('select')) {\n        if (slObject[key]) {\n            slObject[key] = `${slObject[key]},${value}`;\n        } else {\n            slObject[key] = `${value}`;\n        }\n    }\n    if (simplePredicates.includes(key)) {\n        slObject[key] = `${value}`;\n    }\n    if (key.includes('filter')) {\n        slObject[key] = `${value}`;\n        msg.serviceLayer.headers = {\n            'B1S-CaseInsensitive': true\n        }\n    }\n}\n\nObject.keys(query).forEach(key => {\n    const keyValue = query[key];\n    // check if query contains non SL fields\n    if (key.includes('select')) {\n        const keyValueCrumbs = keyValue.split(',');\n        keyValueCrumbs.forEach(keyValueCrumb => {\n            if (fieldsToExclude.includes(keyValueCrumb)) {\n                buildSLObject(key, keyValueCrumb, nonSLFields);\n            } else {\n                buildSLObject(key, keyValueCrumb, slMethodFields);\n            }\n        });\n    }\n    if (key.includes('filter')) {\n        buildSLObject(key, keyValue, slMethodFields);\n    }\n    if (simplePredicates.includes(key)) {\n        buildSLObject(key, keyValue, slMethodFields);\n    }\n});\n\nmsg.nonSLFields = nonSLFields;\nmsg.slMethodFields = slMethodFields;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 440,
        "wires": [
            [
                "72cee787.55cdb8",
                "8f70d3e7.f6a21"
            ]
        ]
    },
    {
        "id": "959b6dd3.9870f",
        "type": "comment",
        "z": "d5cfaaa7.77a3a8",
        "name": "4. Add non SL data",
        "info": "",
        "x": 130,
        "y": 540,
        "wires": []
    },
    {
        "id": "35cae4c2.3c846c",
        "type": "link in",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "e7a1e335.06f88"
        ],
        "x": 75,
        "y": 620,
        "wires": [
            [
                "401a29c1.57c7b8"
            ]
        ]
    },
    {
        "id": "401a29c1.57c7b8",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "check nonSL fields",
        "func": "const { nonSLFields } = msg;\nif (Object.keys(nonSLFields).length > 0) {\n    return [msg, null];\n} else {\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 210,
        "y": 620,
        "wires": [
            [
                "ff08338.001a2d",
                "4ca4e287.fc497c"
            ],
            [
                "1de197a9.a72148",
                "cc44d8d9.7b15a8"
            ]
        ]
    },
    {
        "id": "89995bf9.09bea8",
        "type": "link out",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "f7bf7d04.f528b"
        ],
        "x": 575,
        "y": 620,
        "wires": []
    },
    {
        "id": "1de197a9.a72148",
        "type": "link out",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "f7bf7d04.f528b"
        ],
        "x": 355,
        "y": 640,
        "wires": []
    },
    {
        "id": "ff08338.001a2d",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "by resource name",
        "func": "const resource = msg.req.params[0];\nconst { nonSLFields } = msg;\n\nif (resource.includes('PurchaseDeliveryNotes')) {\n    return [msg, null];\n} else {\n    return [null, msg];\n}\n\n// Object.keys(nonSLFields).forEach(field => {\n//     // asta trebuie cumva legat si de numele resursei\n// });\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "68676cf5.847b54"
            ],
            [
                "89995bf9.09bea8"
            ]
        ]
    },
    {
        "id": "68676cf5.847b54",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "add PDN non SL Fields",
        "func": "const { nonSLFields } = msg;\nlet v4Data = msg.payload;\n\nconst addFieldEditableHeader = crtElem => {\n    const uniqDocEntries = [...new Set(crtElem.DocumentLines.map(el => el.U_ENT_EMF_FF_DocEntry_R))];\n    crtElem.EditableHeader = uniqDocEntries.length === 1;\n    return crtElem;\n}\n\nconst addFieldInvoices = crtElem => {\n    const { DocumentLines } = crtElem;\n    const invoiceFields = DocumentLines.map(el => {\n        const {\n            U_ENT_EMF_FF_DocEntry_R,\n            U_ENT_EMF_FF_LineNum_R,\n            U_ENT_EMF_FF_DocNum_R,\n            U_ENT_EMF_FF_DocDate_R\n        } = el;\n        return {\n            U_ENT_EMF_FF_DocEntry_T: U_ENT_EMF_FF_DocEntry_R === 0 ? '' : U_ENT_EMF_FF_DocEntry_R,\n            U_ENT_EMF_FF_LineNum_T: U_ENT_EMF_FF_LineNum_R,\n            U_ENT_EMF_FF_DocDate_T: U_ENT_EMF_FF_DocDate_R,\n            U_ENT_EMF_FF_DocNum_T: U_ENT_EMF_FF_DocNum_R === 0 ? '' : U_ENT_EMF_FF_DocNum_R\n        };\n    });\n    \n    const uniqInvoiceFields = Array.from(new Set(invoiceFields.map(JSON.stringify))).map(JSON.parse);\n    crtElem.Invoices = uniqInvoiceFields;\n    // node.warn('invoices: ')\n    // node.warn(crtElem.Invoices)\n\n    return crtElem;\n}\n\nObject.keys(nonSLFields).forEach(key => {\n   if (key === '$select') {\n       const fieldsCrumbs = nonSLFields[key].split(',');\n       fieldsCrumbs.forEach(field => {\n           if (field === 'EditableHeader') {\n               if (v4Data.length) {\n                v4Data = v4Data.map(addFieldEditableHeader);\n               } else {\n                   v4Data = addFieldEditableHeader(v4Data);\n               }\n                node.warn(v4Data);\n           }\n           if (field === 'Invoices') {\n               if (v4Data.length) {\n                    v4Data = v4Data.map(addFieldInvoices);\n               } else {\n                   v4Data = addFieldInvoices(v4Data);\n               }\n               node.warn(v4Data);\n           }\n       });\n   } \n});\n\nconst v4DataWithFields = v4Data;\nmsg.payload = v4DataWithFields;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 580,
        "wires": [
            [
                "fea0c132.6f998",
                "7bf6a66e.7474c8"
            ]
        ]
    },
    {
        "id": "fea0c132.6f998",
        "type": "link out",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "f7bf7d04.f528b"
        ],
        "x": 835,
        "y": 580,
        "wires": []
    },
    {
        "id": "b3ae744b.1f7728",
        "type": "comment",
        "z": "d5cfaaa7.77a3a8",
        "name": "TODO: creat nod care sa adauge headers",
        "info": "",
        "x": 480,
        "y": 880,
        "wires": []
    },
    {
        "id": "7bf6a66e.7474c8",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 870,
        "y": 620,
        "wires": []
    },
    {
        "id": "a38a00d8.01e38",
        "type": "function",
        "z": "d5cfaaa7.77a3a8",
        "name": "add metadata",
        "func": "const resourceName = msg.req.params[0];\nconst v4Data = msg.payload;\nlet withMetadata = null;\nfunction uuidv4() {\nreturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\nvar r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\nreturn v.toString(16);\n});\n}\nif (v4Data.length) {\n    withMetadata = v4Data.map(el => {\n        const { DocEntry, ItemCode } = el;\n        const resId = uuidv4();\n        // const resId = resourceName.includes('Purchase') ?\n        //     DocEntry :\n        //     resourceName.includes('Items') ?\n        //     ItemCode :\n        //     null;\n        const resUriId = resourceName.includes('YESNO') ?\n            `http://localhost:1881/api/odatav2/${resourceName}('${resId}')` :\n            `http://localhost:1881/api/odatav2/${resourceName}(${resId})`;\n        const documentType = resourceName.includes('Purchase') ?\n            'Document' :\n            resourceName.includes('YESNO') ?\n            resourceName :\n            resourceName.split('(')[0].slice(0, -1);\n        el['__metadata'] = {\n            type: `SAPB1.${documentType}`,\n            id: resUriId,\n            uri: resUriId\n        }\n        \n        return el;\n    });\n    \n    msg.payload = withMetadata;\n    return [msg, null];\n} else {\n    if (Object.keys(v4Data).length === 0) {\n        if (msg.req.originalUrl.includes('count')) {\n            return [null, msg];\n        } else {\n            msg.payload = [];\n            return [msg, null];\n        }\n    }\n    const { DocEntry, CardCode, WarehouseCode, Code } = v4Data;\n    const resId = resourceName.includes('Purchase') ?\n        DocEntry :\n        resourceName.includes('Partners') ?\n        CardCode :\n        resourceName.includes('YESNO') ?\n        Code :\n        WarehouseCode;\n    const resName = resourceName.split('(')[0];\n    const documentType = resourceName.includes('Purchase') ?\n        'Document' :\n        resourceName.includes('YESNO') ?\n        resourceName :\n        resourceName.split('(')[0].slice(0, -1);\n    const resUriId = `http://localhost:1881/api/odatav2/${resName}(${resId})`;\n    v4Data['__metadata'] = {\n        type: `SAPB1.${documentType}`,\n        id: resUriId,\n        uri: resUriId\n    };\n    withMetadata = v4Data;\n    msg.payload = withMetadata;\n    \n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 740,
        "wires": [
            [
                "8fbec33e.f113f"
            ],
            [
                "8fbec33e.f113f"
            ]
        ]
    },
    {
        "id": "cc44d8d9.7b15a8",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 510,
        "y": 680,
        "wires": []
    },
    {
        "id": "4ca4e287.fc497c",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 390,
        "y": 560,
        "wires": []
    },
    {
        "id": "deb07133.97e7",
        "type": "link out",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "links": [
            "3f46b1a3.62765e",
            "9ac32700.744778",
            "62ee99bc.4f1bb8"
        ],
        "x": 575,
        "y": 160,
        "wires": []
    },
    {
        "id": "47880271.14fc8c",
        "type": "link out",
        "z": "d5cfaaa7.77a3a8",
        "name": "OUT_TAX",
        "links": [
            "78206dd2.8f7f84"
        ],
        "x": 575,
        "y": 200,
        "wires": []
    },
    {
        "id": "b72a306d.f1701",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 930,
        "y": 240,
        "wires": []
    },
    {
        "id": "8f70d3e7.f6a21",
        "type": "debug",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 390,
        "y": 400,
        "wires": []
    },
    {
        "id": "fd5c00c3.795a6",
        "type": "b1-service-layer-request",
        "z": "d5cfaaa7.77a3a8",
        "server": "596459b.d78c4a8",
        "name": "SL - Get Resource Data",
        "serviceLayerMethod": "",
        "httpMethod": "GET",
        "slResponseObject": "flowData",
        "x": 630,
        "y": 420,
        "wires": [
            [
                "e7a1e335.06f88",
                "c787c46a.5db0d8"
            ],
            [
                "79f9d75.9a75528",
                "7a490d9e.86a0b4"
            ]
        ]
    },
    {
        "id": "fd4e4d4cd0970208",
        "type": "subflow:322da763fc08e6b1",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "env": [],
        "x": 210,
        "y": 220,
        "wires": [
            [
                "34beae1a.e87a52",
                "1ff809da.ca7726"
            ],
            [
                "f38a4ddb.4795",
                "13ec55da.c0efaa"
            ]
        ]
    },
    {
        "id": "950ea82d602508d1",
        "type": "subflow:1e460b6845924ff6",
        "z": "d5cfaaa7.77a3a8",
        "name": "",
        "x": 530,
        "y": 360,
        "wires": [
            [
                "fd5c00c3.795a6"
            ]
        ]
    },
    {
        "id": "ea9f7aab.bb5058",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 490,
        "y": 60,
        "wires": []
    },
    {
        "id": "fae1cdb8.7a176",
        "type": "comment",
        "z": "2a9473e4.f1606c",
        "name": "9. Error Handling",
        "info": "",
        "x": 120,
        "y": 1080,
        "wires": []
    },
    {
        "id": "bc658958.7a0708",
        "type": "catch",
        "z": "2a9473e4.f1606c",
        "name": "catch errors",
        "scope": null,
        "uncaught": false,
        "x": 130,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "d341ff2b.b7ef4",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "session check",
        "func": "const sessionInfo = global.get('sessionInfo');\n// const entsession = msg.req.headers.cookie;\nconst { entSessionId } = msg.req.cookies; \nconst { flowStartTimestamp } = msg.flowInfo;\n\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n}\n\nif (sessionInfo) {\n    const reqSession = sessionInfo.filter(isReqSession);\n    // const reqSession = [ sessionInfo[sessionInfo.length - 1] ];\n    node.warn(reqSession)\n    if (reqSession.length > 0) {\n        const reqSessionInfo = reqSession[0];\n        const reqDatabase = reqSessionInfo.database;\n        const reqUserName = reqSessionInfo.userName;\n        const reqb1SessionId = reqSessionInfo.b1SessionId;\n        const reqEntSessionTimeout = reqSessionInfo.entSessionTimeout;\n        const reqLastAccessTimestamp = reqSessionInfo.lastAccessTimestamp;\n        \n        const timeDifferenceMs = flowStartTimestamp - reqLastAccessTimestamp;\n        const clientTimeoutMs = parseInt(reqEntSessionTimeout) * 60 * 1000;\n        \n        if (clientTimeoutMs - timeDifferenceMs > 0) {\n            node.warn(clientTimeoutMs - timeDifferenceMs)\n            msg.serviceLayer.sessionId = reqb1SessionId;\n            const sessionIndex = sessionInfo.findIndex(isReqSession);  //sessionInfo.length - 1;\n            sessionInfo[sessionIndex].lastAccessTimestamp = flowStartTimestamp;\n            msg.reqSession = sessionInfo[sessionIndex];\n            \n            msg.payload = sessionInfo[sessionIndex];\n            return [msg, null];\n        } else {\n            msg.statusCode = 401;\n            msg.payload = 'Session expired.'\n            return [null, msg];\n        }\n    }\n}\n\nmsg.statusCode = 401;\nmsg.payload = 'User not authenticated.'\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 200,
        "y": 260,
        "wires": [
            [
                "ef887c81.c6b03",
                "1b9dcfa9.065d1"
            ],
            [
                "7a1d2f9.1e497d",
                "3cf0f00f.9327"
            ]
        ]
    },
    {
        "id": "a8f2e590.0455c8",
        "type": "comment",
        "z": "2a9473e4.f1606c",
        "name": "2. Session Data Check",
        "info": "",
        "x": 140,
        "y": 200,
        "wires": []
    },
    {
        "id": "7a1d2f9.1e497d",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 370,
        "y": 320,
        "wires": []
    },
    {
        "id": "ef887c81.c6b03",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 370,
        "y": 200,
        "wires": []
    },
    {
        "id": "20052991.39e256",
        "type": "link in",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "66d08773.4318f8",
            "121255b0.b3937a"
        ],
        "x": 75,
        "y": 260,
        "wires": [
            [
                "d341ff2b.b7ef4"
            ]
        ]
    },
    {
        "id": "1b9dcfa9.065d1",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "ca03ede0.caf2c",
            "6379fbfc.c7b1a4"
        ],
        "x": 335,
        "y": 240,
        "wires": []
    },
    {
        "id": "3cf0f00f.9327",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "ed93e0fa.45861",
            "10e6b765.bbe6a9"
        ],
        "x": 335,
        "y": 280,
        "wires": []
    },
    {
        "id": "86e44343.8bfa7",
        "type": "comment",
        "z": "2a9473e4.f1606c",
        "name": "1. Input  & Validation",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "2c831b2e.036774",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'PATCH-SaveChanges';\n\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 100,
        "wires": [
            [
                "daf7153a.c9a198"
            ]
        ]
    },
    {
        "id": "6b266183.17b34",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.payload;\n\nmsg.statusCode = 401;\nnode.warn(msg)\nthrow new Error(`User not authenticated.`);",
        "outputs": 0,
        "noerr": 0,
        "x": 880,
        "y": 120,
        "wires": []
    },
    {
        "id": "daf7153a.c9a198",
        "type": "subflow:4217f61f.7e7488",
        "z": "2a9473e4.f1606c",
        "name": "",
        "env": [],
        "x": 530,
        "y": 100,
        "wires": [
            [
                "5471f7cb.ed4558"
            ]
        ]
    },
    {
        "id": "5471f7cb.ed4558",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "req params check",
        "func": "const { _body } = msg.req;\nconst { cookies } = msg.req;\n\nif (!_body) {\n    msg.payload =  'No payload was sent';\n    return [null, msg];\n}\nif (!cookies || !cookies.entSessionId) {\n    msg.payload =  'User not authenticated';\n    return [null, msg];\n}\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "x": 710,
        "y": 100,
        "wires": [
            [
                "66d08773.4318f8"
            ],
            [
                "6b266183.17b34"
            ]
        ]
    },
    {
        "id": "2c872544.d67a9a",
        "type": "http response",
        "z": "2a9473e4.f1606c",
        "name": "POST Test",
        "statusCode": "200",
        "headers": {},
        "x": 430,
        "y": 980,
        "wires": []
    },
    {
        "id": "16ceaedd.59b191",
        "type": "comment",
        "z": "2a9473e4.f1606c",
        "name": "3. Compute Data",
        "info": "",
        "x": 120,
        "y": 380,
        "wires": []
    },
    {
        "id": "ca03ede0.caf2c",
        "type": "link in",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "1b9dcfa9.065d1",
            "8711e58a.a01308"
        ],
        "x": 75,
        "y": 440,
        "wires": [
            [
                "3e8644ce.97112c"
            ]
        ]
    },
    {
        "id": "66d08773.4318f8",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "20052991.39e256",
            "e30fe6c5.d57788"
        ],
        "x": 835,
        "y": 80,
        "wires": []
    },
    {
        "id": "f65aa30a.257e1",
        "type": "http response",
        "z": "2a9473e4.f1606c",
        "name": "POST KO Test",
        "statusCode": "401",
        "headers": {},
        "x": 440,
        "y": 1020,
        "wires": []
    },
    {
        "id": "ed93e0fa.45861",
        "type": "link in",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "3cf0f00f.9327",
            "4c2a219d.ddfd7",
            "1634901c.6e16c",
            "9aa0cfc0.13df2",
            "f6c4303c.4c8b4",
            "206bf97e.dde546",
            "47848447.ede5bc",
            "6ed44035.53dff"
        ],
        "x": 275,
        "y": 1040,
        "wires": [
            [
                "f65aa30a.257e1"
            ]
        ]
    },
    {
        "id": "aff0d968.c33da8",
        "type": "http in",
        "z": "2a9473e4.f1606c",
        "name": "PUT - Save Changes",
        "url": "/api/odatav2/*",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "2c831b2e.036774",
                "ea9f7aab.bb5058"
            ]
        ]
    },
    {
        "id": "48287a15.4e9cb4",
        "type": "link in",
        "z": "2a9473e4.f1606c",
        "name": "PATCH entry point",
        "links": [
            "7e25b87f.a872c8",
            "6ceab7d5.c1b878",
            "1088fafa.b4f665"
        ],
        "x": 235,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "babb8abb.0bf8e8",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 940,
        "wires": []
    },
    {
        "id": "c89ff274.50578",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "build patch data",
        "func": "const { DocumentLines } = msg.req.body;\nconst resourceName = msg.req.params[0];\nconst completeObject = msg.payload;\nconst bodyDocumentLines = DocumentLines.map(el => {\n    if (el.Price) {\n        el.Price = parseFloat(el.Price);\n    }\n    return el;\n});\nconst bodyDLLineNums = bodyDocumentLines.map(el => el.LineNum);\n\n// integrate req body data\nconst patchedDocumentLines = completeObject.DocumentLines.map(docLine => {\n    if (!bodyDLLineNums.includes(docLine.LineNum)) {\n        return docLine;\n    } else {\n        const docLineInBody = bodyDocumentLines.filter(el => el.LineNum === docLine.LineNum)[0];\n        Object.keys(docLineInBody).forEach(dlbKey => {\n            if (docLineInBody[dlbKey]) {\n                docLine[dlbKey] = docLineInBody[dlbKey];\n            }\n        });\n        node.warn(docLineInBody)\n        node.warn(docLine)\n\n        const newSc1 = docLineInBody.U_PONE_SC1 === 0 ? 0 :\n            parseFloat(docLineInBody.U_PONE_SC1) || parseFloat(docLine.U_PONE_SC1) || 0;\n        const newSc2 = docLineInBody.U_PONE_SC2 === 0 ? 0 :\n            parseFloat(docLineInBody.U_PONE_SC2) || parseFloat(docLine.U_PONE_SC2) || 0;\n        const newSc3 = docLineInBody.U_PONE_SC3 === 0 ? 0 :\n            parseFloat(docLineInBody.U_PONE_SC3) || parseFloat(docLine.U_PONE_SC3) || 0;\n        const newStrSc = docLineInBody.U_PONE_STRSC === 0 ? 0 :\n            parseFloat(docLineInBody.U_PONE_STRSC) || parseFloat(docLine.U_PONE_STRSC) || 0;\n        // const newDiscountPercent = (1 -  (1 - newSc1) * (1 - newSc2) * (1 - newSc3) * (1 + newStrSc)).toFixed(4);\n        \n        const newDiscountPercent = ((1 -  (1 - newSc1/100) * (1 - newSc2/100) * (1 - newSc3/100) * (1 - newStrSc/100)) * 100).toFixed(2);\n        \n        docLine.DiscountPercent = newDiscountPercent;\n        return docLine;\n    }\n});\n\ncompleteObject.DocumentLines = patchedDocumentLines;\nnode.warn(patchedDocumentLines.map(el => el.U_ENT_EMF_FF_DocNum_R))\nmsg.payload = completeObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 440,
        "wires": [
            [
                "28ae04bc.2ce43c",
                "c474de37.7bb49"
            ]
        ]
    },
    {
        "id": "bb91a593.b03748",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 480,
        "wires": []
    },
    {
        "id": "4c2a219d.ddfd7",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "ed93e0fa.45861",
            "10e6b765.bbe6a9"
        ],
        "x": 535,
        "y": 460,
        "wires": []
    },
    {
        "id": "28ae04bc.2ce43c",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "comp header fields",
        "func": "const nonSLFields = [\n    'U_ENT_EMFCtrlFF_YesNo_T',\n    'U_ENT_EMF_FF_DocDate_T',\n    'U_ENT_EMF_FF_DocNum_T',\n    'U_ENT_EMF_FF_DocEntry_T',\n    'U_ENT_EMF_Warehouse_T',\n    'U_ENT_EMF_FF_LineNum_T',\n];\nlet v4Data = msg.payload;\nconst discounts = v4Data.DocumentLines.map(el => { return { LineNum: el.LineNum, DiscountPercent: el.DiscountPercent }; });\n\nconst addFieldENT_EMFCtrlFF_YesNo_T = crtElem => {\n    let stringResult = '';\n    const yesNoValues = crtElem.DocumentLines.map(el => el.U_ENT_EMFCtrlFF_YesNo_R);\n    // node.warn(yesNoValues)\n    // yesNoValues.forEach(el => stringResult === '' ? stringResult += `${el}` : stringResult += `, ${el}`);\n    crtElem.U_ENT_EMFCtrlFF_YesNo_T = yesNoValues.includes('N') ? 'N' : 'Y';\n    return crtElem;\n}\n\nconst addFieldENT_EMFCtrlFF_DocDate_T = crtElem => {\n    let stringResult = '';\n    const datesValues = crtElem.DocumentLines.map(el => el.U_ENT_EMFCtrlFF_DocDate_R);\n    datesValues.forEach(el => stringResult === '' ? stringResult += `${el}` : stringResult += `, ${el}`);\n    crtElem.U_ENT_EMFCtrlFF_DocDate_T = stringResult;\n    return crtElem;\n}\n\nconst addFieldENT_EMF_FF_DocEntry_T = crtElem => {\n    let stringResult = '';\n    const docEntryT = [ ...new Set(crtElem.DocumentLines\n        .map(el => el.U_ENT_EMF_FF_DocEntry_R)\n        .filter(el => el !== null)) ];\n    docEntryT.forEach(el => stringResult === '' ? stringResult += `${el}` : stringResult += `, ${el}`);\n    crtElem.U_ENT_EMF_FF_DocEntry_T = stringResult;\n    return crtElem;\n}\n\nconst addFieldENT_EMF_FF_LineNum_T = crtElem => {\n    crtElem.U_ENT_EMF_FF_LineNum_T = crtElem.DocumentLines\n        .map(el => el.U_ENT_EMF_FF_LineNum_R)\n        .filter(el => el !== null);\n    return crtElem;\n}\n\nconst addFieldENT_EMF_FF_DocNum_T = crtElem => {\n    let stringResult = '';\n    const docEntryT = [ ...new Set(crtElem.DocumentLines\n        .map(el => el.U_ENT_EMF_FF_DocNum_R)\n        .filter(el => el !== null)) ];\n    if (docEntryT.length === 1 && !docEntryT[0]) return crtElem;\n    docEntryT.forEach(el => stringResult === '' ? stringResult += `${el}` : stringResult += `, ${el}`);\n    node.warn(docEntryT)\n    // node.warn('??????????????############')\n    node.warn(stringResult)\n    // node.warn('??????????????############')\n    crtElem.U_ENT_EMF_FF_DocNum_T = stringResult;\n    return crtElem;\n}\n\nconst msgDocLines = msg.req.body;\nnonSLFields.forEach(field => {\n    node.warn(field)\n    if (field === 'U_ENT_EMFCtrlFF_YesNo_T') {\n      v4Data = addFieldENT_EMFCtrlFF_YesNo_T(msgDocLines); // v4Data.map(addFieldENT_EMFCtrlFF_YesNo_T);\n    }\n    if (field === 'U_ENT_EMFCtrlFF_DocDate_T') {\n      v4Data = addFieldENT_EMFCtrlFF_DocDate_T(msgDocLines) // v4Data.map(addFieldENT_EMFCtrlFF_DocDate_T);\n    }\n    if (field === 'U_ENT_EMF_FF_DocEntry_T') {\n      v4Data = addFieldENT_EMF_FF_DocEntry_T(msgDocLines); // v4Data.map(addFieldENT_EMF_FF_DocEntry_T);\n    }\n    if (field === 'U_ENT_EMF_FF_DocNum_T') {\n        v4Data = addFieldENT_EMF_FF_DocNum_T(msgDocLines);\n    }\n});\n\nconst v4DataWithFields = v4Data;\n\n// add DocumentReferences\nif (v4DataWithFields.U_ENT_EMF_FF_DocNum_T !== '0') {\n    v4DataWithFields.DocumentReferences = [];\n    const docEntries = v4DataWithFields.U_ENT_EMF_FF_DocEntry_T.split(',');\n    docEntries.forEach(headerDocEntry => {\n        const today = new Date();\n        const todayDay = today.getDate();\n        const todayMonth = today.getMonth() + 1;\n        const todayYear = today.getFullYear();\n    \n        const newDocRef = {\n            RefDocEntr: parseInt(headerDocEntry),\n            RefObjType: 'rot_PurchaseInvoice',\n            Remark: `associato da utente <id_utente> in data ${todayYear}-${todayMonth}-${todayDay}`\n        }\n        \n        v4DataWithFields.DocumentReferences.push(newDocRef);\n    });\n}\n\nv4DataWithFields.DocumentLines.map(el => el.DiscountPercent = discounts.filter(d => d.LineNum === el.LineNum)[0].DiscountPercent);\n\nmsg.payload = v4DataWithFields;\nmsg.serviceLayer.body = v4DataWithFields;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 440,
        "wires": [
            [
                "bb91a593.b03748",
                "f1e3f8bf.e29118"
            ]
        ]
    },
    {
        "id": "27ae9687.2d553a",
        "type": "comment",
        "z": "2a9473e4.f1606c",
        "name": "4. Business Logic //TODO",
        "info": "",
        "x": 150,
        "y": 940,
        "wires": []
    },
    {
        "id": "786ceda.1197c14",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "update case",
        "func": "const { body } = msg.req;\nif (body.values) {\n    // msg.payload = body;\n    return [msg, null]; // header update\n} else {\n    return [null, msg]; // details update\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 590,
        "y": 420,
        "wires": [
            [
                "5cab6248.a8261c",
                "44ddd620.7fc468"
            ],
            [
                "c89ff274.50578"
            ]
        ]
    },
    {
        "id": "a98f5bc5.b114b8",
        "type": "link in",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "f1e3f8bf.e29118",
            "23fd3612.ba708a",
            "4498349b.0ed87c"
        ],
        "x": 75,
        "y": 1000,
        "wires": [
            [
                "4e300bbd395966ea"
            ]
        ]
    },
    {
        "id": "f1e3f8bf.e29118",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "a98f5bc5.b114b8"
        ],
        "x": 1095,
        "y": 440,
        "wires": []
    },
    {
        "id": "3e8644ce.97112c",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "get complete data",
        "func": "const { DocEntry, values } = msg.req.body;\nconst resDocEntry = values ? values[0].DocEntry : DocEntry;\nconst resourceName = msg.req.params[0];\n\nmsg.serviceLayer.method = `${resourceName}(${resDocEntry})`;\nmsg.serviceLayer.sessionId = msg.reqSession.b1SessionId;\nmsg.configOverride = msg.reqSession;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 440,
        "wires": [
            [
                "5b5400db.1fa48",
                "30b2ec5611750843"
            ]
        ]
    },
    {
        "id": "159451b6.cd809e",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "build patch data",
        "func": "const resourceName = msg.req.params[0];\nconst completeSLObject = msg.originalPDN;\nconst bodyObject = msg.req.body.values[0];\n\nconst nonSLFields = [\n    'EditableHeader',\n    'Invoices'\n];\n\n// node.warn(bodyObject)\nif (bodyObject.U_ENT_EMFCtrlFF_YesNo_T) {\n    const lineNums = completeSLObject.DocumentLines.map(el => {\n        return {\n            LineNum: el.LineNum,\n            U_ENT_EMFCtrlFF_YesNo_R: bodyObject.U_ENT_EMFCtrlFF_YesNo_T\n        };\n    });\n    // node.warn(lineNums)\n    bodyObject.DocumentLines = lineNums;\n}\n\nif (bodyObject.Invoices) {\n    // node.warn('??????????????????????????????????')\n    const invoice = bodyObject.Invoices[0];\n    const { U_ENT_EMF_FF_DocEntry_T, U_ENT_EMF_FF_DocNum_T } = invoice;\n    // node.warn(U_ENT_EMF_FF_DocEntry_T)\n    // node.warn(U_ENT_EMF_FF_DocNum_T)\n    // node.warn(invoice)\n    // node.warn('###')\n    // if (U_ENT_EMF_FF_DocEntry_T || U_ENT_EMF_FF_DocNum_T) {\n        const lineNums = bodyObject.DocumentLines.map(el => {\n            return {\n                LineNum: el.LineNum,\n                U_ENT_EMFCtrlFF_YesNo_R: el.U_ENT_EMFCtrlFF_YesNo_R, // bodyObject.DocumentLines.filter(boEl => boEl.LineNum === el.LineNum)[0].U_ENT_EMFCtrlFF_YesNo_R,\n                U_ENT_EMF_FF_DocEntry_R: U_ENT_EMF_FF_DocEntry_T,\n                U_ENT_EMF_FF_DocNum_R: U_ENT_EMF_FF_DocNum_T\n            };\n        });\n        bodyObject.DocumentLines = lineNums;\n        // node.warn(lineNums)\n        bodyObject.U_ENT_EMF_FF_DocNum_T = U_ENT_EMF_FF_DocNum_T;\n        bodyObject.U_ENT_EMF_FF_DocEntry_T = U_ENT_EMF_FF_DocEntry_T;\n        bodyObject.DocumentReferences = U_ENT_EMF_FF_DocEntry_T ?\n        [\n            {\n                RefDocEntr: parseInt(U_ENT_EMF_FF_DocEntry_T),\n                RefObjType: \"rot_PurchaseInvoice\",\n                Remark: \"associato da utente <id_utente> in data 2020-10-28\"\n            }\n        ] : [];\n    // }\n    bodyObject.U_ENT_EMF_FF_Assoc_YesNo_T = U_ENT_EMF_FF_DocEntry_T ? 'Y' : 'N';\n}\n\nnonSLFields.forEach(field => {\n    delete bodyObject[field];\n});\n\nmsg.serviceLayer.body = bodyObject;\nmsg.serviceLayer.method = `PurchaseDeliveryNotes(${bodyObject.DocEntry})`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 860,
        "wires": [
            [
                "23fd3612.ba708a",
                "837fc709.7dcd18"
            ]
        ]
    },
    {
        "id": "23fd3612.ba708a",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "a98f5bc5.b114b8"
        ],
        "x": 335,
        "y": 860,
        "wires": []
    },
    {
        "id": "5b5400db.1fa48",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 370,
        "y": 400,
        "wires": []
    },
    {
        "id": "5cab6248.a8261c",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "837fc709.7dcd18",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 370,
        "y": 820,
        "wires": []
    },
    {
        "id": "c474de37.7bb49",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 480,
        "wires": []
    },
    {
        "id": "efaac744.97fb18",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "PI association",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "44ddd620.7fc468",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "PI override?",
        "func": "const PDN = msg.payload;\nconst reqData = msg.req.body.values[0];\nconst PIToBeAssoc = reqData.Invoices[0];\nconst pdnDocEntry = PDN.DocEntry;\nconst crtPIDocEntry = PDN.U_ENT_EMF_FF_DocEntry_T;\nmsg.originalPDN = PDN;\n\nif (PDN.U_ENT_EMF_FF_DocEntry_T === PIToBeAssoc.U_ENT_EMF_FF_DocEntry_T) {\n    return [null, msg];\n} else {\n    msg.overridePI = {\n        pdnDocEntry,\n        PIToBeAssoc,\n        crtPIDocEntry\n    }\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 750,
        "y": 380,
        "wires": [
            [
                "6d6c4c43.c90c64"
            ],
            [
                "1ebe9472.45e32c"
            ]
        ]
    },
    {
        "id": "62d10193.e9b9c",
        "type": "link in",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "1ebe9472.45e32c",
            "b8223e08.42825",
            "c054c57e.cb6368",
            "4e8148ec.a3bde8"
        ],
        "x": 75,
        "y": 860,
        "wires": [
            [
                "159451b6.cd809e"
            ]
        ]
    },
    {
        "id": "1ebe9472.45e32c",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "62d10193.e9b9c"
        ],
        "x": 855,
        "y": 400,
        "wires": []
    },
    {
        "id": "58cc1849.ee9b18",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "sql - already assoc doc",
        "func": "// aici vrei sa vezi daca documentul deja asociat (in caz ca exista unul)\n// mai este asociat pe altundeva, iar daca NU -> schimbi flagul in N\n\nconst { pdnDocEntry, crtPIDocEntry } = msg.overridePI;\nmsg.flowInfo = {};\nmsg.flowInfo.sql = \n`SELECT COUNT(*)\nAS NR\nFROM PDN1\nWHERE \"U_ENT_EMF_FF_DocEntry_R\" = ${crtPIDocEntry}\nAND \"DocEntry\" <> ${pdnDocEntry};`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 620,
        "wires": [
            [
                "fbbada56.d67868"
            ]
        ]
    },
    {
        "id": "9aa0cfc0.13df2",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "ed93e0fa.45861",
            "10e6b765.bbe6a9"
        ],
        "x": 675,
        "y": 640,
        "wires": []
    },
    {
        "id": "651cedc4.aa39d4",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 560,
        "wires": []
    },
    {
        "id": "29ebbbad.85e064",
        "type": "comment",
        "z": "2a9473e4.f1606c",
        "name": "3.1 Doc Association Logic",
        "info": "",
        "x": 150,
        "y": 540,
        "wires": []
    },
    {
        "id": "6d6c4c43.c90c64",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "9b36abbf.c7c568"
        ],
        "x": 855,
        "y": 360,
        "wires": []
    },
    {
        "id": "9b36abbf.c7c568",
        "type": "link in",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "6d6c4c43.c90c64",
            "942412b2.3422b"
        ],
        "x": 75,
        "y": 620,
        "wires": [
            [
                "58cc1849.ee9b18"
            ]
        ]
    },
    {
        "id": "fbbada56.d67868",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "hana config creds",
        "func": "msg.slConfigOverride = msg.configOverride;\nmsg.configOverride = {\n    database: msg.slConfigOverride.database\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 620,
        "wires": [
            [
                "99858e69e378dabb"
            ]
        ]
    },
    {
        "id": "c23c6925.3e6448",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "SL config creds",
        "func": "msg.configOverride = msg.slConfigOverride;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 600,
        "wires": [
            [
                "651cedc4.aa39d4",
                "941e4b5b.9dab68"
            ]
        ]
    },
    {
        "id": "941e4b5b.9dab68",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": " PI deAssoc?",
        "func": "const PIExists = parseInt(msg.payload[0].NR) !== 0;\nconst { crtPIDocEntry } = msg.overridePI;\nif (PIExists) {\n    return [null, msg];\n} else {\n    if (crtPIDocEntry) {\n        return [msg, null];\n    } else {\n        return [null, msg];\n    }\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "x": 930,
        "y": 600,
        "wires": [
            [
                "43cee62c.960fd8",
                "3da3a2c.3ea5b5e"
            ],
            [
                "232473ea.c6464c",
                "97b4dea8.dccb9"
            ]
        ]
    },
    {
        "id": "43cee62c.960fd8",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "74f25e28.bd04c"
        ],
        "x": 1035,
        "y": 580,
        "wires": []
    },
    {
        "id": "232473ea.c6464c",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "a93eed79.15282"
        ],
        "x": 1035,
        "y": 620,
        "wires": []
    },
    {
        "id": "74f25e28.bd04c",
        "type": "link in",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "43cee62c.960fd8"
        ],
        "x": 75,
        "y": 760,
        "wires": [
            [
                "29410efe.04d082"
            ]
        ]
    },
    {
        "id": "29410efe.04d082",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "build deAssoc body",
        "func": "const { crtPIDocEntry } = msg.overridePI;\n\nmsg.serviceLayer.method = `PurchaseInvoices(${crtPIDocEntry})`;\nmsg.serviceLayer.body = {\n    U_ENT_EMF_FF_Assoc_YesNo_T: 'N'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 760,
        "wires": [
            [
                "ad43ea6a.677e48",
                "90f482b23b74fda6"
            ]
        ]
    },
    {
        "id": "f6c4303c.4c8b4",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "ed93e0fa.45861",
            "10e6b765.bbe6a9"
        ],
        "x": 555,
        "y": 780,
        "wires": []
    },
    {
        "id": "5205665.7c01798",
        "type": "function",
        "z": "2a9473e4.f1606c",
        "name": "build Assoc body",
        "func": "const { PIToBeAssoc: { U_ENT_EMF_FF_DocEntry_T } } = msg.overridePI;\n\nif (U_ENT_EMF_FF_DocEntry_T) {\n    msg.serviceLayer.method = `PurchaseInvoices(${U_ENT_EMF_FF_DocEntry_T})`;\n    msg.serviceLayer.body = {\n        U_ENT_EMF_FF_Assoc_YesNo_T: 'Y'\n    }\n    return [msg, null];\n} else {\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 630,
        "y": 740,
        "wires": [
            [
                "d62fcba4.cf6d78",
                "ecc3f1eba07835eb"
            ],
            [
                "c054c57e.cb6368"
            ]
        ]
    },
    {
        "id": "206bf97e.dde546",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "ed93e0fa.45861",
            "10e6b765.bbe6a9"
        ],
        "x": 975,
        "y": 740,
        "wires": []
    },
    {
        "id": "b8223e08.42825",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "62d10193.e9b9c"
        ],
        "x": 975,
        "y": 700,
        "wires": []
    },
    {
        "id": "ad43ea6a.677e48",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 270,
        "y": 720,
        "wires": []
    },
    {
        "id": "a93eed79.15282",
        "type": "link in",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "232473ea.c6464c"
        ],
        "x": 495,
        "y": 720,
        "wires": [
            [
                "5205665.7c01798"
            ]
        ]
    },
    {
        "id": "d62fcba4.cf6d78",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 680,
        "wires": []
    },
    {
        "id": "c054c57e.cb6368",
        "type": "link out",
        "z": "2a9473e4.f1606c",
        "name": "",
        "links": [
            "62d10193.e9b9c"
        ],
        "x": 755,
        "y": 760,
        "wires": []
    },
    {
        "id": "3da3a2c.3ea5b5e",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 540,
        "wires": []
    },
    {
        "id": "97b4dea8.dccb9",
        "type": "debug",
        "z": "2a9473e4.f1606c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1070,
        "y": 660,
        "wires": []
    },
    {
        "id": "97f15fca.d175e",
        "type": "b1-service-layer-request",
        "z": "2a9473e4.f1606c",
        "server": "596459b.d78c4a8",
        "name": "SL - GET Data",
        "serviceLayerMethod": "",
        "httpMethod": "GET",
        "slResponseObject": "flowData",
        "x": 420,
        "y": 440,
        "wires": [
            [
                "786ceda.1197c14"
            ],
            [
                "4c2a219d.ddfd7"
            ]
        ]
    },
    {
        "id": "723fb670.88a0a8",
        "type": "b1-service-layer-request",
        "z": "2a9473e4.f1606c",
        "server": "596459b.d78c4a8",
        "name": "SL - PATCH DeAssoc",
        "serviceLayerMethod": "",
        "httpMethod": "PATCH",
        "slResponseObject": "flowData",
        "x": 840,
        "y": 720,
        "wires": [
            [
                "b8223e08.42825"
            ],
            [
                "206bf97e.dde546"
            ]
        ]
    },
    {
        "id": "505a07d5.0db6f8",
        "type": "b1-service-layer-request",
        "z": "2a9473e4.f1606c",
        "server": "596459b.d78c4a8",
        "name": "SL - PATCH DeAssoc",
        "serviceLayerMethod": "",
        "httpMethod": "PATCH",
        "slResponseObject": "flowData",
        "x": 420,
        "y": 760,
        "wires": [
            [
                "5205665.7c01798"
            ],
            [
                "f6c4303c.4c8b4"
            ]
        ]
    },
    {
        "id": "e64aa84b.964c98",
        "type": "HanaClient-request",
        "z": "2a9473e4.f1606c",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 590,
        "y": 620,
        "wires": [
            [
                "c23c6925.3e6448"
            ],
            [
                "9aa0cfc0.13df2"
            ]
        ]
    },
    {
        "id": "5216f65f.cf49b8",
        "type": "b1-service-layer-request",
        "z": "2a9473e4.f1606c",
        "server": "596459b.d78c4a8",
        "name": "SL - PATCH Data",
        "serviceLayerMethod": "",
        "httpMethod": "PATCH",
        "slResponseObject": "flowData",
        "x": 210,
        "y": 1000,
        "wires": [
            [
                "2c872544.d67a9a",
                "babb8abb.0bf8e8"
            ],
            [
                "f65aa30a.257e1"
            ]
        ]
    },
    {
        "id": "30b2ec5611750843",
        "type": "subflow:1e460b6845924ff6",
        "z": "2a9473e4.f1606c",
        "name": "",
        "x": 310,
        "y": 500,
        "wires": [
            [
                "97f15fca.d175e"
            ]
        ]
    },
    {
        "id": "99858e69e378dabb",
        "type": "subflow:1e460b6845924ff6",
        "z": "2a9473e4.f1606c",
        "name": "",
        "x": 510,
        "y": 680,
        "wires": [
            [
                "e64aa84b.964c98"
            ]
        ]
    },
    {
        "id": "90f482b23b74fda6",
        "type": "subflow:1e460b6845924ff6",
        "z": "2a9473e4.f1606c",
        "name": "",
        "x": 210,
        "y": 800,
        "wires": [
            [
                "505a07d5.0db6f8"
            ]
        ]
    },
    {
        "id": "ecc3f1eba07835eb",
        "type": "subflow:1e460b6845924ff6",
        "z": "2a9473e4.f1606c",
        "name": "",
        "x": 730,
        "y": 800,
        "wires": [
            [
                "723fb670.88a0a8"
            ]
        ]
    },
    {
        "id": "4e300bbd395966ea",
        "type": "subflow:1e460b6845924ff6",
        "z": "2a9473e4.f1606c",
        "name": "",
        "x": 130,
        "y": 1040,
        "wires": [
            [
                "5216f65f.cf49b8"
            ]
        ]
    },
    {
        "id": "442628cd427e2a8a",
        "type": "http in",
        "z": "42e768745f2b135b",
        "name": "Logout",
        "url": "/api/Logout",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "76e4a2d87acb11af"
            ]
        ]
    },
    {
        "id": "9c13d97d75b37e67",
        "type": "b1-service-layer-request",
        "z": "42e768745f2b135b",
        "server": "596459b.d78c4a8",
        "name": "b1 session Logout",
        "serviceLayerMethod": "Logout",
        "httpMethod": "POST",
        "slResponseObject": "",
        "x": 510,
        "y": 180,
        "wires": [
            [
                "3f9c8e9cbd7839c4"
            ],
            []
        ]
    },
    {
        "id": "e3c7d55647f6f1e1",
        "type": "function",
        "z": "42e768745f2b135b",
        "name": "",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst { flowStartTimestamp } = msg.flowInfo;\nmsg.serviceLayer = {};\nmsg.configOverride = msg.reqSession;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n}\n\nif (entSessionId) {\n    // const reqSession = sessionInfo.filter(isReqSession);\n    // const reqSession = [ sessionInfo[sessionInfo.length - 1] ];\n    const sessionIndex = sessionInfo.findIndex(isReqSession);\n    // const session = sessionInfo.filter(isReqSession);\n    const b1Session = sessionInfo[sessionIndex].b1SessionId;\n    sessionInfo.splice(sessionIndex, 1);\n    if (b1Session){\n        const isReqB1Session = (elem) => {\n            return (\n                elem.b1SessionId === b1Session\n            )\n        }\n        var oSesIn = sessionInfo.filter(isReqB1Session);\n        global.set('sessionInfo', sessionInfo);\n        if (oSesIn.length === 0) {\n            msg.serviceLayer.sessionId = b1Session;\n            // msg.b1SessionId = b1Session;\n            return [null, msg];\n        }\n    }\n            \n           \n    msg.statusCode = 201;\n    msg.payload = 'Logout Successfull'\n    // msg.res.clearCookie('entSessionId');\n    return [msg, null];\n            \n        \n    \n}\n\nmsg.statusCode = 201;\nmsg.payload = 'Logout Successfull' \n// msg.res.clearCookie('entSessionId');\nreturn [msg, null];\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 100,
        "wires": [
            [
                "c450f9bb2c2d533b",
                "935666c4e6e4f2d4"
            ],
            [
                "9c13d97d75b37e67"
            ]
        ]
    },
    {
        "id": "3f9c8e9cbd7839c4",
        "type": "function",
        "z": "42e768745f2b135b",
        "name": "",
        "func": "msg.statusCode = 201;\nmsg.payload = 'Logout Successfull'\n// msg.res.clearCookie('entSessionId');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 160,
        "wires": [
            [
                "c450f9bb2c2d533b",
                "42a171fa9330dace"
            ]
        ]
    },
    {
        "id": "c450f9bb2c2d533b",
        "type": "http response",
        "z": "42e768745f2b135b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "42a171fa9330dace",
        "type": "debug",
        "z": "42e768745f2b135b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 870,
        "y": 280,
        "wires": []
    },
    {
        "id": "935666c4e6e4f2d4",
        "type": "debug",
        "z": "42e768745f2b135b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 80,
        "wires": []
    },
    {
        "id": "76e4a2d87acb11af",
        "type": "subflow:322da763fc08e6b1",
        "z": "42e768745f2b135b",
        "name": "",
        "env": [],
        "x": 240,
        "y": 120,
        "wires": [
            [
                "e3c7d55647f6f1e1"
            ],
            [
                "3f9c8e9cbd7839c4"
            ]
        ]
    },
    {
        "id": "6c95b2999dbb8188",
        "type": "function",
        "z": "7385682192eae7a5",
        "name": "Custom Attribute",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\nmsg.payload=reqSession[0].customAttributes\n\n// msg.flowInfo.sql = `select \"OcrCode\",\"OcrName\" from \"OOCR\"`;\n\n// msg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 200,
        "wires": [
            [
                "2fe57186f7d6949f"
            ]
        ]
    },
    {
        "id": "2fe57186f7d6949f",
        "type": "http response",
        "z": "7385682192eae7a5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 300,
        "wires": []
    },
    {
        "id": "512dd0c4284b5e7a",
        "type": "function",
        "z": "7385682192eae7a5",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 400,
        "wires": []
    },
    {
        "id": "ba8ec7085fbdc47e",
        "type": "subflow:322da763fc08e6b1",
        "z": "7385682192eae7a5",
        "name": "",
        "env": [],
        "x": 240,
        "y": 300,
        "wires": [
            [
                "6c95b2999dbb8188"
            ],
            [
                "2fe57186f7d6949f"
            ]
        ]
    },
    {
        "id": "03cf03c5b84d5c52",
        "type": "http in",
        "z": "7385682192eae7a5",
        "name": "GET CustomAttribute",
        "url": "/api/CustomAttribute",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "ba8ec7085fbdc47e"
            ]
        ]
    },
    {
        "id": "14e9df829372ea51",
        "type": "function",
        "z": "6a7a3582c19005df",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n\n// msg.flowInfo.sql = `SELECT * FROM \"OHEM\" where \"manager\"='${reqSession[0].customAttributes.EmpID}'`;\nmsg.flowInfo.sql = `SELECT \"OUSR\".\"USER_CODE\",\"OHEM\".* FROM \"OHEM\" left join \"OUSR\" on \"OUSR\".\"USERID\"=\"OHEM\".\"userId\" where \"OHEM\".\"manager\"='${reqSession[0].customAttributes.EmpID}'  and \"OHEM\".\"Active\"='Y'`;\n\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 60,
        "wires": [
            [
                "7ca507d573ef34ce",
                "d3ab7a1bbf169d0f"
            ]
        ]
    },
    {
        "id": "7ca507d573ef34ce",
        "type": "debug",
        "z": "6a7a3582c19005df",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 390,
        "y": 40,
        "wires": []
    },
    {
        "id": "af0f8c743392f312",
        "type": "HanaClient-request",
        "z": "6a7a3582c19005df",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 567,
        "y": 129,
        "wires": [
            [
                "71c36c0f75f7473d",
                "077086181c0e2966"
            ],
            [
                "5c2726628a19a8e5",
                "cdf615ae0a226de9",
                "077086181c0e2966"
            ]
        ]
    },
    {
        "id": "71c36c0f75f7473d",
        "type": "debug",
        "z": "6a7a3582c19005df",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "5c2726628a19a8e5",
        "type": "debug",
        "z": "6a7a3582c19005df",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 140,
        "wires": []
    },
    {
        "id": "077086181c0e2966",
        "type": "http response",
        "z": "6a7a3582c19005df",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 220,
        "wires": []
    },
    {
        "id": "142b2084da4b78b8",
        "type": "subflow:322da763fc08e6b1",
        "z": "6a7a3582c19005df",
        "name": "",
        "env": [],
        "x": 260,
        "y": 220,
        "wires": [
            [
                "14e9df829372ea51"
            ],
            [
                "077086181c0e2966"
            ]
        ]
    },
    {
        "id": "ae98f5dec50b8e1b",
        "type": "http in",
        "z": "6a7a3582c19005df",
        "name": "GET Users",
        "url": "/api/users",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 120,
        "wires": [
            [
                "142b2084da4b78b8"
            ]
        ]
    },
    {
        "id": "cdf615ae0a226de9",
        "type": "function",
        "z": "6a7a3582c19005df",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 320,
        "wires": []
    },
    {
        "id": "ebecd4f9f5c164ce",
        "type": "function",
        "z": "6a7a3582c19005df",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n\nmsg.flowInfo.sql = `UPDATE \"OHEM\"\nSET \"U_ENT_PWD\"='${msg.md5}'\nWHERE \"empID\"=${msg.req.body.empId}`;\n\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 400,
        "wires": [
            [
                "5cf34df2387100f6",
                "80bd8e864b5d6eda"
            ]
        ]
    },
    {
        "id": "5cf34df2387100f6",
        "type": "debug",
        "z": "6a7a3582c19005df",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 607,
        "y": 449,
        "wires": []
    },
    {
        "id": "40fb3caddb05c2d9",
        "type": "HanaClient-request",
        "z": "6a7a3582c19005df",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 567,
        "y": 529,
        "wires": [
            [
                "9f329e3d874d8f29",
                "0bbd63657e7bd249"
            ],
            [
                "2cfe876baa6e9b05",
                "e218133c5d51bba9",
                "0bbd63657e7bd249"
            ]
        ]
    },
    {
        "id": "9f329e3d874d8f29",
        "type": "debug",
        "z": "6a7a3582c19005df",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 580,
        "wires": []
    },
    {
        "id": "2cfe876baa6e9b05",
        "type": "debug",
        "z": "6a7a3582c19005df",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 520,
        "wires": []
    },
    {
        "id": "0bbd63657e7bd249",
        "type": "http response",
        "z": "6a7a3582c19005df",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 620,
        "wires": []
    },
    {
        "id": "54b1161f4e4644f2",
        "type": "subflow:322da763fc08e6b1",
        "z": "6a7a3582c19005df",
        "name": "",
        "env": [],
        "x": 260,
        "y": 620,
        "wires": [
            [
                "c4ea9961fbac0c40"
            ],
            [
                "0bbd63657e7bd249"
            ]
        ]
    },
    {
        "id": "cddf43b0466bf50f",
        "type": "http in",
        "z": "6a7a3582c19005df",
        "name": "changePassword",
        "url": "/api/changePassword",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 520,
        "wires": [
            [
                "54b1161f4e4644f2"
            ]
        ]
    },
    {
        "id": "e218133c5d51bba9",
        "type": "function",
        "z": "6a7a3582c19005df",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 720,
        "wires": []
    },
    {
        "id": "c4ea9961fbac0c40",
        "type": "md5",
        "z": "6a7a3582c19005df",
        "name": "",
        "fieldToHash": "msg.req.body.password",
        "fieldTypeToHash": "msg",
        "hashField": "md5",
        "hashFieldType": "msg",
        "x": 310,
        "y": 460,
        "wires": [
            [
                "ebecd4f9f5c164ce"
            ]
        ]
    },
    {
        "id": "d3ab7a1bbf169d0f",
        "type": "subflow:1e460b6845924ff6",
        "z": "6a7a3582c19005df",
        "name": "",
        "x": 470,
        "y": 80,
        "wires": [
            [
                "af0f8c743392f312"
            ]
        ]
    },
    {
        "id": "31091e042635d53a",
        "type": "subflow:1e460b6845924ff6",
        "z": "6a7a3582c19005df",
        "name": "",
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "4e0a82cec1d01ef6",
        "type": "subflow:1e460b6845924ff6",
        "z": "6a7a3582c19005df",
        "name": "",
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "80bd8e864b5d6eda",
        "type": "subflow:1e460b6845924ff6",
        "z": "6a7a3582c19005df",
        "name": "",
        "x": 430,
        "y": 520,
        "wires": [
            [
                "40fb3caddb05c2d9"
            ]
        ]
    },
    {
        "id": "815e8d158bd674d6",
        "type": "http response",
        "z": "0331e70144eb556f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 260,
        "wires": []
    },
    {
        "id": "0046ac0924ca836b",
        "type": "HanaClient-request",
        "z": "0331e70144eb556f",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 169,
        "wires": [
            [
                "42b0e86d5801a3d7",
                "ce3a04b221454646"
            ],
            [
                "af0a48dee5e83773",
                "f1e3448252e23bd8",
                "815e8d158bd674d6"
            ]
        ]
    },
    {
        "id": "535de9662210a7f4",
        "type": "subflow:322da763fc08e6b1",
        "z": "0331e70144eb556f",
        "name": "",
        "env": [],
        "x": 280,
        "y": 260,
        "wires": [
            [
                "8996b476fc8dac99"
            ],
            [
                "815e8d158bd674d6"
            ]
        ]
    },
    {
        "id": "8996b476fc8dac99",
        "type": "function",
        "z": "0331e70144eb556f",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n\nmsg.flowInfo.sql = `SELECT T1.\"FldValue\" AS \"CodLivello1\" , T1.\"Descr\" as \"Livello1\" ,T3.\"U_Livello2\" AS \"CodLivello2\" ,\nT3.\"U_Livello2\" as \"Livello2\" ,T3.\"U_Livello3\" AS \"CodLivello3\" ,T3.\"U_Livello3\" as \"Livello3\" FROM \"UFD1\" AS T1\nINNER JOIN \"CUFD\" as T2 on T1.\"TableID\" = T2.\"TableID\" and T1.\"FieldID\" = T2.\"FieldID\"\n LEFT JOIN \"@ARTICOLI\" as T3 on T3.\"U_Livello1\" = T1.\"FldValue\"\n WHERE T2.\"TableID\" = 'OITM' and T2.\"AliasID\" = 'Livello1' AND T1.\"FldValue\" IS NOT NULL AND\n  T3.\"U_Livello2\" IS NOT NULL AND T3.\"U_Livello3\" IS NOT NULL\n  ORDER BY T1.\"FldValue\", T3.\"U_Livello2\", T3.\"U_Livello3\";`;\n\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 160,
        "wires": [
            [
                "fd0a2cce87a710a3",
                "cd3b19f49e1c11cb"
            ]
        ]
    },
    {
        "id": "42b0e86d5801a3d7",
        "type": "debug",
        "z": "0331e70144eb556f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 220,
        "wires": []
    },
    {
        "id": "af0a48dee5e83773",
        "type": "debug",
        "z": "0331e70144eb556f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 180,
        "wires": []
    },
    {
        "id": "f1e3448252e23bd8",
        "type": "function",
        "z": "0331e70144eb556f",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 360,
        "wires": []
    },
    {
        "id": "67f4a0c0b9c60709",
        "type": "http in",
        "z": "0331e70144eb556f",
        "name": "GET SearchTreeData",
        "url": "/api/SearchTreeData",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "535de9662210a7f4"
            ]
        ]
    },
    {
        "id": "fd0a2cce87a710a3",
        "type": "debug",
        "z": "0331e70144eb556f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 627,
        "y": 89,
        "wires": []
    },
    {
        "id": "ce3a04b221454646",
        "type": "function",
        "z": "0331e70144eb556f",
        "name": "",
        "func": "\nvar json = msg.payload\nnode.warn(json)\n\nif (!json) {\n    msg.payload = 'One of the connection paramaters is wrong.'\n    return msg;\n}\n\nconst treeData = []\nvar Codlivello1Old, Codlivello2Old\nvar node1, node2, node3 = {}\njson.forEach((record) => {\n    // Check Livello 1\n    if (record.CodLivello1 == Codlivello1Old) {\n        if (record.CodLivello2 == Codlivello2Old) {\n            node3 = {\n                \"text\": record.Livello3,\n                \"code\": record.CodLivello3\n            }\n            node2.nodes.push(node3)\n        }\n        else {\n            Codlivello2Old = record.CodLivello2\n            node3 = {\n                \"text\": record.Livello3,\n                \"code\": record.CodLivello3\n            }\n            node2 = {\n                \"text\": record.Livello2,\n                \"code\": record.CodLivello2,\n                \"nodes\": [node3]\n            }\n            node1.nodes.push(node2)\n        }\n    }\n    else {\n        Codlivello1Old = record.CodLivello1\n        Codlivello2Old = record.CodLivello2\n        node3 = {\n            \"text\": record.Livello3,\n            \"code\": record.CodLivello3\n        }\n        node2 = {\n            \"text\": record.Livello2,\n            \"code\": record.CodLivello2,\n            \"nodes\": [node3]\n        }\n        node1 = {\n            \"text\": record.Livello1,\n            \"code\": record.CodLivello1,\n            \"nodes\": [node2]\n        }\n        treeData.push(node1)\n    }\n})\n\n//msg.payload = {\"items\":treeData}\nmsg.payload = treeData\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 120,
        "wires": [
            [
                "815e8d158bd674d6"
            ]
        ]
    },
    {
        "id": "cd3b19f49e1c11cb",
        "type": "subflow:1e460b6845924ff6",
        "z": "0331e70144eb556f",
        "name": "",
        "x": 430,
        "y": 80,
        "wires": [
            [
                "0046ac0924ca836b"
            ]
        ]
    },
    {
        "id": "770da3af8085d4b7",
        "type": "http response",
        "z": "461250bf7f60a857",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 220,
        "wires": []
    },
    {
        "id": "e11ee92abe3512bd",
        "type": "HanaClient-request",
        "z": "461250bf7f60a857",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 567,
        "y": 129,
        "wires": [
            [
                "9ddefb6269bb0b5d",
                "ec44804166961a1e"
            ],
            [
                "361485e6d8d41b1e",
                "f49ee4d147a4d58c",
                "770da3af8085d4b7"
            ]
        ]
    },
    {
        "id": "d21067da9cc7f3d3",
        "type": "subflow:322da763fc08e6b1",
        "z": "461250bf7f60a857",
        "name": "",
        "env": [],
        "x": 120,
        "y": 280,
        "wires": [
            [
                "d1254d53f1af021d"
            ],
            [
                "770da3af8085d4b7"
            ]
        ]
    },
    {
        "id": "3f7221033c74ed4c",
        "type": "function",
        "z": "461250bf7f60a857",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\nvar sql = `SELECT * ` +\n    `FROM \\\"@ARTICOLI\\\" ` +\n    `WHERE \\\"U_Livello1\\\" = '` + msg.flowInfo.request.Level1Code + `' ` +\n    `AND  UPPER(REPLACE(\\\"U_Livello2\\\",' ','')) = UPPER('` + msg.flowInfo.request.Level2Code + `') ` +\n    `AND UPPER(REPLACE(\\\"U_Livello3\\\",' ','')) = UPPER('` + msg.flowInfo.request.Level3Code + `');`;\n\nmsg.flowInfo.sql = sql;\n\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 120,
        "wires": [
            [
                "ce154e8576df7a4e",
                "d24ed5cdaede49e4"
            ]
        ]
    },
    {
        "id": "9ddefb6269bb0b5d",
        "type": "debug",
        "z": "461250bf7f60a857",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "361485e6d8d41b1e",
        "type": "debug",
        "z": "461250bf7f60a857",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 140,
        "wires": []
    },
    {
        "id": "f49ee4d147a4d58c",
        "type": "function",
        "z": "461250bf7f60a857",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 320,
        "wires": []
    },
    {
        "id": "85ef01cb84f0ce95",
        "type": "http in",
        "z": "461250bf7f60a857",
        "name": "GET SearchFieldsData",
        "url": "/api/SearchFieldsData",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "d21067da9cc7f3d3"
            ]
        ]
    },
    {
        "id": "ce154e8576df7a4e",
        "type": "debug",
        "z": "461250bf7f60a857",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 607,
        "y": 49,
        "wires": []
    },
    {
        "id": "ec44804166961a1e",
        "type": "function",
        "z": "461250bf7f60a857",
        "name": "",
        "func": "// @ts-nocheck\nvar json = msg.payload\n\nconst treeData = []\nvar data = {}\n// Insert fixed fields start\n\ndata.id = \"p_fisso_lunghezza_1_unita_di_vendita\"\ndata.label = \"Lunghezza 1 - unita di vendita\"\ndata.Ordinamento = -1000;\n//    data.ui_field_input=\"\"\ndata.searchFeatures = {\n    \"searchEnabled\": false\n}\ntreeData.push(data)\n// @ts-ignore\ndata = {};\n\ndata.id = \"p_fisso_larghezza_1_unita_di_vendita\"\ndata.label = \"Larghezza 1 - unita di vendita\"\ndata.Ordinamento = -999;\n//    data.ui_field_input=\"\"\ndata.searchFeatures = {\n    \"searchEnabled\": false\n}\ntreeData.push(data)\n// @ts-ignore\ndata = {}\n\ndata.id = \"p_fisso_spessore\"\ndata.label = \"Spessore\"\ndata.Ordinamento = -998;\n//    data.ui_field_input=\"\"\ndata.searchFeatures = {\n    \"searchEnabled\": false\n}\ntreeData.push(data)\ndata = {}\n// Insert fixed fields ends\njson.forEach((record) => {\n\n    for (let field in record) {\n        if (record[field] == \"Y\") {\n            var fieldId = field.substring(2)\n            var pField = msg.flowInfo.paramToCampoOitm[fieldId];\n            if (pField) {\n                data.id = fieldId\n                node.warn(pField, pField.Etichetta)\n                data.label = pField.Etichetta\n                data.Ordinamento = pField.Ordinamento;\n                if (pField.CampoPadre) {\n                    data.CampoPadre = \"p_\" + pField.CampoPadre;\n                }\n                //data.ui_field_input=\"\"\n                data.searchFeatures = {\n                    \"searchEnabled\": true\n                }\n                treeData.push(data)\n            } else {\n                node.warn(`Attenzione : campo abilitato ${fieldId} non ha una definizione . Non bloccante, ma da verificare.`);\n            }\n            data = {}\n        }\n    }\n})\nmsg.payload = treeData\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 80,
        "wires": [
            [
                "770da3af8085d4b7"
            ]
        ]
    },
    {
        "id": "d1254d53f1af021d",
        "type": "function",
        "z": "461250bf7f60a857",
        "name": "",
        "func": "if (msg.req.query[\"Level1Code\"] === undefined ||\n    msg.req.query[\"Level2Code\"] === undefined ||\n    msg.req.query[\"Level3Code\"] === undefined) {\n    const err = `Params in the request not confirm`\n    msg.payload=err;\n    msg.statusCode = 404;\n    return [null, msg]\n} else {\n    if (msg.flowInfo === undefined) msg.flowInfo = {}\n    msg.flowInfo.request = {}\n    msg.flowInfo.request.Level1Code = msg.req.query[\"Level1Code\"]\n    msg.flowInfo.request.Level2Code = msg.req.query[\"Level2Code\"]\n    msg.flowInfo.request.Level3Code = msg.req.query[\"Level3Code\"]\n    return [msg, null]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 220,
        "wires": [
            [
                "9dd31388ad111605"
            ],
            [
                "770da3af8085d4b7"
            ]
        ]
    },
    {
        "id": "9dd31388ad111605",
        "type": "subflow:cc9afb6d.1e98a8",
        "z": "461250bf7f60a857",
        "name": "",
        "x": 340,
        "y": 180,
        "wires": [
            [
                "3f7221033c74ed4c"
            ]
        ]
    },
    {
        "id": "d24ed5cdaede49e4",
        "type": "subflow:1e460b6845924ff6",
        "z": "461250bf7f60a857",
        "name": "",
        "x": 410,
        "y": 60,
        "wires": [
            [
                "e11ee92abe3512bd"
            ]
        ]
    },
    {
        "id": "50292f9cb532c074",
        "type": "http response",
        "z": "c0effdf177c49a23",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 240,
        "wires": []
    },
    {
        "id": "1c532659ee295a3f",
        "type": "HanaClient-request",
        "z": "c0effdf177c49a23",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 567,
        "y": 149,
        "wires": [
            [
                "530be7b691a208d0",
                "78f7dfe437fb2ad2"
            ],
            [
                "1ab43dde45b42eab",
                "c163918a12219e62",
                "50292f9cb532c074"
            ]
        ]
    },
    {
        "id": "5bee12da1b540fab",
        "type": "subflow:322da763fc08e6b1",
        "z": "c0effdf177c49a23",
        "name": "",
        "env": [],
        "x": 120,
        "y": 300,
        "wires": [
            [
                "632e2b01bcdfbfeb"
            ],
            [
                "50292f9cb532c074"
            ]
        ]
    },
    {
        "id": "47da4eb0ab517b3a",
        "type": "function",
        "z": "c0effdf177c49a23",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nvar sql = \"\"\nnode.warn(msg.flowInfo.request.searchField)\nnode.warn(msg.flowInfo.paramToCampoOitm[msg.flowInfo.request.searchField].LookupQuery)\nif (msg.flowInfo.paramToCampoOitm[msg.flowInfo.request.searchField].LookupQuery === null || msg.flowInfo.paramToCampoOitm[msg.flowInfo.request.searchField].LookupQuery === '') {\n    var field = \"U_\" + msg.flowInfo.paramToCampoOitm[msg.flowInfo.request.searchField].CampoOITM\n    sql = \"SELECT DISTINCT \\\"\"\n    sql += field\n    sql += \"\\\" as \\\"Code\\\" , \\\"\"\n    sql += field\n    sql += \"\\\" as \\\"Name\\\" \"\n    sql += \" FROM OITM \"\n    sql += \"WHERE \\\"\" + field + \"\\\" IS NOT NULL AND \\\"\" + field + \"\\\" <> '';\"\n\n}\nelse {\n    var campoPadre = msg.flowInfo.paramToCampoOitm[msg.flowInfo.request.searchField].CampoPadre\n    sql = msg.flowInfo.paramToCampoOitm[msg.flowInfo.request.searchField].LookupQuery\n    if (campoPadre !== '') {\n        if (msg.flowInfo.request.ValoreCampoPadre === '' || msg.flowInfo.request.ValoreCampoPadre === undefined)\n            throw new Error('Il parametro ha bisogno del campo padre!!!')\n        sql = sql.replace('{0}', msg.flowInfo.request.ValoreCampoPadre)\n    }\n}\nnode.warn(sql)\n/*\nmsg.topic = \"SQL\";\nmsg.payload = [\n    `SET SCHEMA ${database}`,\n    sql\n];*/\nmsg.flowInfo.sql = sql\n// return msg;\n\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 140,
        "wires": [
            [
                "a9f3a7bd99f53e20",
                "1b575e093e19f27a"
            ]
        ]
    },
    {
        "id": "530be7b691a208d0",
        "type": "debug",
        "z": "c0effdf177c49a23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 200,
        "wires": []
    },
    {
        "id": "1ab43dde45b42eab",
        "type": "debug",
        "z": "c0effdf177c49a23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 160,
        "wires": []
    },
    {
        "id": "c163918a12219e62",
        "type": "function",
        "z": "c0effdf177c49a23",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 340,
        "wires": []
    },
    {
        "id": "6191b7bf89236dc8",
        "type": "http in",
        "z": "c0effdf177c49a23",
        "name": "INPUT GetPossibileValues - GET",
        "url": "/api/SearchFieldsData/GetPossibleValues",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "5bee12da1b540fab"
            ]
        ]
    },
    {
        "id": "a9f3a7bd99f53e20",
        "type": "debug",
        "z": "c0effdf177c49a23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 607,
        "y": 69,
        "wires": []
    },
    {
        "id": "78f7dfe437fb2ad2",
        "type": "function",
        "z": "c0effdf177c49a23",
        "name": "",
        "func": "var json = msg.payload\n\nvar data = []\nvar field = \"U_\" + msg.flowInfo.paramToCampoOitm[msg.flowInfo.request.searchField].CampoOITM\njson.forEach((record) => {\n    var firstKey = Object.keys(record)[0];\n    var secondKey = Object.keys(record)[1];\n    data.push({ \"Code\": record[firstKey], \"Name\": record[secondKey] })\n})\nmsg.payload = { [msg.flowInfo.request.searchField]: data }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 100,
        "wires": [
            [
                "50292f9cb532c074"
            ]
        ]
    },
    {
        "id": "632e2b01bcdfbfeb",
        "type": "function",
        "z": "c0effdf177c49a23",
        "name": "",
        "func": "if (msg.req.query.Field !== undefined) {\n    if (msg.flowInfo === undefined) msg.flowInfo = {}\n    msg.flowInfo.request = {}\n    msg.flowInfo.request.searchField = msg.req.query.Field\n    msg.flowInfo.request.ValoreCampoPadre = msg.req.query.ValoreCampoPadre\n    return msg\n}\nelse {\n    msg.toLogExtra = msg.b1SLerr;\n\n    msg.statusCode = 400;\n    msg.payload = 'Request is missing parameters';\n    return [null,msg];\n    // throw new Error('Request is missing parameters');\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "95e4627ec9e31f92"
            ],
            [
                "50292f9cb532c074"
            ]
        ]
    },
    {
        "id": "95e4627ec9e31f92",
        "type": "subflow:cc9afb6d.1e98a8",
        "z": "c0effdf177c49a23",
        "name": "",
        "x": 340,
        "y": 200,
        "wires": [
            [
                "47da4eb0ab517b3a"
            ]
        ]
    },
    {
        "id": "1b575e093e19f27a",
        "type": "subflow:1e460b6845924ff6",
        "z": "c0effdf177c49a23",
        "name": "",
        "x": 430,
        "y": 60,
        "wires": [
            [
                "1c532659ee295a3f"
            ]
        ]
    },
    {
        "id": "4105e7811702d806",
        "type": "http response",
        "z": "cd9e3458cc689864",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 280,
        "wires": []
    },
    {
        "id": "6f433acf18bbd571",
        "type": "HanaClient-request",
        "z": "cd9e3458cc689864",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 189,
        "wires": [
            [
                "d303b8eab1655244",
                "fabf82cf2515dec4"
            ],
            [
                "660a1d4bd17f45e3",
                "0a2e2c2698403810",
                "4105e7811702d806"
            ]
        ]
    },
    {
        "id": "3b7afb804587707d",
        "type": "subflow:322da763fc08e6b1",
        "z": "cd9e3458cc689864",
        "name": "",
        "env": [],
        "x": 140,
        "y": 340,
        "wires": [
            [
                "9265eae69dd01075"
            ],
            [
                "4105e7811702d806"
            ]
        ]
    },
    {
        "id": "24d899464e52c475",
        "type": "function",
        "z": "cd9e3458cc689864",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nvar sql = \"SELECT \" +\n    \"\\\"ItemCode\\\", \\\"ItemName\\\", \\\"Qualita\\\"\" +\n    \",\\\"SalUnitMsr\\\", \\\"InvntryUom\\\"\" +\n    \",\\\"Prz\\\"\" +\n    \",\\\"B_OnHand\\\", \\\"B_Libero\\\", \\\"B_OnOrder\\\"\" +\n    \",\\\"B_OnHand\\\" + \\\"B_Libero\\\" + \\\"B_OnOrder\\\" AS \\\"B_Sum\\\" \" +\n    \",\\\"X_OnHand\\\", \\\"X_Libero\\\", \\\"X_OnOrder\\\"\" +\n    \",\\\"B_OnHand\\\" + \\\"B_Libero\\\" + \\\"B_OnOrder\\\" + \\\"X_OnHand\\\" + \\\"X_Libero\\\" + \\\"X_OnOrder\\\" AS \\\"BX_Sum\\\"\" +\n    \" FROM \\\"VARv_CodificatoreRisultato_V2\\\"\" +\n    \" WHERE \" +\n    \"\\\"U_Livello1\\\" = '\" + msg.flowInfo.request.query[\"Level1Code\"] + \"' AND UPPER(REPLACE(\\\"U_Livello2\\\",' ','')) = UPPER('\" + msg.flowInfo.request.query[\"Level2Code\"] + \"') AND UPPER(REPLACE(\\\"U_Livello3\\\",' ','')) = UPPER('\" + msg.flowInfo.request.query[\"Level3Code\"] + \"')\"\nvar where = \"\";\nvar field = \"\";\nfor (var param in msg.flowInfo.request.query) {\n    if (param !== \"Level1Code\" && param !== \"Level2Code\" && param !== \"Level3Code\" && param !== \"keyUI\" && param !== \"database\" && param !== 'appSection') {\n        var field_values_from_request = msg.flowInfo.request.query[param];\n        if (param !== \"p_fisso_lunghezza_1_unita_di_vendita\" && param !== \"p_fisso_larghezza_1_unita_di_vendita\" && param !== \"p_fisso_spessore\") {\n            field = \"U_\" + msg.flowInfo.paramToCampoOitm[param].CampoOITM\n        }\n        else {\n            switch (param) {\n                case \"p_fisso_lunghezza_1_unita_di_vendita\":\n                    field = \"SLength1\"\n                    break\n                case \"p_fisso_larghezza_1_unita_di_vendita\":\n                    field = \"SWidth1\"\n                    break\n                case \"p_fisso_spessore\":\n                    field = \"SHeight1\"\n                    break\n            }\n        }\n        if (field_values_from_request.includes(\"|\")) {\n            //with multiple values in request : e.g. par=value1|value2\n            var par_values_list_where_string = field_values_from_request.replace(/\\'/g, \"\").replace(/\\|/g, \"','\");\n            where += (\" AND REPLACE(\\\"\" + field + \"\\\",' ','') IN ('\" + par_values_list_where_string + \"') \");\n\n        } else {\n            if (field === 'SLength1' || field === 'SWidth1' || field === 'SHeight1'){\n                if (msg.flowInfo.request.query[param].includes(\"-\")){\n                    where += (\" AND \\\"\" + field + \"\\\" BETWEEN  \" + msg.flowInfo.request.query[param].split(\"-\")[0] + \" AND \" + msg.flowInfo.request.query[param].split(\"-\")[1] + \" \");\n                }\n                else{\n                    where += (\" AND \\\"\" + field + \"\\\" = \" + msg.flowInfo.request.query[param] + \" \");\n               }\n            }\n            else\n                where += (\" AND REPLACE(\\\"\" + field + \"\\\",' ','') = '\" + msg.flowInfo.request.query[param] + \"' \");\n\n            //with single value in request : e.g. par=value1\n            //where += (\" AND REPLACE(\\\"\" + field + \"\\\",' ','') = '\" + msg.flowInfo.request.query[param] + \"' \");\n            //where += (\" AND REPLACE(TO_VARCHAR(\\\"\" + field + \"\\\"),' ','') = '\" + msg.flowInfo.request.query[param] + \"' \");\n        }\n\n    }\n}\nsql += where\n/*\nconst { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nmsg.topic = \"SQL\";\nmsg.payload = [\n    `SET SCHEMA ${database}`,\n    sql\n];*/\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\n\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 180,
        "wires": [
            [
                "ab33ea8f9019033b",
                "437ba233843de7e2"
            ]
        ]
    },
    {
        "id": "d303b8eab1655244",
        "type": "debug",
        "z": "cd9e3458cc689864",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 240,
        "wires": []
    },
    {
        "id": "660a1d4bd17f45e3",
        "type": "debug",
        "z": "cd9e3458cc689864",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 200,
        "wires": []
    },
    {
        "id": "0a2e2c2698403810",
        "type": "function",
        "z": "cd9e3458cc689864",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 380,
        "wires": []
    },
    {
        "id": "052b8ffbf55d4a96",
        "type": "http in",
        "z": "cd9e3458cc689864",
        "name": "INPUT SearchItemResults- GET",
        "url": "/api/SearchItemResults",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "3b7afb804587707d"
            ]
        ]
    },
    {
        "id": "ab33ea8f9019033b",
        "type": "debug",
        "z": "cd9e3458cc689864",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 627,
        "y": 109,
        "wires": []
    },
    {
        "id": "fabf82cf2515dec4",
        "type": "function",
        "z": "cd9e3458cc689864",
        "name": "",
        "func": "var json = msg.payload\n\nvar tableData = []\nvar data = {}\nvar idrow = 0\njson.forEach((record) => {\n\n    data = {\n        \"id_row\": ++idrow,\n        \"ItemCode\": record.ItemCode,\n        \"ItemName\": record.ItemName,\n        \"Qualita\": record.Qualita,\n        \"SalUnitMsr\": record.SalUnitMsr,\n        \"InvntryUom\": record.InvntryUom,\n        \"Prz\": record.Prz,\n        \"B_OnHand\": record.B_OnHand,\n        \"B_Libero\": record.B_Libero,\n        \"B_OnOrder\": record.B_OnOrder,\n        \"B_Sum\": record.B_Sum,\n        \"X_OnHand\": record.X_OnHand,\n        \"X_Libero\": record.X_Libero,\n        \"X_OnOrder\": record.X_OnOrder,\n        \"BX_Sum\": record.BX_Sum\n    }\n    tableData.push(data)\n})\nmsg.payload = tableData\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 140,
        "wires": [
            [
                "4105e7811702d806"
            ]
        ]
    },
    {
        "id": "9265eae69dd01075",
        "type": "function",
        "z": "cd9e3458cc689864",
        "name": "",
        "func": "if (msg.req.query[\"Level1Code\"] === undefined ||\n    msg.req.query[\"Level2Code\"] === undefined ||\n    msg.req.query[\"Level3Code\"] === undefined) {\n    const err = `Params in the request not confirm`;\n    msg.toLog = err;\n    msg.toLogExtra = err\n    msg.statusCode = 404;\n    msg.payload = err;\n    return [null, msg]\n} else {\n    if (msg.flowInfo === undefined) msg.flowInfo = {}\n    msg.flowInfo.request = {}\n    msg.flowInfo.request.query = msg.req.query\n    return [msg, null]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 280,
        "wires": [
            [
                "a9aadab863d3890b"
            ],
            [
                "4105e7811702d806",
                "0a2e2c2698403810"
            ]
        ]
    },
    {
        "id": "a9aadab863d3890b",
        "type": "subflow:cc9afb6d.1e98a8",
        "z": "cd9e3458cc689864",
        "name": "",
        "x": 360,
        "y": 240,
        "wires": [
            [
                "24d899464e52c475"
            ]
        ]
    },
    {
        "id": "437ba233843de7e2",
        "type": "subflow:1e460b6845924ff6",
        "z": "cd9e3458cc689864",
        "name": "",
        "x": 450,
        "y": 100,
        "wires": [
            [
                "6f433acf18bbd571"
            ]
        ]
    },
    {
        "id": "185a68a5b1cefe6d",
        "type": "http response",
        "z": "e541e876c940baae",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 300,
        "wires": []
    },
    {
        "id": "41c2ed9e3660f911",
        "type": "HanaClient-request",
        "z": "e541e876c940baae",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 567,
        "y": 209,
        "wires": [
            [
                "fa779acf1e54c381",
                "0d446b4e3c993918"
            ],
            [
                "cb39ab4d0ee76e1a",
                "2c2e0c1997bb10cf",
                "185a68a5b1cefe6d"
            ]
        ]
    },
    {
        "id": "2cf389fa766b02e0",
        "type": "subflow:322da763fc08e6b1",
        "z": "e541e876c940baae",
        "name": "",
        "env": [],
        "x": 120,
        "y": 360,
        "wires": [
            [
                "d2795174b9f3c883"
            ],
            [
                "185a68a5b1cefe6d"
            ]
        ]
    },
    {
        "id": "770ca980fce24f06",
        "type": "function",
        "z": "e541e876c940baae",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nvar sql = \"SELECT \" +\n    \"\\\"CompanyCode\\\", \\\"CompanyName\\\", \\\"ItemCode\\\"\" +\n    \",\\\"WhsCode\\\", \\\"WhsName\\\"\" +\n    \",\\\"WhsCode\\\"\" + \" || ' - ' || \" +\n    \"\\\"WhsName\\\" AS \\\"Warehouse\\\", \\\"OnHand\\\"\" +\n    \",\\\"Libero\\\", \\\"OnOrder\\\"\" +\n    \" FROM \\\"VARv_CodificatoreGiacenzeCollegate\\\"\" +\n    \" WHERE \\\"ItemCode\\\"=\";\n// \"UPPER(\\\"ItemName\\\") like '%\" + msg.flowInfo.request.query[\"KeyWords\"].toUpperCase() + \"%'\" ;\n\nconst { ItemCode } = msg.req.query;\n\n// let whereStatement = '';\n// const keyWords = msg.flowInfo.request.query[\"KeyWords\"].toUpperCase().split('|');\n// const totalKeyWords = keyWords.length;\n// keyWords.forEach((word, index) => {\n//     index < totalKeyWords - 1 ?\n//         whereStatement = whereStatement.concat(`(UPPER(\\\"ItemName\\\") like '%${word}%') ${KeyWordMethod} `) :\n//         whereStatement = whereStatement.concat(`(UPPER(\\\"ItemName\\\") like '%${word}%'))`);\n// });\n\n/*\n\nvar where=\"\", field =\"\"\nfor (var param in msg.flowInfo.request.query)\n{\n    if (param !== \"Level1Code\" && param !== \"Level2Code\" && param !== \"Level3Code\")\n    {\n        var field_values_from_request = msg.flowInfo.request.query[param];\n        if (param !== \"p_fisso_lunghezza_1_unita_di_vendita\" && param !== \"p_fisso_larghezza_1_unita_di_vendita\" && param !== \"p_fisso_spessore\")\n        {\n            field = \"U_\"+msg.flowInfo.paramToCampoOitm[param].CampoOITM \n        }\n        else\n        {\n            switch (param)\n            {\n                case \"p_fisso_lunghezza_1_unita_di_vendita\" :\n                    field = \"SLength1\"\n                    break\n                case \"p_fisso_larghezza_1_unita_di_vendita\" :\n                    field = \"SWidth1\"\n                    break\n                case \"p_fisso_spessore\" :\n                    field = \"SHeight1\"\n                    break\n            }\n        }\n        if (field_values_from_request.includes(\"|\")) {\n            //with multiple values in request : e.g. par=value1|value2\n            var par_values_list_where_string = field_values_from_request.replace(/\\|/g, \"','\");\n\n            where += (\" AND \\\"\" + field + \"\\\" IN ('\" + par_values_list_where_string + \"') \");\n\n        } else {\n            //with single values in request : e.g. par=value1|value2\n            where += (\" AND \\\"\" + field + \"\\\" = '\" + msg.flowInfo.request.query[param] + \"' \");\n        }\n            \n    }\n}\nsql += where\n*/\nmsg.flowInfo.sql = sql + `'${ItemCode}'`;\n// return msg;\n\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 200,
        "wires": [
            [
                "1a6e756c98581866",
                "cb9b7d3cd184ec71"
            ]
        ]
    },
    {
        "id": "fa779acf1e54c381",
        "type": "debug",
        "z": "e541e876c940baae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 260,
        "wires": []
    },
    {
        "id": "cb39ab4d0ee76e1a",
        "type": "debug",
        "z": "e541e876c940baae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "2c2e0c1997bb10cf",
        "type": "function",
        "z": "e541e876c940baae",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 400,
        "wires": []
    },
    {
        "id": "a1b39b30302dacc7",
        "type": "http in",
        "z": "e541e876c940baae",
        "name": "INPUT SearchItemResultsDetailByItemCode - GET",
        "url": "/api/SearchItemResultsDetailByItemCode",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "2cf389fa766b02e0"
            ]
        ]
    },
    {
        "id": "1a6e756c98581866",
        "type": "debug",
        "z": "e541e876c940baae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 607,
        "y": 129,
        "wires": []
    },
    {
        "id": "0d446b4e3c993918",
        "type": "function",
        "z": "e541e876c940baae",
        "name": "",
        "func": "var json = msg.payload\njson=json?json.length?json:[]:[];\n// node.warn(msg.payload)\n\n// var tableData = []\n// var data = {}\n// var idrow = 0\n// json.forEach((record)=>{\n\n//     data = {\n//             \"id_row\": ++idrow,\n//             \"ItemCode\": record.ItemCode,\n//             \"ItemName\": record.ItemName,\n//             \"Qualita\": record.Qualita,\n//             \"SalUnitMsr\": record.SalUnitMsr,\n//             \"InvntryUom\": record.InvntryUom,\n//             \"Prz\": record.Prz,\n//             \"B_OnHand\": record.B_OnHand,\n//             \"B_Libero\": record.B_Libero,\n//             \"B_OnOrder\": record.B_OnOrder,\n//             \"X_OnHand\": record.X_OnHand,\n//             \"X_Libero\": record.X_Libero,\n//             \"X_OnOrder\": record.X_OnOrder\n//           }\n//     tableData.push(data)\n// }) \n// msg.payload =tableData\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 160,
        "wires": [
            [
                "185a68a5b1cefe6d"
            ]
        ]
    },
    {
        "id": "d2795174b9f3c883",
        "type": "function",
        "z": "e541e876c940baae",
        "name": "",
        "func": "if (msg.req.query[\"ItemCode\"] === undefined) {\n    return [\"ItemCode Parameter is missing\", msg]\n} else {\n    if (msg.flowInfo === undefined) msg.flowInfo = {}\n    msg.flowInfo.request = {}\n    msg.flowInfo.request.query = msg.req.query\n    return [msg, null]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 300,
        "wires": [
            [
                "770ca980fce24f06"
            ],
            [
                "185a68a5b1cefe6d",
                "2c2e0c1997bb10cf"
            ]
        ]
    },
    {
        "id": "cb9b7d3cd184ec71",
        "type": "subflow:1e460b6845924ff6",
        "z": "e541e876c940baae",
        "name": "",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "41c2ed9e3660f911"
            ]
        ]
    },
    {
        "id": "f2b920800221f056",
        "type": "http response",
        "z": "eb304ea81c03dcf6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 300,
        "wires": []
    },
    {
        "id": "52d1d5fa2f2c83cf",
        "type": "HanaClient-request",
        "z": "eb304ea81c03dcf6",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 530,
        "y": 200,
        "wires": [
            [
                "b51c288f706101ba",
                "34baf1f096d6307b"
            ],
            [
                "d2464e893e77bd03",
                "2d63f752eb0c717d",
                "f2b920800221f056"
            ]
        ]
    },
    {
        "id": "c8c6668ba886435b",
        "type": "function",
        "z": "eb304ea81c03dcf6",
        "name": "sql",
        "func": "msg.configOverride = {};\nif (!msg.flowInfo)\n    msg.flowInfo = {};\nmsg.flowInfo.sql = 'call SBOCOMMON.TMSP_GETCOMPLIST';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 200,
        "wires": [
            [
                "446486fc65416c85",
                "52d1d5fa2f2c83cf"
            ]
        ]
    },
    {
        "id": "b51c288f706101ba",
        "type": "debug",
        "z": "eb304ea81c03dcf6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "d2464e893e77bd03",
        "type": "debug",
        "z": "eb304ea81c03dcf6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "2d63f752eb0c717d",
        "type": "function",
        "z": "eb304ea81c03dcf6",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 300,
        "wires": []
    },
    {
        "id": "13307a5a9687a5a5",
        "type": "http in",
        "z": "eb304ea81c03dcf6",
        "name": "Get Companies",
        "url": "/api/getCompanies",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "880409d949ccfbd1"
            ]
        ]
    },
    {
        "id": "446486fc65416c85",
        "type": "debug",
        "z": "eb304ea81c03dcf6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 160,
        "wires": []
    },
    {
        "id": "34baf1f096d6307b",
        "type": "function",
        "z": "eb304ea81c03dcf6",
        "name": "",
        "func": "let companies = msg.payload;\n\nif (msg.flowInfo.config.portal) {\n    //2021.03.27 - [Vlad] - added possibility to filter company list \n    const regexPath = msg.flowInfo.config.portal['ENT_COMP_LIST_REGEX']\n    const companiesFiltered = msg.payload.filter(comp => {\n        //var path = new RegExp(\"^((DEV_GGR)(.(?!_DB$))+)$\",\"gmi\");\n        var path = new RegExp(regexPath);\n        return path.test(comp.dbName)\n    });\n    companies = companiesFiltered;\n}\nelse {\n    companies = [{ \"dbName\": \"NODB\", \"cmpName\": \"NO DATABASE - verificare config_flow.json - proprieta portal.ENT_COMP_LIST_REGEX\", \"versStr\": \"???\", \"dbUser\": \"???\", \"LOC\": \"???\", \"cmpStatus\": \"?\" }];\n}\n\n// const v2res = {\n    // d: {\n        // '__count': companies.length,\n        var results=companies.map(comp => {\n            const { dbName, cmpName } = comp;\n            const v2comp = {\n                cmpName,\n                dbName,\n                CompanyFullName: `${cmpName} (${dbName})`\n            }\n\n            return v2comp;\n        })\n    // }\n// }\n\nmsg.payload = results;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 180,
        "wires": [
            [
                "f2b920800221f056"
            ]
        ]
    },
    {
        "id": "880409d949ccfbd1",
        "type": "subflow:8b68de83.9195b",
        "z": "eb304ea81c03dcf6",
        "name": "",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "c8c6668ba886435b"
            ]
        ]
    },
    {
        "id": "52358ae63943df83",
        "type": "http response",
        "z": "4fec2bca85620dbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 300,
        "wires": []
    },
    {
        "id": "eb6cbfb2d9eec688",
        "type": "HanaClient-request",
        "z": "4fec2bca85620dbf",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 209,
        "wires": [
            [
                "86217c6ee315668c",
                "c42e77aa4685b05a"
            ],
            [
                "685fcbbda1143a8a",
                "1ae73ef510600150",
                "52358ae63943df83"
            ]
        ]
    },
    {
        "id": "1a97c1271d34a526",
        "type": "subflow:322da763fc08e6b1",
        "z": "4fec2bca85620dbf",
        "name": "",
        "env": [],
        "x": 140,
        "y": 360,
        "wires": [
            [
                "c24e9673b0f17187"
            ],
            [
                "52358ae63943df83"
            ]
        ]
    },
    {
        "id": "e619bccdbf44fe62",
        "type": "function",
        "z": "4fec2bca85620dbf",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nvar sql = \"SELECT \" +\n    \"\\\"ItemCode\\\", \\\"ItemName\\\", \\\"Qualita\\\", \\\"ClusterRotazione\\\" \" +\n    \",\\\"SalUnitMsr\\\", \\\"InvntryUom\\\"\" +\n    \",\\\"Prz\\\"\" +\n    \",\\\"B_OnHand\\\", \\\"B_Libero\\\", \\\"B_OnOrder\\\"\" +\n    \",\\\"B_OnHand\\\" + \\\"B_Libero\\\" + \\\"B_OnOrder\\\" AS \\\"B_Sum\\\" \" +\n    \",\\\"X_OnHand\\\", \\\"X_Libero\\\", \\\"X_OnOrder\\\"\" +\n    \",\\\"X_OnHand\\\" + \\\"X_Libero\\\" + \\\"X_OnOrder\\\" AS \\\"X_Sum\\\"\" +\n    \",\\\"B_OnHand\\\" + \\\"B_Libero\\\" + \\\"B_OnOrder\\\" + \\\"X_OnHand\\\" + \\\"X_Libero\\\" + \\\"X_OnOrder\\\" AS \\\"BX_Sum\\\"\" +\n    \" FROM \\\"VARv_CodificatoreRisultato_V2\\\"\" +\n    \" WHERE (\";\n// \"UPPER(\\\"ItemName\\\") like '%\" + msg.flowInfo.request.query[\"KeyWords\"].toUpperCase() + \"%'\" ;\n\nconst { KeyWordMethod } = msg.req.query;\n\nlet whereStatement = '';\nconst keyWords = msg.flowInfo.request.query[\"KeyWords\"].toUpperCase().split('|');\nconst totalKeyWords = keyWords.length;\nkeyWords.forEach((word, index) => {\n    index < totalKeyWords - 1 ?\n        whereStatement = whereStatement.concat(`(UPPER(\\\"ItemName\\\") like '%${word}%') ${KeyWordMethod} `) :\n        whereStatement = whereStatement.concat(`(UPPER(\\\"ItemName\\\") like '%${word}%'))`);\n});\n\n/*\n\nvar where=\"\", field =\"\"\nfor (var param in msg.flowInfo.request.query)\n{\n    if (param !== \"Level1Code\" && param !== \"Level2Code\" && param !== \"Level3Code\")\n    {\n        var field_values_from_request = msg.flowInfo.request.query[param];\n        if (param !== \"p_fisso_lunghezza_1_unita_di_vendita\" && param !== \"p_fisso_larghezza_1_unita_di_vendita\" && param !== \"p_fisso_spessore\")\n        {\n            field = \"U_\"+msg.flowInfo.paramToCampoOitm[param].CampoOITM \n        }\n        else\n        {\n            switch (param)\n            {\n                case \"p_fisso_lunghezza_1_unita_di_vendita\" :\n                    field = \"SLength1\"\n                    break\n                case \"p_fisso_larghezza_1_unita_di_vendita\" :\n                    field = \"SWidth1\"\n                    break\n                case \"p_fisso_spessore\" :\n                    field = \"SHeight1\"\n                    break\n            }\n        }\n        if (field_values_from_request.includes(\"|\")) {\n            //with multiple values in request : e.g. par=value1|value2\n            var par_values_list_where_string = field_values_from_request.replace(/\\|/g, \"','\");\n\n            where += (\" AND \\\"\" + field + \"\\\" IN ('\" + par_values_list_where_string + \"') \");\n\n        } else {\n            //with single values in request : e.g. par=value1|value2\n            where += (\" AND \\\"\" + field + \"\\\" = '\" + msg.flowInfo.request.query[param] + \"' \");\n        }\n            \n    }\n}\nsql += where\n*/\nmsg.flowInfo.sql = sql + whereStatement;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 200,
        "wires": [
            [
                "1936d1ab3f499646",
                "9970dc62bbc1370c"
            ]
        ]
    },
    {
        "id": "86217c6ee315668c",
        "type": "debug",
        "z": "4fec2bca85620dbf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 260,
        "wires": []
    },
    {
        "id": "685fcbbda1143a8a",
        "type": "debug",
        "z": "4fec2bca85620dbf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 220,
        "wires": []
    },
    {
        "id": "1ae73ef510600150",
        "type": "function",
        "z": "4fec2bca85620dbf",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 400,
        "wires": []
    },
    {
        "id": "addc4d4ab9972d96",
        "type": "http in",
        "z": "4fec2bca85620dbf",
        "name": "INPUT SearchItemResultsWithKeywords- GET",
        "url": "/api/SearchItemResultsWithKeywords",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "1a97c1271d34a526"
            ]
        ]
    },
    {
        "id": "1936d1ab3f499646",
        "type": "debug",
        "z": "4fec2bca85620dbf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 627,
        "y": 129,
        "wires": []
    },
    {
        "id": "c42e77aa4685b05a",
        "type": "function",
        "z": "4fec2bca85620dbf",
        "name": "",
        "func": "var json = msg.payload\n\nvar tableData = []\nvar data = {}\nvar idrow = 0\njson.forEach((record) => {\n\n    data = {\n        \"id_row\": ++idrow,\n        \"ItemCode\": record.ItemCode,\n        \"ItemName\": record.ItemName,\n        \"Qualita\": record.Qualita,\n        \"ClusterRotazione\": record.ClusterRotazione,\n        \"SalUnitMsr\": record.SalUnitMsr,\n        \"InvntryUom\": record.InvntryUom,\n        \"Prz\": record.Prz,\n        \"B_OnHand\": record.B_OnHand,\n        \"B_Libero\": record.B_Libero,\n        \"B_OnOrder\": record.B_OnOrder,\n        \"B_Sum\": record.B_Sum,\n        \"X_OnHand\": record.X_OnHand,\n        \"X_Libero\": record.X_Libero,\n        \"X_OnOrder\": record.X_OnOrder,\n        \"X_Sum\": record.X_Sum,\n        \"BX_Sum\": record.BX_Sum\n    }\n    tableData.push(data)\n})\nmsg.payload = tableData\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 160,
        "wires": [
            [
                "52358ae63943df83"
            ]
        ]
    },
    {
        "id": "c24e9673b0f17187",
        "type": "function",
        "z": "4fec2bca85620dbf",
        "name": "",
        "func": "// if (msg.req.query[\"ItemCode\"] === undefined) {\n//     return [\"KeyWords Parameter is missing\", msg]\n// } else {\n    if (msg.flowInfo === undefined) msg.flowInfo = {}\n    msg.flowInfo.request = {}\n    msg.flowInfo.request.query = msg.req.query\n    return [msg, null]\n// }\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 300,
        "wires": [
            [
                "e619bccdbf44fe62"
            ],
            [
                "52358ae63943df83",
                "1ae73ef510600150"
            ]
        ]
    },
    {
        "id": "9970dc62bbc1370c",
        "type": "subflow:1e460b6845924ff6",
        "z": "4fec2bca85620dbf",
        "name": "",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "eb6cbfb2d9eec688"
            ]
        ]
    },
    {
        "id": "f35e4de9ab09b291",
        "type": "http response",
        "z": "f408caca973204a5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 320,
        "wires": []
    },
    {
        "id": "a849d7f179b1fc15",
        "type": "HanaClient-request",
        "z": "f408caca973204a5",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 627,
        "y": 229,
        "wires": [
            [
                "1ef80507d16f73d5",
                "45eb89edf5b51332"
            ],
            [
                "abeab39041d78527",
                "6682552365d2f2ee",
                "f35e4de9ab09b291"
            ]
        ]
    },
    {
        "id": "61b4c45d49358c29",
        "type": "subflow:322da763fc08e6b1",
        "z": "f408caca973204a5",
        "name": "",
        "env": [],
        "x": 180,
        "y": 380,
        "wires": [
            [
                "98edf2bd3b6c4785"
            ],
            [
                "f35e4de9ab09b291"
            ]
        ]
    },
    {
        "id": "98edf2bd3b6c4785",
        "type": "function",
        "z": "f408caca973204a5",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\nvar sql = `\nWITH OHEMS_FOR_USERCODE AS (\nSELECT coalesce(T03.\"empID\",T02.\"empID\") as \"empID\" \nFROM OHEM T00\nLEFT JOIN OUSR T01  ON T00.\"userId\" = T01.USERID\nLEFT JOIN HTM1 T02  ON T00.\"empID\" = T02.\"empID\"\nLEFT JOIN HTM1 T03  ON (T02.\"teamID\" = T03.\"teamID\" AND T02.\"role\"='L')\nWHERE T01.\"USER_CODE\"='${userName}' --filtru efectiv pt nodered\n--WHERE T01.\"USER_CODE\"='roxana' --membru --tinem pt teste\n--WHERE T01.\"USER_CODE\"='021' --team lead --tinem pt teste\nUNION ALL\nSELECT -1 as \"empID\" FROM DUMMY --adauga cheie de join pt OCRD fara OwnerCode\n) \n--SELECT distinct \"OwnerCode\" FROM OCRD -- tinem pt teste\nSELECT \"OwnerCode\",\"CardCode\",\"CardName\",\"MailCity\", \"BalanceSys\" FROM OCRD\nINNER JOIN OHEMS_FOR_USERCODE ON (coalesce(OCRD.\"OwnerCode\",-1) = OHEMS_FOR_USERCODE.\"empID\")\nWHERE \"CardType\"<>'S'\n\n`;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 200,
        "wires": [
            [
                "be3828f40e31f7b0",
                "7659a7c69cb7f619"
            ]
        ]
    },
    {
        "id": "1ef80507d16f73d5",
        "type": "debug",
        "z": "f408caca973204a5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "abeab39041d78527",
        "type": "debug",
        "z": "f408caca973204a5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 240,
        "wires": []
    },
    {
        "id": "6682552365d2f2ee",
        "type": "function",
        "z": "f408caca973204a5",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 420,
        "wires": []
    },
    {
        "id": "7afc9ab7b164da9a",
        "type": "http in",
        "z": "f408caca973204a5",
        "name": "INPUT ClientList- GET",
        "url": "/api/ClientList",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "61b4c45d49358c29"
            ]
        ]
    },
    {
        "id": "be3828f40e31f7b0",
        "type": "debug",
        "z": "f408caca973204a5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 450,
        "y": 80,
        "wires": []
    },
    {
        "id": "45eb89edf5b51332",
        "type": "function",
        "z": "f408caca973204a5",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 180,
        "wires": [
            [
                "f35e4de9ab09b291"
            ]
        ]
    },
    {
        "id": "a0fa174f60dad957",
        "type": "function",
        "z": "f408caca973204a5",
        "name": "",
        "func": "if (msg.req.query[\"ItemCode\"] === undefined) {\n    return [\"KeyWords Parameter is missing\", msg]\n} else {\n    if (msg.flowInfo === undefined) msg.flowInfo = {}\n    msg.flowInfo.request = {}\n    msg.flowInfo.request.query = msg.req.query\n    return [msg, null]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 320,
        "wires": [
            [
                "98edf2bd3b6c4785"
            ],
            [
                "f35e4de9ab09b291",
                "6682552365d2f2ee"
            ]
        ]
    },
    {
        "id": "7659a7c69cb7f619",
        "type": "subflow:1e460b6845924ff6",
        "z": "f408caca973204a5",
        "name": "",
        "x": 530,
        "y": 120,
        "wires": [
            [
                "a849d7f179b1fc15"
            ]
        ]
    },
    {
        "id": "77bd6d8e947cabdc",
        "type": "http response",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 260,
        "wires": []
    },
    {
        "id": "c757cb5f451faac1",
        "type": "HanaClient-request",
        "z": "f8f36fd1bdd8ebf4",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 607,
        "y": 169,
        "wires": [
            [
                "c8bfc1ef7e44e3a6",
                "9f231bf1e158518d"
            ],
            [
                "3a0eacb3187f0bb7",
                "7f7977e53473d1b4",
                "77bd6d8e947cabdc"
            ]
        ]
    },
    {
        "id": "2b89093722c8d45d",
        "type": "subflow:322da763fc08e6b1",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "env": [],
        "x": 180,
        "y": 140,
        "wires": [
            [
                "599f79d8b5e1da36"
            ],
            [
                "77bd6d8e947cabdc"
            ]
        ]
    },
    {
        "id": "599f79d8b5e1da36",
        "type": "function",
        "z": "f8f36fd1bdd8ebf4",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\nvar sql = `select * from OCLG where \"CardCode\"='${msg.req.query.CardCode}'`;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "aa7087a31f5f3b82",
                "f18c68a5c56a2131"
            ]
        ]
    },
    {
        "id": "c8bfc1ef7e44e3a6",
        "type": "debug",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 590,
        "y": 220,
        "wires": []
    },
    {
        "id": "3a0eacb3187f0bb7",
        "type": "debug",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 180,
        "wires": []
    },
    {
        "id": "7f7977e53473d1b4",
        "type": "function",
        "z": "f8f36fd1bdd8ebf4",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 260,
        "wires": []
    },
    {
        "id": "886a281cba1c6e79",
        "type": "http in",
        "z": "f8f36fd1bdd8ebf4",
        "name": "Client List Activities",
        "url": "/api/ClientListActivities",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "2b89093722c8d45d"
            ]
        ]
    },
    {
        "id": "aa7087a31f5f3b82",
        "type": "debug",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 430,
        "y": 20,
        "wires": []
    },
    {
        "id": "9f231bf1e158518d",
        "type": "function",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 120,
        "wires": [
            [
                "77bd6d8e947cabdc"
            ]
        ]
    },
    {
        "id": "f18c68a5c56a2131",
        "type": "subflow:1e460b6845924ff6",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "x": 510,
        "y": 60,
        "wires": [
            [
                "c757cb5f451faac1"
            ]
        ]
    },
    {
        "id": "9f6cd3eb3f5e216e",
        "type": "http response",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 540,
        "wires": []
    },
    {
        "id": "d60b7e40603a2b8a",
        "type": "HanaClient-request",
        "z": "f8f36fd1bdd8ebf4",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 449,
        "wires": [
            [
                "3871275b3aa77702",
                "6711f284d2acd923"
            ],
            [
                "6183e4f990f16d38",
                "b3fa2416debf8430",
                "9f6cd3eb3f5e216e"
            ]
        ]
    },
    {
        "id": "92997128f9191fce",
        "type": "subflow:322da763fc08e6b1",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "env": [],
        "x": 160,
        "y": 420,
        "wires": [
            [
                "aef2270bf313aa23"
            ],
            [
                "9f6cd3eb3f5e216e"
            ]
        ]
    },
    {
        "id": "aef2270bf313aa23",
        "type": "function",
        "z": "f8f36fd1bdd8ebf4",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\nvar sql = `SELECT * FROM OCQG where \"GroupName\" NOT LIKE 'Business partners %'`;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 420,
        "wires": [
            [
                "e5996115ede2854c",
                "d2608d6a41c4e9ae"
            ]
        ]
    },
    {
        "id": "3871275b3aa77702",
        "type": "debug",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "6183e4f990f16d38",
        "type": "debug",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "b3fa2416debf8430",
        "type": "function",
        "z": "f8f36fd1bdd8ebf4",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 540,
        "wires": []
    },
    {
        "id": "651847e855736d10",
        "type": "http in",
        "z": "f8f36fd1bdd8ebf4",
        "name": "Client List Properties Field",
        "url": "/api/ClientListPropertiesField",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "92997128f9191fce"
            ]
        ]
    },
    {
        "id": "e5996115ede2854c",
        "type": "debug",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 300,
        "wires": []
    },
    {
        "id": "6711f284d2acd923",
        "type": "function",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 400,
        "wires": [
            [
                "9f6cd3eb3f5e216e"
            ]
        ]
    },
    {
        "id": "d2608d6a41c4e9ae",
        "type": "subflow:1e460b6845924ff6",
        "z": "f8f36fd1bdd8ebf4",
        "name": "",
        "x": 490,
        "y": 340,
        "wires": [
            [
                "d60b7e40603a2b8a"
            ]
        ]
    },
    {
        "id": "f8902abeba3f0102",
        "type": "http response",
        "z": "e4fe51cffe55d142",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 260,
        "wires": []
    },
    {
        "id": "4ba73609b49eeeaa",
        "type": "HanaClient-request",
        "z": "e4fe51cffe55d142",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 169,
        "wires": [
            [
                "83f2b894cf6dd3c6",
                "77d7a9c893f8f42d"
            ],
            [
                "9c41b52b05990d9a",
                "afc2c484f92818f8",
                "f8902abeba3f0102"
            ]
        ]
    },
    {
        "id": "68f0e6f590b6796b",
        "type": "subflow:322da763fc08e6b1",
        "z": "e4fe51cffe55d142",
        "name": "",
        "env": [],
        "x": 160,
        "y": 140,
        "wires": [
            [
                "ee9ea41c6e373764"
            ],
            [
                "f8902abeba3f0102"
            ]
        ]
    },
    {
        "id": "ee9ea41c6e373764",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\nvar sql = `select \"SlpCode\",\"SlpName\" from oslp`;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 140,
        "wires": [
            [
                "a6c76d43c9c31167",
                "70a0a513571172ac"
            ]
        ]
    },
    {
        "id": "83f2b894cf6dd3c6",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 220,
        "wires": []
    },
    {
        "id": "9c41b52b05990d9a",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 180,
        "wires": []
    },
    {
        "id": "afc2c484f92818f8",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 260,
        "wires": []
    },
    {
        "id": "a8a8fff852791a04",
        "type": "http in",
        "z": "e4fe51cffe55d142",
        "name": "VH_salesPerson",
        "url": "/api/VH_salesPerson",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "68f0e6f590b6796b"
            ]
        ]
    },
    {
        "id": "a6c76d43c9c31167",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 20,
        "wires": []
    },
    {
        "id": "77d7a9c893f8f42d",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 120,
        "wires": [
            [
                "f8902abeba3f0102"
            ]
        ]
    },
    {
        "id": "70a0a513571172ac",
        "type": "subflow:1e460b6845924ff6",
        "z": "e4fe51cffe55d142",
        "name": "",
        "x": 490,
        "y": 60,
        "wires": [
            [
                "4ba73609b49eeeaa"
            ]
        ]
    },
    {
        "id": "e115cb72caa9502b",
        "type": "http response",
        "z": "e4fe51cffe55d142",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 520,
        "wires": []
    },
    {
        "id": "0d2a8405b7dac1ad",
        "type": "HanaClient-request",
        "z": "e4fe51cffe55d142",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 429,
        "wires": [
            [
                "f21468a423965203",
                "5b3e3bbc1dd8966f"
            ],
            [
                "8e9ea5aaf18b3d3f",
                "3d7185d785cac878",
                "e115cb72caa9502b"
            ]
        ]
    },
    {
        "id": "d917709c1f84df3a",
        "type": "subflow:322da763fc08e6b1",
        "z": "e4fe51cffe55d142",
        "name": "",
        "env": [],
        "x": 160,
        "y": 400,
        "wires": [
            [
                "b0b087e44564884a"
            ],
            [
                "e115cb72caa9502b"
            ]
        ]
    },
    {
        "id": "b0b087e44564884a",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\n// var sql = `select \"empID\",\"lastName\",\"firstName\" from OHEM where \"dept\"=2`;\nvar sql = `select \"empID\",\"Code\",\"lastName\",\"firstName\" from OHEM `;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 400,
        "wires": [
            [
                "8f713909fb1b7134",
                "644863b1fcd31bd3"
            ]
        ]
    },
    {
        "id": "f21468a423965203",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 480,
        "wires": []
    },
    {
        "id": "8e9ea5aaf18b3d3f",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 440,
        "wires": []
    },
    {
        "id": "3d7185d785cac878",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 520,
        "wires": []
    },
    {
        "id": "0bac1dab2c3bb7ac",
        "type": "http in",
        "z": "e4fe51cffe55d142",
        "name": "VH_OHEM",
        "url": "/api/VH_OHEM",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 340,
        "wires": [
            [
                "d917709c1f84df3a"
            ]
        ]
    },
    {
        "id": "8f713909fb1b7134",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 280,
        "wires": []
    },
    {
        "id": "5b3e3bbc1dd8966f",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 380,
        "wires": [
            [
                "e115cb72caa9502b"
            ]
        ]
    },
    {
        "id": "644863b1fcd31bd3",
        "type": "subflow:1e460b6845924ff6",
        "z": "e4fe51cffe55d142",
        "name": "",
        "x": 490,
        "y": 320,
        "wires": [
            [
                "0d2a8405b7dac1ad"
            ]
        ]
    },
    {
        "id": "123b614d3ca35ca4",
        "type": "http response",
        "z": "e4fe51cffe55d142",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 800,
        "wires": []
    },
    {
        "id": "149e2a93362e3721",
        "type": "HanaClient-request",
        "z": "e4fe51cffe55d142",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 709,
        "wires": [
            [
                "af83e82c120c9a82",
                "24ad24c4f7da206d"
            ],
            [
                "bd3570d5b674f444",
                "8fe95138a55f7c74",
                "123b614d3ca35ca4"
            ]
        ]
    },
    {
        "id": "579d434b543a7440",
        "type": "subflow:322da763fc08e6b1",
        "z": "e4fe51cffe55d142",
        "name": "",
        "env": [],
        "x": 160,
        "y": 680,
        "wires": [
            [
                "b82e5b7bf1f60038"
            ],
            [
                "123b614d3ca35ca4"
            ]
        ]
    },
    {
        "id": "b82e5b7bf1f60038",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\nvar sql = `select * from OOND`;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 680,
        "wires": [
            [
                "8e9e950e15eb64b5",
                "b725bc18b650bfbe"
            ]
        ]
    },
    {
        "id": "af83e82c120c9a82",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 760,
        "wires": []
    },
    {
        "id": "bd3570d5b674f444",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 720,
        "wires": []
    },
    {
        "id": "8fe95138a55f7c74",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 800,
        "wires": []
    },
    {
        "id": "336675de95d5254c",
        "type": "http in",
        "z": "e4fe51cffe55d142",
        "name": "VH_Industry",
        "url": "/api/VH_Industry",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 620,
        "wires": [
            [
                "579d434b543a7440"
            ]
        ]
    },
    {
        "id": "8e9e950e15eb64b5",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 560,
        "wires": []
    },
    {
        "id": "24ad24c4f7da206d",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 660,
        "wires": [
            [
                "123b614d3ca35ca4"
            ]
        ]
    },
    {
        "id": "b725bc18b650bfbe",
        "type": "subflow:1e460b6845924ff6",
        "z": "e4fe51cffe55d142",
        "name": "",
        "x": 490,
        "y": 600,
        "wires": [
            [
                "149e2a93362e3721"
            ]
        ]
    },
    {
        "id": "33b130f193fa053d",
        "type": "http response",
        "z": "e4fe51cffe55d142",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6806aa295ae841d2",
        "type": "HanaClient-request",
        "z": "e4fe51cffe55d142",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 989,
        "wires": [
            [
                "f6b126bd5f31a5fe",
                "07d6d7c99185acb1"
            ],
            [
                "13893f6206a316d7",
                "f4bafe2e394f1a2a",
                "33b130f193fa053d"
            ]
        ]
    },
    {
        "id": "cdc11dc4e06fbe2f",
        "type": "subflow:322da763fc08e6b1",
        "z": "e4fe51cffe55d142",
        "name": "",
        "env": [],
        "x": 160,
        "y": 960,
        "wires": [
            [
                "f199352abd896b45"
            ],
            [
                "33b130f193fa053d"
            ]
        ]
    },
    {
        "id": "f199352abd896b45",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\n// var sql = `select \"GroupCode\",\"GroupName\" from OCRG`;\nvar sql = `select \"PayMethCod\",\"Descript\" from OPYM`;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 960,
        "wires": [
            [
                "fddca7dc7d3b999c",
                "bb33da05ed66bf4d"
            ]
        ]
    },
    {
        "id": "f6b126bd5f31a5fe",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 1040,
        "wires": []
    },
    {
        "id": "13893f6206a316d7",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f4bafe2e394f1a2a",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1080,
        "wires": []
    },
    {
        "id": "215cdcecce825f2c",
        "type": "http in",
        "z": "e4fe51cffe55d142",
        "name": "VH_Groups",
        "url": "/api/VH_Groups",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 900,
        "wires": [
            [
                "cdc11dc4e06fbe2f"
            ]
        ]
    },
    {
        "id": "fddca7dc7d3b999c",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 840,
        "wires": []
    },
    {
        "id": "07d6d7c99185acb1",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 940,
        "wires": [
            [
                "33b130f193fa053d"
            ]
        ]
    },
    {
        "id": "bb33da05ed66bf4d",
        "type": "subflow:1e460b6845924ff6",
        "z": "e4fe51cffe55d142",
        "name": "",
        "x": 490,
        "y": 880,
        "wires": [
            [
                "6806aa295ae841d2"
            ]
        ]
    },
    {
        "id": "68a39ac5ac4c93fb",
        "type": "http response",
        "z": "e4fe51cffe55d142",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 1360,
        "wires": []
    },
    {
        "id": "2ea3cf63457a69f1",
        "type": "HanaClient-request",
        "z": "e4fe51cffe55d142",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 1269,
        "wires": [
            [
                "61d691005061aaea",
                "69d5010eb1ac75c4"
            ],
            [
                "68a39ac5ac4c93fb",
                "9502c947fb0daec5",
                "430f5f42d529d935"
            ]
        ]
    },
    {
        "id": "34ea6b9aa5599726",
        "type": "subflow:322da763fc08e6b1",
        "z": "e4fe51cffe55d142",
        "name": "",
        "env": [],
        "x": 160,
        "y": 1240,
        "wires": [
            [
                "e4749e409fe5cedb"
            ],
            [
                "68a39ac5ac4c93fb"
            ]
        ]
    },
    {
        "id": "e4749e409fe5cedb",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\nvar sql = `select \"GroupNum\",\"PymntGroup\" from OCTG order by \"GroupNum\"`;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1240,
        "wires": [
            [
                "82d6053dba227fa6",
                "ad336e6a23388987"
            ]
        ]
    },
    {
        "id": "61d691005061aaea",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9502c947fb0daec5",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 1280,
        "wires": []
    },
    {
        "id": "430f5f42d529d935",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1360,
        "wires": []
    },
    {
        "id": "866f895552c0871e",
        "type": "http in",
        "z": "e4fe51cffe55d142",
        "name": "VH_PayTermsGrpCode",
        "url": "/api/VH_PayTermsGrpCode",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1180,
        "wires": [
            [
                "34ea6b9aa5599726"
            ]
        ]
    },
    {
        "id": "82d6053dba227fa6",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 1120,
        "wires": []
    },
    {
        "id": "69d5010eb1ac75c4",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1220,
        "wires": [
            [
                "68a39ac5ac4c93fb"
            ]
        ]
    },
    {
        "id": "ad336e6a23388987",
        "type": "subflow:1e460b6845924ff6",
        "z": "e4fe51cffe55d142",
        "name": "",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "2ea3cf63457a69f1"
            ]
        ]
    },
    {
        "id": "3159825e73d802d3",
        "type": "http response",
        "z": "e4fe51cffe55d142",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 1680,
        "wires": []
    },
    {
        "id": "1656790c22edfc36",
        "type": "HanaClient-request",
        "z": "e4fe51cffe55d142",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 1589,
        "wires": [
            [
                "c89798c546818fca",
                "749b1b457c66ac1d"
            ],
            [
                "682c3fbd167afa75",
                "55581088abf967a8",
                "3159825e73d802d3"
            ]
        ]
    },
    {
        "id": "63c4fbf0c4178eae",
        "type": "subflow:322da763fc08e6b1",
        "z": "e4fe51cffe55d142",
        "name": "",
        "env": [],
        "x": 160,
        "y": 1560,
        "wires": [
            [
                "f24338951056c42d"
            ],
            [
                "3159825e73d802d3"
            ]
        ]
    },
    {
        "id": "f24338951056c42d",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\nvar sql = `select \"Code\",\"Name\" from OCRY`;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1560,
        "wires": [
            [
                "02648d70b453bd3f",
                "1dd74fa49cb909d6"
            ]
        ]
    },
    {
        "id": "c89798c546818fca",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 1640,
        "wires": []
    },
    {
        "id": "682c3fbd167afa75",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 1600,
        "wires": []
    },
    {
        "id": "55581088abf967a8",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1680,
        "wires": []
    },
    {
        "id": "55400b0c2c4240da",
        "type": "http in",
        "z": "e4fe51cffe55d142",
        "name": "VH_Country",
        "url": "/api/VH_Country",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1500,
        "wires": [
            [
                "63c4fbf0c4178eae"
            ]
        ]
    },
    {
        "id": "02648d70b453bd3f",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 1440,
        "wires": []
    },
    {
        "id": "749b1b457c66ac1d",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1540,
        "wires": [
            [
                "3159825e73d802d3"
            ]
        ]
    },
    {
        "id": "1dd74fa49cb909d6",
        "type": "subflow:1e460b6845924ff6",
        "z": "e4fe51cffe55d142",
        "name": "",
        "x": 490,
        "y": 1480,
        "wires": [
            [
                "1656790c22edfc36"
            ]
        ]
    },
    {
        "id": "33f24a8e8a8d0b04",
        "type": "http response",
        "z": "e4fe51cffe55d142",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 1980,
        "wires": []
    },
    {
        "id": "2ef7841c4b33650a",
        "type": "HanaClient-request",
        "z": "e4fe51cffe55d142",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 1889,
        "wires": [
            [
                "5cb09a551da60821",
                "9419e48487fcdc84"
            ],
            [
                "e52929db3966b69d",
                "b903a2d3facd1be4",
                "33f24a8e8a8d0b04"
            ]
        ]
    },
    {
        "id": "cd9c4fb253410eca",
        "type": "subflow:322da763fc08e6b1",
        "z": "e4fe51cffe55d142",
        "name": "",
        "env": [],
        "x": 160,
        "y": 1860,
        "wires": [
            [
                "f1687a09cdf39d02"
            ],
            [
                "33f24a8e8a8d0b04"
            ]
        ]
    },
    {
        "id": "f1687a09cdf39d02",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\n// node.warn(reqSession[0]);\nif (msg.req.query && msg.req.query.Country && msg.req.query.Country !==\"undefined\"){\n    var sql = `select \"Code\",\"Name\",\"Country\" from OCST where \"Country\"='${msg.req.query.Country}'`;\n}\nelse{\n    var sql = `select \"Code\",\"Name\",\"Country\" from OCST`;\n}\n\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1860,
        "wires": [
            [
                "eab4fe09774c7501",
                "72571b92d668539c"
            ]
        ]
    },
    {
        "id": "5cb09a551da60821",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 1940,
        "wires": []
    },
    {
        "id": "e52929db3966b69d",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 1900,
        "wires": []
    },
    {
        "id": "b903a2d3facd1be4",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1980,
        "wires": []
    },
    {
        "id": "b34d1d89be4599bf",
        "type": "http in",
        "z": "e4fe51cffe55d142",
        "name": "VH_State",
        "url": "/api/VH_State",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 1800,
        "wires": [
            [
                "cd9c4fb253410eca"
            ]
        ]
    },
    {
        "id": "eab4fe09774c7501",
        "type": "debug",
        "z": "e4fe51cffe55d142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 1740,
        "wires": []
    },
    {
        "id": "9419e48487fcdc84",
        "type": "function",
        "z": "e4fe51cffe55d142",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1840,
        "wires": [
            [
                "33f24a8e8a8d0b04"
            ]
        ]
    },
    {
        "id": "72571b92d668539c",
        "type": "subflow:1e460b6845924ff6",
        "z": "e4fe51cffe55d142",
        "name": "",
        "x": 490,
        "y": 1780,
        "wires": [
            [
                "2ef7841c4b33650a"
            ]
        ]
    },
    {
        "id": "3f7077ec29a1f614",
        "type": "http response",
        "z": "b4c909891809f71f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 320,
        "wires": []
    },
    {
        "id": "384b28445587e924",
        "type": "HanaClient-request",
        "z": "b4c909891809f71f",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 587,
        "y": 229,
        "wires": [
            [
                "ca7e66deafd61cbf",
                "2cc6f68325b188e1"
            ],
            [
                "d693a4d3fac5d175",
                "6e509ddc0449eb2b",
                "3f7077ec29a1f614"
            ]
        ]
    },
    {
        "id": "4bef4cf626559e79",
        "type": "subflow:322da763fc08e6b1",
        "z": "b4c909891809f71f",
        "name": "",
        "env": [],
        "x": 160,
        "y": 200,
        "wires": [
            [
                "019dcf8de410d3e7"
            ],
            [
                "3f7077ec29a1f614"
            ]
        ]
    },
    {
        "id": "019dcf8de410d3e7",
        "type": "function",
        "z": "b4c909891809f71f",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\nvar sql = `\nSELECT \"U_nomegrart\", \"U_sc1\", \"U_sc2\", \"U_sc3\", \"U_sc4\"\nFROM \"@SCONTI_BP_GR_ART\"\nWHERE \"U_codicebp\" = '${msg.req.query[\"ClientId\"]}'\n`;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 200,
        "wires": [
            [
                "0a5e0d5fb9ff67a9",
                "c54786827398d1c5"
            ]
        ]
    },
    {
        "id": "ca7e66deafd61cbf",
        "type": "debug",
        "z": "b4c909891809f71f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "d693a4d3fac5d175",
        "type": "debug",
        "z": "b4c909891809f71f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 240,
        "wires": []
    },
    {
        "id": "6e509ddc0449eb2b",
        "type": "function",
        "z": "b4c909891809f71f",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 320,
        "wires": []
    },
    {
        "id": "0bf9d9c11726edea",
        "type": "http in",
        "z": "b4c909891809f71f",
        "name": "Client Data",
        "url": "/api/ClientData",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 140,
        "wires": [
            [
                "4bef4cf626559e79"
            ]
        ]
    },
    {
        "id": "0a5e0d5fb9ff67a9",
        "type": "debug",
        "z": "b4c909891809f71f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 80,
        "wires": []
    },
    {
        "id": "2cc6f68325b188e1",
        "type": "function",
        "z": "b4c909891809f71f",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 180,
        "wires": [
            [
                "3f7077ec29a1f614"
            ]
        ]
    },
    {
        "id": "c54786827398d1c5",
        "type": "subflow:1e460b6845924ff6",
        "z": "b4c909891809f71f",
        "name": "",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "384b28445587e924"
            ]
        ]
    },
    {
        "id": "51c525aa5bb66d97",
        "type": "http response",
        "z": "5a9685c3252b1c35",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 260,
        "wires": []
    },
    {
        "id": "9bc1f7a60d914381",
        "type": "subflow:322da763fc08e6b1",
        "z": "5a9685c3252b1c35",
        "name": "",
        "env": [],
        "x": 180,
        "y": 180,
        "wires": [
            [
                "45bfa688b3911c2f"
            ],
            [
                "51c525aa5bb66d97"
            ]
        ]
    },
    {
        "id": "45bfa688b3911c2f",
        "type": "function",
        "z": "5a9685c3252b1c35",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\n\nmsg.payload=msg.req.body;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 100,
        "wires": [
            [
                "6f6dbdd58e300447",
                "eec865cab2cf0a10"
            ]
        ]
    },
    {
        "id": "15d64d3107dcc8ea",
        "type": "debug",
        "z": "5a9685c3252b1c35",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 870,
        "y": 40,
        "wires": []
    },
    {
        "id": "2c8e3a6f749779e9",
        "type": "debug",
        "z": "5a9685c3252b1c35",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 220,
        "wires": []
    },
    {
        "id": "ea47e9d73c712c87",
        "type": "function",
        "z": "5a9685c3252b1c35",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 300,
        "wires": []
    },
    {
        "id": "31a17c7e7e0c7587",
        "type": "http in",
        "z": "5a9685c3252b1c35",
        "name": "Batch call",
        "url": "/api/batchCall",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "9bc1f7a60d914381"
            ]
        ]
    },
    {
        "id": "6f6dbdd58e300447",
        "type": "debug",
        "z": "5a9685c3252b1c35",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 430,
        "y": 60,
        "wires": []
    },
    {
        "id": "5e9644d28613d50b",
        "type": "function",
        "z": "5a9685c3252b1c35",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 120,
        "wires": [
            [
                "51c525aa5bb66d97"
            ]
        ]
    },
    {
        "id": "eec865cab2cf0a10",
        "type": "subflow:1e460b6845924ff6",
        "z": "5a9685c3252b1c35",
        "name": "",
        "x": 510,
        "y": 100,
        "wires": [
            [
                "40e1dc497356d824"
            ]
        ]
    },
    {
        "id": "2fa427cc58631820",
        "type": "b1-service-layer-request",
        "z": "5a9685c3252b1c35",
        "server": "596459b.d78c4a8",
        "name": "Batch Call",
        "serviceLayerMethod": "",
        "httpMethod": "POST",
        "slResponseObject": "batchResource",
        "x": 570,
        "y": 180,
        "wires": [
            [
                "15e9f98c06c37b88",
                "2c8e3a6f749779e9"
            ],
            [
                "ea47e9d73c712c87",
                "51c525aa5bb66d97"
            ]
        ]
    },
    {
        "id": "40e1dc497356d824",
        "type": "Odata-Converter",
        "z": "5a9685c3252b1c35",
        "name": "",
        "httpMethod": "v4.1tov4.0",
        "x": 710,
        "y": 80,
        "wires": [
            [
                "2fa427cc58631820",
                "15d64d3107dcc8ea"
            ],
            []
        ]
    },
    {
        "id": "15e9f98c06c37b88",
        "type": "Odata-Converter",
        "z": "5a9685c3252b1c35",
        "name": "",
        "httpMethod": "v4.0tov4.1",
        "x": 770,
        "y": 160,
        "wires": [
            [
                "5e9644d28613d50b",
                "09b58657c5151c7c"
            ],
            []
        ]
    },
    {
        "id": "09b58657c5151c7c",
        "type": "debug",
        "z": "5a9685c3252b1c35",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 990,
        "y": 100,
        "wires": []
    },
    {
        "id": "513a81b0.7ddec",
        "type": "metadata-engine",
        "z": "f2739e90.9459f",
        "configFileName": "config_flow.json",
        "configType": "export-metadata",
        "x": 350,
        "y": 120,
        "wires": [
            [
                "aa8f45bf77521b05"
            ],
            [
                "46437a75.8aecd4"
            ]
        ]
    },
    {
        "id": "46437a75.8aecd4",
        "type": "debug",
        "z": "f2739e90.9459f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 140,
        "wires": []
    },
    {
        "id": "63a35213.71622c",
        "type": "json",
        "z": "f2739e90.9459f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 730,
        "y": 100,
        "wires": [
            [
                "7d232985.f89a68"
            ]
        ]
    },
    {
        "id": "7d232985.f89a68",
        "type": "file",
        "z": "f2739e90.9459f",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 740,
        "y": 140,
        "wires": [
            [
                "fe9bbfc0.38fa5"
            ]
        ]
    },
    {
        "id": "fe9bbfc0.38fa5",
        "type": "debug",
        "z": "f2739e90.9459f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 890,
        "y": 140,
        "wires": []
    },
    {
        "id": "84109b34.aad5a8",
        "type": "metadata-engine",
        "z": "f2739e90.9459f",
        "configFileName": "config_flow.json",
        "configType": "import-metadata",
        "x": 530,
        "y": 300,
        "wires": [
            [
                "9d965379.61883"
            ],
            [
                "daf8df52.3fcea"
            ]
        ]
    },
    {
        "id": "9d965379.61883",
        "type": "debug",
        "z": "f2739e90.9459f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 730,
        "y": 280,
        "wires": []
    },
    {
        "id": "daf8df52.3fcea",
        "type": "debug",
        "z": "f2739e90.9459f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 730,
        "y": 320,
        "wires": []
    },
    {
        "id": "f8c2797c.2b44e8",
        "type": "inject",
        "z": "f2739e90.9459f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 620,
        "wires": [
            [
                "3a4b0f8b.e7cd6"
            ]
        ]
    },
    {
        "id": "3a4b0f8b.e7cd6",
        "type": "function",
        "z": "f2739e90.9459f",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 620,
        "wires": [
            [
                "b0bc12d1.f7489"
            ]
        ]
    },
    {
        "id": "b0bc12d1.f7489",
        "type": "debug",
        "z": "f2739e90.9459f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 620,
        "wires": []
    },
    {
        "id": "3f9e290.149bbd8",
        "type": "comment",
        "z": "f2739e90.9459f",
        "name": "Import",
        "info": "",
        "x": 110,
        "y": 220,
        "wires": []
    },
    {
        "id": "523b53c0.20fd3c",
        "type": "comment",
        "z": "f2739e90.9459f",
        "name": "Export",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "aa8f45bf77521b05",
        "type": "function",
        "z": "f2739e90.9459f",
        "name": "file path&name",
        "func": "\nmsg.filename = `./projects/${global.get('redSettings').get('projects').activeProject}/Metadata/metadata_mde.json`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 100,
        "wires": [
            [
                "63a35213.71622c"
            ]
        ]
    },
    {
        "id": "b0128a0d8cb5d0aa",
        "type": "inject",
        "z": "f2739e90.9459f",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "513a81b0.7ddec"
            ]
        ]
    },
    {
        "id": "0bc52eaaa4db6127",
        "type": "inject",
        "z": "f2739e90.9459f",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "2417219d3c903f83"
            ]
        ]
    },
    {
        "id": "2417219d3c903f83",
        "type": "function",
        "z": "f2739e90.9459f",
        "name": "",
        "func": "msg.fileToImport = `${global.get('redSettings').userDir}projects\\\\${global.get('redSettings').get('projects').activeProject}\\\\Metadata\\\\metadata_mde.json`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 300,
        "wires": [
            [
                "84109b34.aad5a8"
            ]
        ]
    },
    {
        "id": "bb2244e9fd354052",
        "type": "inject",
        "z": "f2739e90.9459f",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 820,
        "wires": [
            [
                "815587a918b82b7b"
            ]
        ]
    },
    {
        "id": "e522d687a64f6a76",
        "type": "debug",
        "z": "f2739e90.9459f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 630,
        "y": 820,
        "wires": []
    },
    {
        "id": "815587a918b82b7b",
        "type": "file in",
        "z": "f2739e90.9459f",
        "name": "",
        "filename": "config_flow.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 340,
        "y": 820,
        "wires": [
            [
                "641917ba806ecb08"
            ]
        ]
    },
    {
        "id": "641917ba806ecb08",
        "type": "json",
        "z": "f2739e90.9459f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 490,
        "y": 820,
        "wires": [
            [
                "e522d687a64f6a76",
                "63ee9777816b1f6d"
            ]
        ]
    },
    {
        "id": "63ee9777816b1f6d",
        "type": "function",
        "z": "f2739e90.9459f",
        "name": "B1 Config",
        "func": "const { exportFrom } = msg.payload;\nmsg.configOverride = {\n    database: exportFrom.companyName,\n    userName: exportFrom.userName,\n    password: exportFrom.password,\n    serviceLayerUrl: exportFrom.serviceLayerUrl\n};\n\nmsg.configOverrideHana = {\n    \"server\": \"hanab1hdev20\",\n    \"port\": \"30015\",\n    \"database\": \"DEV_COMESTERO\",\n    \"userName\": \"SYSTEM\",\n    \"password\": \"HanaSysAdm1n\",\n    \"maxRecordSet\": 10000\n}\n// msg.serviceLayer = {\n\n// };\n// msg.serviceLayer = {\n//     method: `UserTablesMD?$filter=startswith(TableName, 'ENT_')`,\n//     headers: {\n//         'Prefer': 'odata.maxpagesize=0'\n//     }\n// };\n// msg.serviceLayer.method2 = `UserFieldsMD?$filter=startswith(Name, 'ENT_')`;\n// msg.serviceLayer.method3 = `UserFieldsMD?$filter=startswith(TableName, '@ENT_')`;\n\nmsg.exportFrom = exportFrom;\n// ${global.get('redSettings').get('projects').activeProject}\nmsg.filename = `./projects/${global.get('redSettings').get('projects').activeProject}/Metadata/metadata_mde.json`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "8515e0f692da2f2c",
        "type": "inject",
        "z": "f2739e90.9459f",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 900,
        "wires": [
            [
                "ada74f58f8be4701"
            ]
        ]
    },
    {
        "id": "9563b82ab4a0e1af",
        "type": "debug",
        "z": "f2739e90.9459f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 470,
        "y": 900,
        "wires": []
    },
    {
        "id": "df619ac27a584b8a",
        "type": "file in",
        "z": "f2739e90.9459f",
        "name": "",
        "filename": "config_flow.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 360,
        "y": 940,
        "wires": [
            [
                "bc9382b1fdfca2d5"
            ]
        ]
    },
    {
        "id": "bc9382b1fdfca2d5",
        "type": "json",
        "z": "f2739e90.9459f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 530,
        "y": 940,
        "wires": [
            [
                "cea83c7f5826c1d3"
            ]
        ]
    },
    {
        "id": "cea83c7f5826c1d3",
        "type": "function",
        "z": "f2739e90.9459f",
        "name": "B1 Config",
        "func": "const { importTo } = msg.payload;\nmsg.importTo  = importTo;\n\nmsg.configOverrideHana = {\n    \"server\": \"hanab1hdev20\",\n    \"port\": \"30015\",\n    \"database\": \"DEV_COMESTERO\",\n    \"userName\": \"SYSTEM\",\n    \"password\": \"HanaSysAdm1n\",\n    \"maxRecordSet\": 10000\n}\n\nmsg.filename = `./projects/${global.get('redSettings').get('projects').activeProject}/Metadata/metadata_mde.json`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 940,
        "wires": [
            [
                "cde29ab2337df4ab",
                "197e939eefb5139e"
            ]
        ]
    },
    {
        "id": "cde29ab2337df4ab",
        "type": "link out",
        "z": "f2739e90.9459f",
        "name": "",
        "links": [
            "4087f0aba350264c"
        ],
        "x": 855,
        "y": 980,
        "wires": []
    },
    {
        "id": "4087f0aba350264c",
        "type": "link in",
        "z": "f2739e90.9459f",
        "name": "",
        "links": [
            "cde29ab2337df4ab"
        ],
        "x": 125,
        "y": 1000,
        "wires": [
            [
                "6c0247ab8563f6dc"
            ]
        ]
    },
    {
        "id": "e97223431f89574e",
        "type": "function",
        "z": "f2739e90.9459f",
        "name": "set dataToImport",
        "func": "msg.dataToImport = msg.payload;\n\n// msg.configOverride = {};\n\n// msg.configOverride = {\n//     database: msg.importTo[0].companyName,\n//     userName: msg.importTo[0].userName,\n//     password: msg.importTo[0].password,\n//     serviceLayerUrl : msg.importTo[0].serviceLayerUrl\n// }\n\n// msg.serviceLayer = {\n//     method: `UserTablesMD`,\n//     method2: `UserFieldsMD`,\n//     method3: `UserFieldsMD`\n// };\n// msg.serviceLayer={};\n msg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "5a85caaf26e64266",
        "type": "json",
        "z": "f2739e90.9459f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "e97223431f89574e"
            ]
        ]
    },
    {
        "id": "6c0247ab8563f6dc",
        "type": "file in",
        "z": "f2739e90.9459f",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 280,
        "y": 1000,
        "wires": [
            [
                "5a85caaf26e64266"
            ]
        ]
    },
    {
        "id": "197e939eefb5139e",
        "type": "debug",
        "z": "f2739e90.9459f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 890,
        "y": 900,
        "wires": []
    },
    {
        "id": "ada74f58f8be4701",
        "type": "function",
        "z": "f2739e90.9459f",
        "name": "",
        "func": "msg.fileToImport = `${global.get('redSettings').userDir}/projects/${global.get('redSettings').get('projects').activeProject}/Metadata/metadata_mde.json`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 900,
        "wires": [
            [
                "9563b82ab4a0e1af"
            ]
        ]
    },
    {
        "id": "6a52ec6129207d1c",
        "type": "http response",
        "z": "a48c03e025f12cb7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 360,
        "wires": []
    },
    {
        "id": "31dc959f2d73c37a",
        "type": "HanaClient-request",
        "z": "a48c03e025f12cb7",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 607,
        "y": 269,
        "wires": [
            [
                "5bb3d0f334564b9a",
                "acf4d4451b942b3d"
            ],
            [
                "ee01f9889cfb8306",
                "10d8caaf0d7f2f11",
                "6a52ec6129207d1c"
            ]
        ]
    },
    {
        "id": "273e319d5cb9f365",
        "type": "subflow:322da763fc08e6b1",
        "z": "a48c03e025f12cb7",
        "name": "",
        "env": [],
        "x": 180,
        "y": 240,
        "wires": [
            [
                "b434e8dadb523f46"
            ],
            [
                "6a52ec6129207d1c"
            ]
        ]
    },
    {
        "id": "b434e8dadb523f46",
        "type": "function",
        "z": "a48c03e025f12cb7",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\nvar sql = `\nSELECT*\nFROM \"@ENT_PORTAL_PARAMS\"\n`;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 240,
        "wires": [
            [
                "53b62eeb65474227",
                "cea836e1acd3c1e9"
            ]
        ]
    },
    {
        "id": "5bb3d0f334564b9a",
        "type": "debug",
        "z": "a48c03e025f12cb7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "ee01f9889cfb8306",
        "type": "debug",
        "z": "a48c03e025f12cb7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 280,
        "wires": []
    },
    {
        "id": "10d8caaf0d7f2f11",
        "type": "function",
        "z": "a48c03e025f12cb7",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 360,
        "wires": []
    },
    {
        "id": "2fe3b39aa77634ad",
        "type": "http in",
        "z": "a48c03e025f12cb7",
        "name": "U_ENT_PORTAL_PARAMS",
        "url": "/api/U_ENT_PORTAL_PARAMS",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "273e319d5cb9f365"
            ]
        ]
    },
    {
        "id": "53b62eeb65474227",
        "type": "debug",
        "z": "a48c03e025f12cb7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 430,
        "y": 120,
        "wires": []
    },
    {
        "id": "acf4d4451b942b3d",
        "type": "function",
        "z": "a48c03e025f12cb7",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 220,
        "wires": [
            [
                "6a52ec6129207d1c"
            ]
        ]
    },
    {
        "id": "cea836e1acd3c1e9",
        "type": "subflow:1e460b6845924ff6",
        "z": "a48c03e025f12cb7",
        "name": "",
        "x": 510,
        "y": 160,
        "wires": [
            [
                "31dc959f2d73c37a"
            ]
        ]
    },
    {
        "id": "470f9168df548945",
        "type": "http response",
        "z": "df177455398999d0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 140,
        "wires": []
    },
    {
        "id": "b0c76ec17e70e7cf",
        "type": "HanaClient-request",
        "z": "df177455398999d0",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "da6b86a05143f045",
                "cf1c2e082f8746b5"
            ],
            [
                "4de5134933b661de",
                "f1c6464320d2f038"
            ]
        ]
    },
    {
        "id": "9c9ee3e05b641e07",
        "type": "subflow:322da763fc08e6b1",
        "z": "df177455398999d0",
        "name": "",
        "env": [],
        "x": 160,
        "y": 160,
        "wires": [
            [
                "54a52ebbf7df7012"
            ],
            [
                "d1b3e0492a62bf2b"
            ]
        ]
    },
    {
        "id": "54a52ebbf7df7012",
        "type": "function",
        "z": "df177455398999d0",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\nvar sql = `\nselect * from \"@ENT_PORT_SHOPCART\" where \"Code\"=${reqSession[0].customAttributes.EmpID}\n`;\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 80,
        "wires": [
            [
                "5584eb37c3c20f38",
                "835c3fb106e57833"
            ]
        ]
    },
    {
        "id": "da6b86a05143f045",
        "type": "debug",
        "z": "df177455398999d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 690,
        "y": 60,
        "wires": []
    },
    {
        "id": "4de5134933b661de",
        "type": "debug",
        "z": "df177455398999d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 470,
        "y": 200,
        "wires": []
    },
    {
        "id": "0e72d2ec8f65f30f",
        "type": "http in",
        "z": "df177455398999d0",
        "name": "Check Out Cart",
        "url": "/api/CheckoutCart",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "9c9ee3e05b641e07"
            ]
        ]
    },
    {
        "id": "5584eb37c3c20f38",
        "type": "debug",
        "z": "df177455398999d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 40,
        "wires": []
    },
    {
        "id": "cf1c2e082f8746b5",
        "type": "function",
        "z": "df177455398999d0",
        "name": "",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\nif(msg.payload && msg.payload.length===0){\n    var payload={\n        \"Code\": reqSession[0].customAttributes.EmpID,\n        \"Name\":\"\",\n        \"U_CartContent\":\"\"\n    }; \n    if (!msg.serviceLayer.headers)\n        msg.serviceLayer.headers = {};\n    msg.serviceLayer.headers[\"content-type\"] = msg.req.headers[\"content-type\"];\n    msg.serviceLayer.method = 'U_ENT_PORT_SHOPCART';\n    msg.serviceLayer.body=payload;\n    \n    return [null,msg];\n}\nmsg.payload=msg.payload[0];\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 140,
        "wires": [
            [
                "9a43613b6bf40f14"
            ],
            [
                "4ea60ff7d3b72fed"
            ]
        ]
    },
    {
        "id": "835c3fb106e57833",
        "type": "subflow:1e460b6845924ff6",
        "z": "df177455398999d0",
        "name": "",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "b0c76ec17e70e7cf"
            ]
        ]
    },
    {
        "id": "d1b3e0492a62bf2b",
        "type": "link out",
        "z": "df177455398999d0",
        "name": "",
        "mode": "link",
        "links": [
            "70ada8f36d1110d7"
        ],
        "x": 345,
        "y": 160,
        "wires": []
    },
    {
        "id": "f1c6464320d2f038",
        "type": "link out",
        "z": "df177455398999d0",
        "name": "",
        "mode": "link",
        "links": [
            "70ada8f36d1110d7"
        ],
        "x": 585,
        "y": 180,
        "wires": []
    },
    {
        "id": "70ada8f36d1110d7",
        "type": "link in",
        "z": "df177455398999d0",
        "name": "",
        "links": [
            "f1c6464320d2f038",
            "d1b3e0492a62bf2b",
            "9a43613b6bf40f14",
            "18bbeda9f18c4cdd",
            "91d94c59bea3873d"
        ],
        "x": 845,
        "y": 140,
        "wires": [
            [
                "470f9168df548945"
            ]
        ]
    },
    {
        "id": "9a43613b6bf40f14",
        "type": "link out",
        "z": "df177455398999d0",
        "name": "",
        "mode": "link",
        "links": [
            "70ada8f36d1110d7"
        ],
        "x": 755,
        "y": 120,
        "wires": []
    },
    {
        "id": "4ea60ff7d3b72fed",
        "type": "b1-service-layer-request",
        "z": "df177455398999d0",
        "server": "596459b.d78c4a8",
        "name": "",
        "serviceLayerMethod": "",
        "httpMethod": "POST",
        "slResponseObject": "cart Post",
        "x": 730,
        "y": 240,
        "wires": [
            [
                "470f9168df548945"
            ],
            [
                "470f9168df548945"
            ]
        ]
    },
    {
        "id": "9f386eb5a6f459f6",
        "type": "http in",
        "z": "df177455398999d0",
        "name": "Update Cart",
        "url": "/api/updateCart",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "ef9270ee50cfa358"
            ]
        ]
    },
    {
        "id": "ef9270ee50cfa358",
        "type": "subflow:322da763fc08e6b1",
        "z": "df177455398999d0",
        "name": "",
        "env": [],
        "x": 220,
        "y": 500,
        "wires": [
            [
                "bd247bb2d17ac6da"
            ],
            [
                "18bbeda9f18c4cdd"
            ]
        ]
    },
    {
        "id": "bd247bb2d17ac6da",
        "type": "function",
        "z": "df177455398999d0",
        "name": "payload",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\nvar payload = {\n    \"Code\": reqSession[0].customAttributes.EmpID,\n    \"Name\": \"\",\n    \"U_CartContent\": msg.req.body.cartData\n};\nif (!msg.serviceLayer.headers)\n    msg.serviceLayer.headers = {};\nmsg.serviceLayer.headers[\"content-type\"] = msg.req.headers[\"content-type\"];\nmsg.serviceLayer.method = `U_ENT_PORT_SHOPCART('${reqSession[0].customAttributes.EmpID}')`;\nmsg.serviceLayer.body = payload;\n// msg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 420,
        "wires": [
            [
                "435002ad35c3041a",
                "f434d694af34cd55"
            ]
        ]
    },
    {
        "id": "18bbeda9f18c4cdd",
        "type": "link out",
        "z": "df177455398999d0",
        "name": "",
        "mode": "link",
        "links": [
            "70ada8f36d1110d7"
        ],
        "x": 405,
        "y": 500,
        "wires": []
    },
    {
        "id": "f434d694af34cd55",
        "type": "subflow:1e460b6845924ff6",
        "z": "df177455398999d0",
        "name": "",
        "x": 550,
        "y": 420,
        "wires": [
            [
                "cbe00a80414a6d95"
            ]
        ]
    },
    {
        "id": "435002ad35c3041a",
        "type": "debug",
        "z": "df177455398999d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 470,
        "y": 380,
        "wires": []
    },
    {
        "id": "cbe00a80414a6d95",
        "type": "b1-service-layer-request",
        "z": "df177455398999d0",
        "server": "596459b.d78c4a8",
        "name": "",
        "serviceLayerMethod": "",
        "httpMethod": "PUT",
        "slResponseObject": "cart Post",
        "x": 690,
        "y": 480,
        "wires": [
            [
                "ad33a9084fcf659d",
                "7d2e5ff37223042c"
            ],
            [
                "ad33a9084fcf659d",
                "fb6a7c43776ac0da"
            ]
        ]
    },
    {
        "id": "ad33a9084fcf659d",
        "type": "http response",
        "z": "df177455398999d0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 480,
        "wires": []
    },
    {
        "id": "7d2e5ff37223042c",
        "type": "debug",
        "z": "df177455398999d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 850,
        "y": 420,
        "wires": []
    },
    {
        "id": "fb6a7c43776ac0da",
        "type": "debug",
        "z": "df177455398999d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 850,
        "y": 540,
        "wires": []
    },
    {
        "id": "75ca6e442a5925bf",
        "type": "http in",
        "z": "126e836d1563dc86",
        "name": "Validate Rule",
        "url": "/api/ValidateRule",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "6142ef19f0e7e2c2"
            ]
        ]
    },
    {
        "id": "6142ef19f0e7e2c2",
        "type": "subflow:322da763fc08e6b1",
        "z": "126e836d1563dc86",
        "name": "",
        "env": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "9a7a01afaf941d9d"
            ],
            [
                "91d94c59bea3873d"
            ]
        ]
    },
    {
        "id": "9a7a01afaf941d9d",
        "type": "function",
        "z": "126e836d1563dc86",
        "name": "payload",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\n\n// var payload = {\n//     \"Code\": reqSession[0].customAttributes.EmpID,\n//     \"Name\": \"\",\n//     \"U_CartContent\": msg.req.body.cartData\n// };\n// if (!msg.serviceLayer.headers)\n//     msg.serviceLayer.headers = {};\n// msg.serviceLayer.headers[\"content-type\"] = msg.req.headers[\"content-type\"];\n// msg.serviceLayer.method = `U_ENT_PORT_SHOPCART('${reqSession[0].customAttributes.EmpID}')`;\n// msg.serviceLayer.body = payload;\n// msg.payload=msg.flowInfo.sql;\n\nif (msg.req.body.length===0 ){\n    msg.statusCode = 400;\n    msg.payload={\n        \"HTTPCode\": 0,\n        \"Error_Message\": \"Not validated\"\n\n    };\n    return [null,msg];\n}\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 160,
        "wires": [
            [
                "3c9fa962636aca2c",
                "7d494e04014f1b30"
            ],
            [
                "7d494e04014f1b30"
            ]
        ]
    },
    {
        "id": "91d94c59bea3873d",
        "type": "link out",
        "z": "126e836d1563dc86",
        "name": "",
        "mode": "link",
        "links": [
            "70ada8f36d1110d7"
        ],
        "x": 345,
        "y": 240,
        "wires": []
    },
    {
        "id": "976369da54cd3b99",
        "type": "subflow:1e460b6845924ff6",
        "z": "126e836d1563dc86",
        "name": "",
        "x": 660,
        "y": 80,
        "wires": [
            [
                "c5c0b0eba0a6c34a"
            ]
        ]
    },
    {
        "id": "3c9fa962636aca2c",
        "type": "debug",
        "z": "126e836d1563dc86",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 120,
        "wires": []
    },
    {
        "id": "c5c0b0eba0a6c34a",
        "type": "b1-service-layer-request",
        "z": "126e836d1563dc86",
        "server": "596459b.d78c4a8",
        "name": "",
        "serviceLayerMethod": "",
        "httpMethod": "PUT",
        "slResponseObject": "cart Post",
        "x": 630,
        "y": 240,
        "wires": [
            [
                "7d494e04014f1b30",
                "e80da9d376ac6f13"
            ],
            [
                "7d494e04014f1b30",
                "a2efd9b566e80469"
            ]
        ]
    },
    {
        "id": "7d494e04014f1b30",
        "type": "http response",
        "z": "126e836d1563dc86",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 220,
        "wires": []
    },
    {
        "id": "e80da9d376ac6f13",
        "type": "debug",
        "z": "126e836d1563dc86",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 160,
        "wires": []
    },
    {
        "id": "a2efd9b566e80469",
        "type": "debug",
        "z": "126e836d1563dc86",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 280,
        "wires": []
    },
    {
        "id": "0b0b2566a85e410b",
        "type": "http response",
        "z": "8c51ee3b7ae835de",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 300,
        "wires": []
    },
    {
        "id": "d50e0ba0966faa52",
        "type": "HanaClient-request",
        "z": "8c51ee3b7ae835de",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "ca4268fe47123c3b",
                "236e9d40aad8c443"
            ],
            [
                "af88f2ffcd49d598",
                "3e40f39be24c6490",
                "0b0b2566a85e410b"
            ]
        ]
    },
    {
        "id": "3afcef28c1b82dbd",
        "type": "subflow:322da763fc08e6b1",
        "z": "8c51ee3b7ae835de",
        "name": "",
        "env": [],
        "x": 160,
        "y": 180,
        "wires": [
            [
                "928c3a03e05a97a3"
            ],
            [
                "0b0b2566a85e410b"
            ]
        ]
    },
    {
        "id": "928c3a03e05a97a3",
        "type": "function",
        "z": "8c51ee3b7ae835de",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\nvar oQuery = msg.req.query.oQuery;\nnode.warn(msg.req.query);\nif (oQuery && oQuery !== \"undefined\") {\n    node.warn(oQuery);\n    let zQuery = JSON.parse(oQuery);\n    oQuery = zQuery;\n    var fQuery = '';\n    for (const key in oQuery) { //iterate over the array of object\n        var value = oQuery[key];\n        node.warn(value);\n        // if()\n        // if (!fQuery) {\n        //     fQuery += ` WHERE `;\n        // }\n        // else {\n        fQuery += ' and ';\n        // }\n        if (oQuery[key] && oQuery[key] !== \"undefined\") {\n            switch (key) {\n                case 'U_NEO_JBS_STATUS':\n                    fQuery += `\"U_NEO_JBS_STATUS\" IN ('${value}')`;// + parseInt(value);\n                    break;\n                case 'CardCode':\n                    fQuery += `\"CardCode\"= '${value}'`;\n                    break;\n                case 'ProjectCode':\n                    fQuery += `\"ProjectCode\"= ${parseInt(value)} and \"Project_Structure_Owner_EmpID_List\" like '%,${reqSession[0].customAttributes.EmpID},%'`;\n                    break;\n                case 'TeamList_Supervisor_Of_UserEmployee':\n                    fQuery += `\"TeamList_Supervisor_Of_UserEmployee\" like '%,${value},%'`;\n                    break;\n                case 'DocDate':\n                    const oData = value;\n                    fQuery += `\"DocDate\">='${oData.end}' and \"DocDate\"<'${oData.start}'`;\n                    break;\n                default:\n                    break;\n            }\n        }\n\n    }\n};\nnode.warn(fQuery);\nvar sql = `select * from OQUT where \"SlpCode\"=${reqSession[0].customAttributes.salesPerson}` + fQuery;\nif (!fQuery) {\n    var sql = `select * from OQUT where \"SlpCode\"=${reqSession[0].customAttributes.salesPerson}`;\n}\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 160,
        "wires": [
            [
                "5f2009176754d20a",
                "b4a85629047445d5"
            ]
        ]
    },
    {
        "id": "ca4268fe47123c3b",
        "type": "debug",
        "z": "8c51ee3b7ae835de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "af88f2ffcd49d598",
        "type": "debug",
        "z": "8c51ee3b7ae835de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 260,
        "wires": []
    },
    {
        "id": "3e40f39be24c6490",
        "type": "function",
        "z": "8c51ee3b7ae835de",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 320,
        "wires": []
    },
    {
        "id": "8e31ae0cdc78589e",
        "type": "http in",
        "z": "8c51ee3b7ae835de",
        "name": "GET Sales Quotation",
        "url": "/api/getSalesQuotation",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "3afcef28c1b82dbd"
            ]
        ]
    },
    {
        "id": "5f2009176754d20a",
        "type": "debug",
        "z": "8c51ee3b7ae835de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 60,
        "wires": []
    },
    {
        "id": "236e9d40aad8c443",
        "type": "function",
        "z": "8c51ee3b7ae835de",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 160,
        "wires": [
            [
                "0b0b2566a85e410b"
            ]
        ]
    },
    {
        "id": "b4a85629047445d5",
        "type": "subflow:1e460b6845924ff6",
        "z": "8c51ee3b7ae835de",
        "name": "",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "d50e0ba0966faa52"
            ]
        ]
    },
    {
        "id": "b9ab2c025c188425",
        "type": "http response",
        "z": "addd85c3d5ea4e16",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "c27dd90f9d6003f5",
        "type": "HanaClient-request",
        "z": "addd85c3d5ea4e16",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 510,
        "y": 200,
        "wires": [
            [
                "a09c5ab97d4ce3f9",
                "3a89e0b680e72574"
            ],
            [
                "9f1b987c7161f8f6",
                "9645e470546f5802",
                "b9ab2c025c188425"
            ]
        ]
    },
    {
        "id": "73ae8ec5aa951002",
        "type": "subflow:322da763fc08e6b1",
        "z": "addd85c3d5ea4e16",
        "name": "",
        "env": [],
        "x": 140,
        "y": 200,
        "wires": [
            [
                "64d4661e28c3b22b"
            ],
            [
                "b9ab2c025c188425"
            ]
        ]
    },
    {
        "id": "64d4661e28c3b22b",
        "type": "function",
        "z": "addd85c3d5ea4e16",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\nvar oQuery = msg.req.query.oQuery;\nnode.warn(msg.req.query);\nif(oQuery && oQuery!==\"undefined\"){\n    node.warn(oQuery);\n    let zQuery=JSON.parse(oQuery);\n    oQuery=zQuery;\n    var fQuery = '';\n    for (const key in oQuery) { //iterate over the array of object\n        var value = oQuery[key];\n        node.warn(value);\n        // if()\n        // if (!fQuery) {\n        //     fQuery += ` WHERE `;\n        // }\n        // else {\n            fQuery += ' and ';\n        // }\n        if (oQuery[key] && oQuery[key] !== \"undefined\") {\n            switch (key) {\n                case 'U_NEO_JBS_STATUS':\n                    fQuery += `\"U_NEO_JBS_STATUS\" IN ('${value}')`;// + parseInt(value);\n                    break;\n                case 'CardCode':\n                    fQuery += `\"CardCode\"= '${value}'`;\n                    break;\n                case 'ProjectCode':\n                    fQuery += `\"ProjectCode\"= ${parseInt(value)} and \"Project_Structure_Owner_EmpID_List\" like '%,${reqSession[0].customAttributes.EmpID},%'`;\n                    break;\n                case 'TeamList_Supervisor_Of_UserEmployee':\n                    fQuery += `\"TeamList_Supervisor_Of_UserEmployee\" like '%,${value},%'`;\n                    break;\n                case 'DocDate':\n                    const oData = value;\n                    fQuery += `\"DocDate\">='${oData.end}' and \"DocDate\"<'${oData.start}'`;\n                    break;\n                default:\n                    break;\n            }\n        }\n\n    }\n};\nnode.warn(fQuery);\n\nvar sql = `select \"DocEntry\",\"DocNum\",\"CardCode\",\"CardName\",\"DocTotal\",\"DiscSum\" from ORDR where \"SlpCode\"=${reqSession[0].customAttributes.salesPerson}` + fQuery;\nif (!fQuery) {\n    var sql = `select \"DocEntry\",\"DocNum\",\"CardCode\",\"CardName\",\"DocTotal\",\"DiscSum\" from ORDR where \"SlpCode\"=${reqSession[0].customAttributes.salesPerson}`;\n\n}\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 160,
        "wires": [
            [
                "7dd2c019f9423eac",
                "c9f8857ea1d6f32a"
            ]
        ]
    },
    {
        "id": "a09c5ab97d4ce3f9",
        "type": "debug",
        "z": "addd85c3d5ea4e16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 650,
        "y": 140,
        "wires": []
    },
    {
        "id": "9f1b987c7161f8f6",
        "type": "debug",
        "z": "addd85c3d5ea4e16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 280,
        "wires": []
    },
    {
        "id": "9645e470546f5802",
        "type": "function",
        "z": "addd85c3d5ea4e16",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 340,
        "wires": []
    },
    {
        "id": "3b3a3881ac9e59d6",
        "type": "http in",
        "z": "addd85c3d5ea4e16",
        "name": "GET Sales Order",
        "url": "/api/getSalesOrder",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 140,
        "wires": [
            [
                "73ae8ec5aa951002"
            ]
        ]
    },
    {
        "id": "7dd2c019f9423eac",
        "type": "debug",
        "z": "addd85c3d5ea4e16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 390,
        "y": 80,
        "wires": []
    },
    {
        "id": "3a89e0b680e72574",
        "type": "function",
        "z": "addd85c3d5ea4e16",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 180,
        "wires": [
            [
                "b9ab2c025c188425"
            ]
        ]
    },
    {
        "id": "c9f8857ea1d6f32a",
        "type": "subflow:1e460b6845924ff6",
        "z": "addd85c3d5ea4e16",
        "name": "",
        "x": 470,
        "y": 120,
        "wires": [
            [
                "c27dd90f9d6003f5"
            ]
        ]
    },
    {
        "id": "c4470a7a1521ca9e",
        "type": "http response",
        "z": "08524c2b396022f3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "51adcb5071f0bf32",
        "type": "HanaClient-request",
        "z": "08524c2b396022f3",
        "server": "b298e45c.688258",
        "sql": "",
        "x": 570,
        "y": 180,
        "wires": [
            [
                "0c45b31a2922ebca",
                "9ba60f49958d3b86"
            ],
            [
                "8e6555cf73c886d5",
                "35eb45138ea703f1",
                "c4470a7a1521ca9e"
            ]
        ]
    },
    {
        "id": "bd6218f7a3730130",
        "type": "subflow:322da763fc08e6b1",
        "z": "08524c2b396022f3",
        "name": "",
        "env": [],
        "x": 200,
        "y": 180,
        "wires": [
            [
                "22e87a9005c1e6a7"
            ],
            [
                "c4470a7a1521ca9e"
            ]
        ]
    },
    {
        "id": "22e87a9005c1e6a7",
        "type": "function",
        "z": "08524c2b396022f3",
        "name": "sql",
        "func": "const sessionInfo = global.get('sessionInfo');\nconst { entSessionId } = msg.req.cookies;\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n};\nconst reqSession = sessionInfo.filter(isReqSession);\n// reqSession[0].customAttributes.EmpID\n//const { config: { 'hana-db-connection': { database } } } = msg.flowInfo;\nconst  userName  = reqSession[0].configOverride.userName;\nnode.warn(reqSession[0]);\nvar oQuery = msg.req.query.ItemCode;\nnode.warn(msg.req.query);\n\n\n\nvar sql = `select T1.\"ItemCode\",T2.\"Rate\" from \"OITM\" T1\ninner join \"OVTG\" T2 on T1.\"VatGourpSa\"=T2.\"Code\"\nwhere T1.\"ItemCode\" IN (${oQuery.toString()})` ;\n\n\nmsg.flowInfo.sql = sql\n// return msg;\n// return msg;\nmsg.payload=msg.flowInfo.sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 140,
        "wires": [
            [
                "2d91ea1a6e693dad",
                "b01077c925c53d2d"
            ]
        ]
    },
    {
        "id": "0c45b31a2922ebca",
        "type": "debug",
        "z": "08524c2b396022f3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 710,
        "y": 120,
        "wires": []
    },
    {
        "id": "8e6555cf73c886d5",
        "type": "debug",
        "z": "08524c2b396022f3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "35eb45138ea703f1",
        "type": "function",
        "z": "08524c2b396022f3",
        "name": "err throw",
        "func": "msg.toLogExtra = msg.b1SLerr ? msg.b1SLerr :msg.payload;\n\nmsg.statusCode = 400;\nnode.warn(msg)\nthrow new Error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 320,
        "wires": []
    },
    {
        "id": "4a7104f390d308cc",
        "type": "http in",
        "z": "08524c2b396022f3",
        "name": "GET VAT rate",
        "url": "/api/getVATRATE",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "bd6218f7a3730130"
            ]
        ]
    },
    {
        "id": "2d91ea1a6e693dad",
        "type": "debug",
        "z": "08524c2b396022f3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "9ba60f49958d3b86",
        "type": "function",
        "z": "08524c2b396022f3",
        "name": "",
        "func": "// if(msg.payload.length>0){\n//     msg.payload=msg.payload[0].Rate;\n// }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 160,
        "wires": [
            [
                "c4470a7a1521ca9e"
            ]
        ]
    },
    {
        "id": "b01077c925c53d2d",
        "type": "subflow:1e460b6845924ff6",
        "z": "08524c2b396022f3",
        "name": "",
        "x": 530,
        "y": 100,
        "wires": [
            [
                "51adcb5071f0bf32"
            ]
        ]
    },
    {
        "id": "f64aadaaaf7e685e",
        "type": "http in",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "url": "/cockpit/*",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "a5bc8e1a24621b76"
            ]
        ]
    },
    {
        "id": "a5bc8e1a24621b76",
        "type": "static",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "folder": "projects\\ENT_eCommerce_portal_API\\metadatacockpit/webapp",
        "x": 350,
        "y": 120,
        "wires": [
            [
                "7180488741929558"
            ]
        ]
    },
    {
        "id": "7180488741929558",
        "type": "http response",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 570,
        "y": 120,
        "wires": []
    },
    {
        "id": "7b3f45b19b06820c",
        "type": "settings-config",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "9a45534d9d4bed7f",
        "type": "http response",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 420,
        "wires": []
    },
    {
        "id": "7bd93379078afbd4",
        "type": "function",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "func": "// var oCompanies=global.get('Companies');\n// if(oCompanies){\n//     msg.payload=oCompanies;\n//     return [null,msg];\n    \n// }\nmsg.fileToImport = `${global.get('redSettings').userDir}projects\\\\${global.get('redSettings').get('projects').activeProject}\\\\Metadata\\\\metadata_mde.json`;\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "dffc68795bb83f4b"
            ],
            [
                "9a45534d9d4bed7f"
            ]
        ]
    },
    {
        "id": "369836022ac58c43",
        "type": "subflow:8b68de83.9195b",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "x": 210,
        "y": 320,
        "wires": [
            [
                "7bd93379078afbd4"
            ]
        ]
    },
    {
        "id": "b82129eccece5e16",
        "type": "http in",
        "z": "5e32f6c26e2f5357",
        "name": "Get Companies",
        "url": "/api/getMetaDataCompanies",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "369836022ac58c43"
            ]
        ]
    },
    {
        "id": "dffc68795bb83f4b",
        "type": "metadata-engine",
        "z": "5e32f6c26e2f5357",
        "configFileName": "config_flow.json",
        "configType": "check-metadata",
        "x": 650,
        "y": 300,
        "wires": [
            [
                "7832d0febb57b625"
            ],
            [
                "9a45534d9d4bed7f"
            ]
        ]
    },
    {
        "id": "8ec5e48367602301",
        "type": "http response",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 700,
        "wires": []
    },
    {
        "id": "b6d635ebda040f12",
        "type": "debug",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 560,
        "wires": []
    },
    {
        "id": "fa23f17383fe4727",
        "type": "function",
        "z": "5e32f6c26e2f5357",
        "name": "sql",
        "func": "msg.configOverride = {};\nif (!msg.flowInfo)\n    msg.flowInfo = {};\nmsg.flowInfo.sql = 'call SBOCOMMON.TMSP_GETCOMPLIST';\nnode.warn(msg.req.query.Schema);\nnode.warn(typeof(msg.req.query.Schema));\nnode.warn(JSON.parse(msg.req.query.Schema));\nvar oSchema = JSON.parse(msg.req.query.Schema);\nmsg.schema=oSchema;\nmsg.fileToImport = `${global.get('redSettings').userDir}projects\\\\${global.get('redSettings').get('projects').activeProject}\\\\Metadata\\\\metadata_mde.json`;\n\n// msg.payload=oSchema;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 600,
        "wires": [
            [
                "b6d635ebda040f12",
                "febbd0b2319351f0"
            ]
        ]
    },
    {
        "id": "07885eca71612188",
        "type": "subflow:8b68de83.9195b",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "x": 210,
        "y": 600,
        "wires": [
            [
                "fa23f17383fe4727"
            ]
        ]
    },
    {
        "id": "1986571b8f006ccf",
        "type": "http in",
        "z": "5e32f6c26e2f5357",
        "name": "Update Metadata Companies",
        "url": "/api/UpdateMetadata",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "07885eca71612188"
            ]
        ]
    },
    {
        "id": "febbd0b2319351f0",
        "type": "metadata-engine",
        "z": "5e32f6c26e2f5357",
        "configFileName": "config_flow.json",
        "configType": "import-metadata",
        "x": 570,
        "y": 620,
        "wires": [
            [
                "d81e6327f990bc9a"
            ],
            [
                "8ec5e48367602301"
            ]
        ]
    },
    {
        "id": "8d80ff44388c7c4c",
        "type": "inject",
        "z": "5e32f6c26e2f5357",
        "name": "onStart",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "start flow injected.",
        "payloadType": "str",
        "x": 100,
        "y": 360,
        "wires": [
            [
                "369836022ac58c43"
            ]
        ]
    },
    {
        "id": "7832d0febb57b625",
        "type": "function",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "func": "msg.allCompanies=msg.payload;\nglobal.set('Companies', msg.allCompanies);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 320,
        "wires": [
            [
                "9a45534d9d4bed7f"
            ]
        ]
    },
    {
        "id": "d81e6327f990bc9a",
        "type": "function",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "func": "msg.payload=msg.logData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 600,
        "wires": [
            [
                "8ec5e48367602301",
                "cedf74d093507537"
            ]
        ]
    },
    {
        "id": "cedf74d093507537",
        "type": "debug",
        "z": "5e32f6c26e2f5357",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 890,
        "y": 540,
        "wires": []
    }
]